syntax = "proto3"; 
package cloud.lianmi.im.global;
option go_package = "github.com/lianmi/servers/api/proto/global";

//重要！！！！ 数字 必须与 Global.h 保持一致
//业务模块定义
enum BusinessType {
    Bt_undefined     = 0;    //proto3必须从0开始
    User             = 1;    //用户模块
    Auth             = 2;    //鉴权授权模块
    Friends          = 3;    //好友模块
    Team             = 4;    //群组模块
    Msg              = 5;    //消息模块
    Sync             = 6;    //数据同步模块
    Product          = 7;    //商品模块
    Broadcast        = 8;    //广播模块
    Order            = 9;    //订单模块
    Wallet           = 10;   //钱包模块
    Log              = 11;   //日志模块
    Custom           = 99;   //自定义模块， 用于测试
}

//授权模块子模块定义
enum AuthSubType {
    Ast_undefined         = 0;    //proto3必须从0开始
    SignIn                = 1;    //取消：登录; 主动
    SignOut               = 2;    //退出登录; 主动
    MultiLoginEvent       = 3;    //多端登录事件 多端登录状态变化的回调, 会收到登录端列表, 以下情况会收到此回调
    Kick                  = 4;    //踢出其他设备; 主动
    KickedEvent           = 5;    //被其他终端踢下线事件
    AddSlaveDevice        = 6;    //增加从设备
    AuthorizeCode         = 7;    //从设备申请授权码
    RemoveSlaveDevice     = 8;    //主设备删除从设备，服务器端发送多终端事件, 同时删除设备记录。
    SlaveDeviceAuthEvent  = 9;    //从设备被授权登录后收到的推送
    GetAllDevices         = 10;   //向服务端查询所有主从设备列表
}


//用户模块子模块定义
enum UserSubType {
    Ust_undefined          = 0;    //proto3必须从0开始
    GetUsers               = 1;    /**< 根据用户标示返回用户信息*/
    UpdateUserProfile      = 2;    /**< 更新当前用户信息*/
    SyncUserProfileEvent   = 3;    /**< 登录成功后,用户资料增量更新事件*/
    SyncUpdateProfileEvent = 4;    /**< 用户资料更新事件,同一账号其他终端修改个人资料会触发该事件*/
    MarkTag                = 5;    /**< 用户打标*/
    SyncMarkTagEvent       = 6;    /**< 同步其它终端的好友添加、删除标签事件*/
    SyncTagsEvent          = 7;    /**< 同步用户标签列表*/
    NotaryServiceUploadPublickey =  8;    /**<第三方公证上传Rsa公钥*/
}

//好友模块子模块定义
enum FriendSubType {
    Fst_undefined         =  0;    //proto3必须从0开始
    FriendRequest         =  1;  /**< 好友请求发起与处理(直接添加/发起好友验证/拒绝/通过)*/
    FriendChangeEvent     =  2;  /**< <已取消>好友关系变更事件*/
    SyncFriendsEvent      =  3;  /**< 好友列表同步事件*/
    SyncFriendUsersEvent  =  4;  /**< 好友资料同步事件*/
    DeleteFriend          =  5;  /**< 删除好友*/
    UpdateFriend          =  6;  /**< 刷新好友资料*/ 
    SyncUpdateFriendEvent =  7;  /**< 主从设备好友资料同步事件*/
    GetFriends            =  8;  /**< 增量同步好友列表 */
    Watching              =  9;  /**< 关注商户 */
    CancelWatching        =  10;  /**< 取消关注商户 */
    SyncWatchEvent        =  11;  /**< 关注商户同步事件*/
}

//群组模块子模块定义
enum TeamSubType {
    Gst_undefined         =  0;    //proto3必须从0开始
    CreateTeam            =  1;  /**< 1.  创建群组*/
    GetTeamMembers        =  2;  /**< 2.  获取群组成员*/
    GetTeam               =  3;  /**< 暂时不开发 3.  查询群组*/
    InviteTeamMembers     =  4;  /**< 4.  邀请好友加入群组*/
    RemoveTeamMembers     =  5;  /**< 5.  删除群组成员*/
    AcceptTeamInvite      =  6;  /**< 6.  接受群邀请*/
    RejectTeamInvite      =  7;  /**< 7.  拒绝群邀请*/
    ApplyTeam             =  8;  /**< 8.  申请加群*/
    PassTeamApply         =  9;  /**< 9.  通过群申请*/
    RejectTeamApply       =  10; /**< 10. 拒绝群申请*/
    UpdateTeam            =  11; /**< 11. 更新群组信息*/
    DismissTeam           =  12; /**< 暂时不开发 12. 解散群组*/
    LeaveTeam             =  13; /**< 13. 离开群组*/
    AddTeamManagers       =  14; /**< 14. 设置群管理员*/
    RemoveTeamManagers    =  15; /**< 15. 取消群管理员*/
    TransferTeam          =  16; /**< 暂时不开发 16. 转让群*/
    SyncMyTeamsEvent      =  17; /**< 17. 同步群组事件*/
    MuteTeam              =  18; /**< 18. 修改群禁言模式*/
    MuteTeamMember        =  19; /**< 19. 设置群成员禁言*/
    SetNotifyType         =  20; /**< 20. 修改群组消息通知方式*/
    UpdateMyInfo          =  21; /**< 21. 修改个人群资料*/
    UpdateMemberInfo      =  22; /**< 22. 设置群成员资料*/
    SyncCreateTeam        =  23; /**< 23. 创建群组多终端同步事件 */
    PullTeamMembers       =  24; /**< 24. 根据群成员ID获取群成员信息 */
    GetMyTeams            =  25; /**< 25. 增量群组信息 */
    CheckTeamInvite       =  26; /**< 26. 管理员审核邀请入群 */
    GetMembersPage        =  27; /**< 27. 分页获取群组成员信息*/
}

//消息模块子模块定义
enum MsgSubType {
    Cst_undefined                = 0;    //proto3必须从0开始
    SendMsg                      = 1;    /**< 1.  发送消息*/
    RecvMsgEvent                 = 2;    /**< 2.  接收消息事件*/
    SyncOfflineSysMsgsEvent      = 3;    /**< 3.  同步系统离线消息*/
    //DeleteSessions             = 4;    /**< 4.  <已 >删除会话*/
    SyncSendMsgEvent             = 5;    /**< 5.  发送消息多终端同步事件 */
    SendCancelMsg                = 6;    /**< 6.  发送撤销消息 */
    RecvCancelMsgEvent           = 7;    /**< 7.  接收撤销消息事件 */
    SyncSendCancelMsgEvent       = 8;    /**< 8. 主从设备同步发送撤销消息的事件 */
    //SyncUpdateConversationEvent  = 10;   /**< 10. 同步更新会话 */
    UpdateConversation           = 11;   /**< 11. 更新会话 */
}


//同步模块子模块定义
enum SyncSubType {
    Syn_undefined  = 0;     //proto3必须从0开始
    SyncEvent      = 1;     /**< 1. 同步请求*/
    SyncDoneEvent  = 2;     /**< 2. 同步结束事件*/
}

//商品模块子模块定义
enum ProductSubType {
    PST_undefined                =  0;     //proto3必须从0开始
    QueryProducts                =  1;     /**< 7-1. 查询某个商户的所有商品信息*/
    AddProduct                   =  2;     /**< 7-2. 商品上架*/
    UpdateProduct                =  3;     /**< 7-3. 商品编辑更新*/
    SoldoutProduct               =  4;     /**< 7-4. 商品下架*/
    AddProductEvent              =  5;     /**< 7-5. 新商品上架事件*/
    UpdateProductEvent           =  6;     /**< 7-6. 已有商品的编辑更新事件*/
    SoldoutProductEvent          =  7;     /**< 7-7. 商品下架事件*/
    SyncProductEvent             =  8;     /**< 7-8. 同步关注的商户商品信息事件*/
    SyncGeneralProductsEvent     =  9;     /**< 7-9 同步通用商品表*/
}


//订单模块子模块定义
enum OrderSubType {
    OST_undefined     =  0;     //proto3必须从0开始
    RegisterPreKeys   =  1;     /**< 已取消 9-1. 商户上传订单DH加密公钥*/
    GetPreKeyOrderID  =  2;     /**< 9-2. 获取网点OPK公钥及订单ID*/
    OrderStateEvent   =  4;     /**< 已取消 9-4. 订单状态变化事件*/
    ChangeOrderState  =  5;     /**< 9-5. 对订单进行状态更改*/
    GetPreKeysCount   =  6;     /**< 已取消  9-6. 商户获取OPK存量*/
    OPKLimitAlert     =  10;    /**< 已取消  9-10. 商户OPK存量不足事件  */
    PayOrder          =  11;    /**< 9-11. 确认支付订单*/
    UploadOrderBodyEvent =  13;    /**< 9-13. 买家将订单body加密发送给第三方公证*/
    GetNotaryServicePublickey =  14;    /**< 9-14. 买家获取商户对应的第三方公证的公钥*/
   
}

//钱包模块子模块定义
enum WalletSubType {
    WST_undefined               =  0;    //proto3必须从0开始
    RegisterWallet              =  1;     /**< 10-1 钱包账号注册*/
    //Deposit                     =  2;     /**< 取消 10-2 充值*/
    PreTransfer                 =  3;     /**< 10-3 发起转账*/
    ConfirmTransfer             =  4;     /**< 10-4 确认转账*/
    Balance                     =  5;     /**< 10-5 查询账号余额*/
    PreWithDraw                 =  6;     /**< 10-6 发起提现预审核*/
    WithDraw                    =  7;     /**< 10-7 确认提现*/
    WithDrawBankCompleteEvent   =  8;     /**< 10-8 提现银行转账通知事件*/
    SyncCollectionHistory       =  9;     /**< 10-9 同步收款历史*/
    SyncDepositHistory          =  10;    /**< 10-10 同步充值历史*/
    SyncWithdrawHistory         =  11;    /**< 10-11 同步提现历史*/
    SyncTransferHistory         =  12;    /**< 10-12 同步转账历史*/
    UserSignIn                  =  13;    /**< 10-13 签到*/
    TxHashInfo                  =  14;    /**< 10-14 查询交易哈希详情*/
    EthReceivedEvent            =  15;    /**< 10-15 ETH奖励到账通知事件*/
    LNMCReceivedEvent           =  16;    /**< 10-16 连米币到账通知事件*/
}

//日志模块子模块定义
enum LogSubType {
    LST_undefined               =  0;    //proto3必须从0开始
    SendLog                     =  1;     /**< 11-1 日志上报*/
}

//订单状态枚举：
enum OrderState {
    OS_Undefined    = 0;     //proto3必须从0开始
    OS_Prepare      = 1;     /**< 预审核状态*/
    OS_SendOK       = 2;     /**< 订单发送成功*/
    OS_RecvOK       = 3;     /**< 订单送达成功*/
    OS_Taked        = 4;     /**< 已接单*/
    OS_Done         = 5;     /**< 完成订单*/
    OS_Cancel       = 6;     /**< 取消订单 商户同意撤单 */
    OS_Processing   = 7;     /**< 订单处理中，一般用于商户，安抚下单的*/
    OS_Confirm      = 8;     /**< 确认收货*/
    OS_ApplyCancel  = 9;     /**< 申请撤单 */
    OS_AttachChange = 10;    /**< 订单内容发生更改*/
    OS_Paying       = 11;    /**< 支付中*/
    OS_Overdue      = 12;    /**< 已逾期*/
    OS_Refuse       = 13;    /**< 已拒单， 跟已接单是相反的操作*/
    OS_IsPayed      = 14;    /**< 已支付， 支付成功*/
    OS_Urge         = 15;    /**< 买家催单, 商户可以回复7*/
    OS_Expedited    = 16;    /**< 加急订单, 排在首位*/
}

enum StoreType {
    ST_Undefined         = 0;     //proto3必须从0开始
    ST_FreshProduct  = 1;     /**< 生鲜*/
    ST_Meat          = 2;     /**< 肉类*/
    ST_Fruits        = 3;     /**< 水果蔬菜类*/
    ST_GrainOil      = 4;     /**< 粮油类*/
    ST_Delicatessen  = 5;     /**< 熟食类*/
    ST_Bakery        = 6;     /**< 面包糕点类*/
    ST_GroceryStore  = 7;     /**< 生活五金用品类*/
    ST_HouseKeeping  = 8;     /**< 家政*/
    ST_Lottery       = 9;     /**< 彩票*/
    ST_Carry         = 10;    /**< 搬运*/
    ST_Maintenance   = 11;     /**< 维修*/
    ST_Services      = 12;     /**< 服务行业*/
    ST_Others        = 13;     /**<其它*/
}

//商品类型
enum ProductType {
    OT_Undefined     = 0;     //proto3必须从0开始
    OT_FreshProduct  = 1;     /**< 生鲜产品*/
    OT_Meat          = 2;     /**< 肉类*/
    OT_Fruits        = 3;     /**< 水果蔬菜类*/
    OT_GrainOil      = 4;     /**< 粮油类*/
    OT_Delicatessen  = 5;     /**< 熟食类*/
    OT_Bakery        = 6;     /**< 面包糕饼类*/
    OT_GroceryStore  = 7;     /**< 生活清洁用品类*/
    OT_HouseKeeping  = 8;     /**< 家政*/
    OT_Lottery       = 9;     /**< 彩票*/
    OT_Carry         = 10;    /**< 搬运*/
    OT_Maintenance   = 11;    /**< 维修*/
    OT_Services      = 12;    /**< 服务行业*/
    OT_Others        = 13;    /**<其它*/
}

 //商品子类型的彩票枚举 1- 双色球  2- 大乐透,  3- 福彩3d
enum LotteryType {
    LT_Undefined     = 0;     //proto3必须从0开始
    LT_Shuangseqiu   = 1;     /**< 双色球*/
    LT_Daletou       = 2;     /**< 大乐透*/
    LT_Fucai3d       = 3;     /**< 福彩3d*/
    
}

//商品上下架状态
enum OnSellState {
    OnSellinit =0; //未上架
    OnSelling =1; //上架中
    OnSellOut =2; //已下架

}

//交易类型枚举(钱包资产的收支)： 
enum TransactionType {
    DT_Undefined     = 0;     //proto3必须从0开始
    DT_Deposit       = 1;     /**< 充值*/
    DT_WithDraw      = 2;     /**< 提现*/
    DT_Transfer      = 3;     /**< 支付*/
}


//订单类型, 类型的不同决定着不同的交互
enum OrderType {
     ORT_Undefined     = 0;     //proto3必须从0开始
     ORT_Normal        = 1;     //正常类型
     ORT_Grabbing      = 2;     //任务抢单类型
     ORT_Walking       = 3;     //竞猜类
     ORT_Server        = 4;     //服务端发起的收费
}

//支付接口类型
enum ThirdPartyPaymentType {
     TPPT_Undefined     = 0;     //proto3必须从0开始
     TPPT_AliPay        = 1;     //支付宝
     TPPT_WeChatPay     = 2;     //微信
     TPPT_Bank          = 3;     //银行卡
}

//充值金额枚举
enum DepositRecharge {
     DR_Undefined   = 0;     //proto3必须从0开始
     DR_100         = 1;     //100元 
     DR_200         = 2;     //200元 
     DR_300         = 3;     //300元 
     DR_500         = 4;     //500元 
     DR_1000        = 5;     //1000元 
     DR_3000        = 6;     //3000元 
     DR_10000       = 7;     //10000元 
}

//客服技术类型枚举 
enum CustomerServiceType {
      CS_Undefined         = 0;      //proto3必须从0开始
      CS_CustomerService   =1;       //客服
      CS_TechnologyService =2;       //技术支持
}

//会员时间类型，有包年，包季，包月
enum VipUserPayType {
    VIP_Undefined   = 0;          //proto3必须从0开始
    VIP_Year        = 1;          //包年
    VIP_Season      = 2;          //包季
    VIP_Month       = 3;          //包月
    VIP_Week        = 4;          //包周，体验卡

}