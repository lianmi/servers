// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.7.0
// source: api/proto/global/Global.proto

package global

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//重要！！！！ 数字 必须与 Global.h 保持一致
//业务模块定义
type BusinessType int32

const (
	BusinessType_Bt_undefined BusinessType = 0  //proto3必须从0开始
	BusinessType_Users        BusinessType = 1  //用户模块
	BusinessType_Auth         BusinessType = 2  //鉴权授权模块
	BusinessType_Friends      BusinessType = 3  //好友模块
	BusinessType_Group        BusinessType = 4  //群组模块
	BusinessType_Chat         BusinessType = 5  //消息模块
	BusinessType_Sync         BusinessType = 6  //数据同步模块
	BusinessType_Article      BusinessType = 7  //文章模块
	BusinessType_Broadcast    BusinessType = 8  //广播模块
	BusinessType_Order        BusinessType = 9  //订单模块
	BusinessType_Wallet       BusinessType = 10 //钱包模块
	BusinessType_Custom       BusinessType = 99 //自定义模块， 用于测试
)

// Enum value maps for BusinessType.
var (
	BusinessType_name = map[int32]string{
		0:  "Bt_undefined",
		1:  "Users",
		2:  "Auth",
		3:  "Friends",
		4:  "Group",
		5:  "Chat",
		6:  "Sync",
		7:  "Article",
		8:  "Broadcast",
		9:  "Order",
		10: "Wallet",
		99: "Custom",
	}
	BusinessType_value = map[string]int32{
		"Bt_undefined": 0,
		"Users":        1,
		"Auth":         2,
		"Friends":      3,
		"Group":        4,
		"Chat":         5,
		"Sync":         6,
		"Article":      7,
		"Broadcast":    8,
		"Order":        9,
		"Wallet":       10,
		"Custom":       99,
	}
)

func (x BusinessType) Enum() *BusinessType {
	p := new(BusinessType)
	*p = x
	return p
}

func (x BusinessType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BusinessType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_global_Global_proto_enumTypes[0].Descriptor()
}

func (BusinessType) Type() protoreflect.EnumType {
	return &file_api_proto_global_Global_proto_enumTypes[0]
}

func (x BusinessType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BusinessType.Descriptor instead.
func (BusinessType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_global_Global_proto_rawDescGZIP(), []int{0}
}

//授权模块子模块定义
type AuthSubType int32

const (
	AuthSubType_Ast_undefined        AuthSubType = 0  //proto3必须从0开始
	AuthSubType_SignIn               AuthSubType = 1  //取消：登录; 主动
	AuthSubType_SignOut              AuthSubType = 2  //退出登录; 主动
	AuthSubType_MultiLoginEvent      AuthSubType = 3  //多端登录事件 多端登录状态变化的回调, 会收到登录端列表, 以下情况会收到此回调
	AuthSubType_Kick                 AuthSubType = 4  //踢出其他设备; 主动
	AuthSubType_KickedEvent          AuthSubType = 5  //被其他终端踢下线事件
	AuthSubType_AddSlaveDevice       AuthSubType = 6  //增加从设备
	AuthSubType_AuthorizeCode        AuthSubType = 7  //从设备申请授权码
	AuthSubType_RemoveSlaveDevice    AuthSubType = 8  //主设备删除从设备，服务器端发送多终端事件, 同时删除设备记录。
	AuthSubType_SlaveDeviceAuthEvent AuthSubType = 9  //从设备被授权登录后收到的推送
	AuthSubType_GetAllDevices        AuthSubType = 10 //向服务端查询所有主从设备列表
)

// Enum value maps for AuthSubType.
var (
	AuthSubType_name = map[int32]string{
		0:  "Ast_undefined",
		1:  "SignIn",
		2:  "SignOut",
		3:  "MultiLoginEvent",
		4:  "Kick",
		5:  "KickedEvent",
		6:  "AddSlaveDevice",
		7:  "AuthorizeCode",
		8:  "RemoveSlaveDevice",
		9:  "SlaveDeviceAuthEvent",
		10: "GetAllDevices",
	}
	AuthSubType_value = map[string]int32{
		"Ast_undefined":        0,
		"SignIn":               1,
		"SignOut":              2,
		"MultiLoginEvent":      3,
		"Kick":                 4,
		"KickedEvent":          5,
		"AddSlaveDevice":       6,
		"AuthorizeCode":        7,
		"RemoveSlaveDevice":    8,
		"SlaveDeviceAuthEvent": 9,
		"GetAllDevices":        10,
	}
)

func (x AuthSubType) Enum() *AuthSubType {
	p := new(AuthSubType)
	*p = x
	return p
}

func (x AuthSubType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthSubType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_global_Global_proto_enumTypes[1].Descriptor()
}

func (AuthSubType) Type() protoreflect.EnumType {
	return &file_api_proto_global_Global_proto_enumTypes[1]
}

func (x AuthSubType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthSubType.Descriptor instead.
func (AuthSubType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_global_Global_proto_rawDescGZIP(), []int{1}
}

//用户模块子模块定义
type UsersSubType int32

const (
	UsersSubType_Ust_undefined          UsersSubType = 0 //proto3必须从0开始
	UsersSubType_GetUsers               UsersSubType = 1 //*< 根据用户标示返回用户信息
	UsersSubType_UpdateUserProfile      UsersSubType = 2 //*< 更新当前用户信息
	UsersSubType_SyncUserProfileEvent   UsersSubType = 3 //*< 登录成功后,用户资料增量更新事件
	UsersSubType_SyncUpdateProfileEvent UsersSubType = 4 //*< 用户资料更新事件,同一账号其他终端修改个人资料会触发该事件
	UsersSubType_MarkTag                UsersSubType = 5 //*< 用户打标
	UsersSubType_SyncMarkTagEvent       UsersSubType = 6 //*< 同步其它终端的好友添加、删除标签事件
)

// Enum value maps for UsersSubType.
var (
	UsersSubType_name = map[int32]string{
		0: "Ust_undefined",
		1: "GetUsers",
		2: "UpdateUserProfile",
		3: "SyncUserProfileEvent",
		4: "SyncUpdateProfileEvent",
		5: "MarkTag",
		6: "SyncMarkTagEvent",
	}
	UsersSubType_value = map[string]int32{
		"Ust_undefined":          0,
		"GetUsers":               1,
		"UpdateUserProfile":      2,
		"SyncUserProfileEvent":   3,
		"SyncUpdateProfileEvent": 4,
		"MarkTag":                5,
		"SyncMarkTagEvent":       6,
	}
)

func (x UsersSubType) Enum() *UsersSubType {
	p := new(UsersSubType)
	*p = x
	return p
}

func (x UsersSubType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UsersSubType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_global_Global_proto_enumTypes[2].Descriptor()
}

func (UsersSubType) Type() protoreflect.EnumType {
	return &file_api_proto_global_Global_proto_enumTypes[2]
}

func (x UsersSubType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UsersSubType.Descriptor instead.
func (UsersSubType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_global_Global_proto_rawDescGZIP(), []int{2}
}

//好友模块子模块定义
type FriendsSubType int32

const (
	FriendsSubType_Fst_undefined         FriendsSubType = 0 //proto3必须从0开始
	FriendsSubType_FriendRequest         FriendsSubType = 1 //*< 好友请求发起与处理(直接添加/发起好友验证/拒绝/通过)
	FriendsSubType_FriendChangeEvent     FriendsSubType = 2 //*< 好友关系变更事件
	FriendsSubType_SyncFriendsEvent      FriendsSubType = 3 //*< 好友列表同步事件
	FriendsSubType_SyncFriendUsersEvent  FriendsSubType = 4 //*< 好友资料同步事件
	FriendsSubType_DeleteFriend          FriendsSubType = 5 //*< 删除好友
	FriendsSubType_UpdateFriend          FriendsSubType = 6 //*< 刷新好友资料
	FriendsSubType_SyncUpdateFriendEvent FriendsSubType = 7 //*< 主从设备好友资料同步事件
	FriendsSubType_GetFriends            FriendsSubType = 8 //*< 增量同步好友列表
)

// Enum value maps for FriendsSubType.
var (
	FriendsSubType_name = map[int32]string{
		0: "Fst_undefined",
		1: "FriendRequest",
		2: "FriendChangeEvent",
		3: "SyncFriendsEvent",
		4: "SyncFriendUsersEvent",
		5: "DeleteFriend",
		6: "UpdateFriend",
		7: "SyncUpdateFriendEvent",
		8: "GetFriends",
	}
	FriendsSubType_value = map[string]int32{
		"Fst_undefined":         0,
		"FriendRequest":         1,
		"FriendChangeEvent":     2,
		"SyncFriendsEvent":      3,
		"SyncFriendUsersEvent":  4,
		"DeleteFriend":          5,
		"UpdateFriend":          6,
		"SyncUpdateFriendEvent": 7,
		"GetFriends":            8,
	}
)

func (x FriendsSubType) Enum() *FriendsSubType {
	p := new(FriendsSubType)
	*p = x
	return p
}

func (x FriendsSubType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FriendsSubType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_global_Global_proto_enumTypes[3].Descriptor()
}

func (FriendsSubType) Type() protoreflect.EnumType {
	return &file_api_proto_global_Global_proto_enumTypes[3]
}

func (x FriendsSubType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FriendsSubType.Descriptor instead.
func (FriendsSubType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_global_Global_proto_rawDescGZIP(), []int{3}
}

//群组模块子模块定义
type GroupSubType int32

const (
	GroupSubType_Gst_undefined      GroupSubType = 0  //proto3必须从0开始
	GroupSubType_CreateTeam         GroupSubType = 1  //*< 1.  创建群组
	GroupSubType_GetTeamMembers     GroupSubType = 2  //*< 2.  获取群组成员
	GroupSubType_GetTeam            GroupSubType = 3  //*< 暂时不开发 3.  查询群组
	GroupSubType_InviteTeamMembers  GroupSubType = 4  //*< 4.  邀请好友加入群组
	GroupSubType_RemoveTeamMembers  GroupSubType = 5  //*< 5.  删除群组成员
	GroupSubType_AcceptTeamInvite   GroupSubType = 6  //*< 6.  接受群邀请
	GroupSubType_RejectTeamInvite   GroupSubType = 7  //*< 7.  拒绝群邀请
	GroupSubType_ApplyTeam          GroupSubType = 8  //*< 8.  申请加群
	GroupSubType_PassTeamApply      GroupSubType = 9  //*< 9.  通过群申请
	GroupSubType_RejectTeamApply    GroupSubType = 10 //*< 10. 拒绝群申请
	GroupSubType_UpdateTeam         GroupSubType = 11 //*< 11. 更新群组信息
	GroupSubType_DismissTeam        GroupSubType = 12 //*< 12. 解散群组
	GroupSubType_LeaveTeam          GroupSubType = 13 //*< 13. 离开群组
	GroupSubType_AddTeamManagers    GroupSubType = 14 //*< 14. 设置群管理员
	GroupSubType_RemoveTeamManagers GroupSubType = 15 //*< 15. 取消群管理员
	GroupSubType_TransferTeam       GroupSubType = 16 //*< 16. 转让群
	GroupSubType_SyncMyTeamsEvent   GroupSubType = 17 //*< 17. 同步群组事件
	GroupSubType_MuteTeam           GroupSubType = 18 //*< 18. 修改群禁言模式
	GroupSubType_MuteTeamMember     GroupSubType = 19 //*< 19. 设置群成员禁言
	GroupSubType_SetNotifyType      GroupSubType = 20 //*< 20. 修改群组消息通知方式
	GroupSubType_UpdateMyInfo       GroupSubType = 21 //*< 21. 修改个人群资料
	GroupSubType_UpdateMemberInfo   GroupSubType = 22 //*< 22. 设置群成员资料
	GroupSubType_SyncCreateTeam     GroupSubType = 23 //*< 23. 创建群组多终端同步事件
	GroupSubType_PullTeamMembers    GroupSubType = 24 //*< 24. 根据群成员ID获取群成员信息
	GroupSubType_GetMyTeams         GroupSubType = 25 //*< 25. 增量群组信息
	GroupSubType_CheckTeamInvite    GroupSubType = 26 //*< 26. 管理员审核邀请入群
	GroupSubType_GetTribeMembers    GroupSubType = 27 //*< 27. 分页获取部落成员信息
)

// Enum value maps for GroupSubType.
var (
	GroupSubType_name = map[int32]string{
		0:  "Gst_undefined",
		1:  "CreateTeam",
		2:  "GetTeamMembers",
		3:  "GetTeam",
		4:  "InviteTeamMembers",
		5:  "RemoveTeamMembers",
		6:  "AcceptTeamInvite",
		7:  "RejectTeamInvite",
		8:  "ApplyTeam",
		9:  "PassTeamApply",
		10: "RejectTeamApply",
		11: "UpdateTeam",
		12: "DismissTeam",
		13: "LeaveTeam",
		14: "AddTeamManagers",
		15: "RemoveTeamManagers",
		16: "TransferTeam",
		17: "SyncMyTeamsEvent",
		18: "MuteTeam",
		19: "MuteTeamMember",
		20: "SetNotifyType",
		21: "UpdateMyInfo",
		22: "UpdateMemberInfo",
		23: "SyncCreateTeam",
		24: "PullTeamMembers",
		25: "GetMyTeams",
		26: "CheckTeamInvite",
		27: "GetTribeMembers",
	}
	GroupSubType_value = map[string]int32{
		"Gst_undefined":      0,
		"CreateTeam":         1,
		"GetTeamMembers":     2,
		"GetTeam":            3,
		"InviteTeamMembers":  4,
		"RemoveTeamMembers":  5,
		"AcceptTeamInvite":   6,
		"RejectTeamInvite":   7,
		"ApplyTeam":          8,
		"PassTeamApply":      9,
		"RejectTeamApply":    10,
		"UpdateTeam":         11,
		"DismissTeam":        12,
		"LeaveTeam":          13,
		"AddTeamManagers":    14,
		"RemoveTeamManagers": 15,
		"TransferTeam":       16,
		"SyncMyTeamsEvent":   17,
		"MuteTeam":           18,
		"MuteTeamMember":     19,
		"SetNotifyType":      20,
		"UpdateMyInfo":       21,
		"UpdateMemberInfo":   22,
		"SyncCreateTeam":     23,
		"PullTeamMembers":    24,
		"GetMyTeams":         25,
		"CheckTeamInvite":    26,
		"GetTribeMembers":    27,
	}
)

func (x GroupSubType) Enum() *GroupSubType {
	p := new(GroupSubType)
	*p = x
	return p
}

func (x GroupSubType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupSubType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_global_Global_proto_enumTypes[4].Descriptor()
}

func (GroupSubType) Type() protoreflect.EnumType {
	return &file_api_proto_global_Global_proto_enumTypes[4]
}

func (x GroupSubType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupSubType.Descriptor instead.
func (GroupSubType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_global_Global_proto_rawDescGZIP(), []int{4}
}

//消息模块子模块定义
type ChatMsgSubType int32

const (
	ChatMsgSubType_Cst_undefined               ChatMsgSubType = 0  //proto3必须从0开始
	ChatMsgSubType_SendMsg                     ChatMsgSubType = 1  //*< 1.  发送个人消息
	ChatMsgSubType_RecvMsgEvent                ChatMsgSubType = 2  //*< 2.  接收个人消息事件
	ChatMsgSubType_SyncOfflineSysMsgsEvent     ChatMsgSubType = 3  //*< 3.  同步系统离线消息
	ChatMsgSubType_DeleteSessions              ChatMsgSubType = 4  //*< 4.  删除会话
	ChatMsgSubType_SyncSendMsgEvent            ChatMsgSubType = 5  //*< 5.  发送个人消息多终端同步事件
	ChatMsgSubType_SendCancelMsg               ChatMsgSubType = 6  //*< 6.  发送撤销消息
	ChatMsgSubType_RecvCancelMsgEvent          ChatMsgSubType = 7  //*< 7.  接收撤销消息事件
	ChatMsgSubType_SyncSendCancelMsgEvent      ChatMsgSubType = 8  //*< 8. 同步发送撤销消息事件
	ChatMsgSubType_SyncCancelMsgEvent          ChatMsgSubType = 9  //*< 9. 同步撤销消息事件
	ChatMsgSubType_SyncUpdateConversationEvent ChatMsgSubType = 10 //*< 10. 同步更新会话
	ChatMsgSubType_UpdateConversation          ChatMsgSubType = 11 //*< 11. 更新会话
)

// Enum value maps for ChatMsgSubType.
var (
	ChatMsgSubType_name = map[int32]string{
		0:  "Cst_undefined",
		1:  "SendMsg",
		2:  "RecvMsgEvent",
		3:  "SyncOfflineSysMsgsEvent",
		4:  "DeleteSessions",
		5:  "SyncSendMsgEvent",
		6:  "SendCancelMsg",
		7:  "RecvCancelMsgEvent",
		8:  "SyncSendCancelMsgEvent",
		9:  "SyncCancelMsgEvent",
		10: "SyncUpdateConversationEvent",
		11: "UpdateConversation",
	}
	ChatMsgSubType_value = map[string]int32{
		"Cst_undefined":               0,
		"SendMsg":                     1,
		"RecvMsgEvent":                2,
		"SyncOfflineSysMsgsEvent":     3,
		"DeleteSessions":              4,
		"SyncSendMsgEvent":            5,
		"SendCancelMsg":               6,
		"RecvCancelMsgEvent":          7,
		"SyncSendCancelMsgEvent":      8,
		"SyncCancelMsgEvent":          9,
		"SyncUpdateConversationEvent": 10,
		"UpdateConversation":          11,
	}
)

func (x ChatMsgSubType) Enum() *ChatMsgSubType {
	p := new(ChatMsgSubType)
	*p = x
	return p
}

func (x ChatMsgSubType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatMsgSubType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_global_Global_proto_enumTypes[5].Descriptor()
}

func (ChatMsgSubType) Type() protoreflect.EnumType {
	return &file_api_proto_global_Global_proto_enumTypes[5]
}

func (x ChatMsgSubType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatMsgSubType.Descriptor instead.
func (ChatMsgSubType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_global_Global_proto_rawDescGZIP(), []int{5}
}

//同步模块子模块定义
type SyncSubType int32

const (
	SyncSubType_Syn_undefined SyncSubType = 0 //proto3必须从0开始
	SyncSubType_SyncEvent     SyncSubType = 1 //*< 1. 同步请求
	SyncSubType_SyncDoneEvent SyncSubType = 2 //*< 2. 同步结束事件
)

// Enum value maps for SyncSubType.
var (
	SyncSubType_name = map[int32]string{
		0: "Syn_undefined",
		1: "SyncEvent",
		2: "SyncDoneEvent",
	}
	SyncSubType_value = map[string]int32{
		"Syn_undefined": 0,
		"SyncEvent":     1,
		"SyncDoneEvent": 2,
	}
)

func (x SyncSubType) Enum() *SyncSubType {
	p := new(SyncSubType)
	*p = x
	return p
}

func (x SyncSubType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SyncSubType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_global_Global_proto_enumTypes[6].Descriptor()
}

func (SyncSubType) Type() protoreflect.EnumType {
	return &file_api_proto_global_Global_proto_enumTypes[6]
}

func (x SyncSubType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SyncSubType.Descriptor instead.
func (SyncSubType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_global_Global_proto_rawDescGZIP(), []int{6}
}

//订单模块子模块定义
type OrderSubType int32

const (
	OrderSubType_OST_undefined    OrderSubType = 0 //proto3必须从0开始
	OrderSubType_RegisterPreKeys  OrderSubType = 1 //*< 9-1. 商户上传订单DH加密公钥
	OrderSubType_GetPreKeyOrderID OrderSubType = 2 //*< 9-2. 获取网点OPK公钥及订单ID
	OrderSubType_OrderStateEvent  OrderSubType = 3 //*< 9-4. 订单状态变化事件
	OrderSubType_ChangeOrderState OrderSubType = 4 //*< 9-5. 对订单进行状态更改
	OrderSubType_GetPreKeysCount  OrderSubType = 5 //*< 9-6. 商户获取OPK存量
)

// Enum value maps for OrderSubType.
var (
	OrderSubType_name = map[int32]string{
		0: "OST_undefined",
		1: "RegisterPreKeys",
		2: "GetPreKeyOrderID",
		3: "OrderStateEvent",
		4: "ChangeOrderState",
		5: "GetPreKeysCount",
	}
	OrderSubType_value = map[string]int32{
		"OST_undefined":    0,
		"RegisterPreKeys":  1,
		"GetPreKeyOrderID": 2,
		"OrderStateEvent":  3,
		"ChangeOrderState": 4,
		"GetPreKeysCount":  5,
	}
)

func (x OrderSubType) Enum() *OrderSubType {
	p := new(OrderSubType)
	*p = x
	return p
}

func (x OrderSubType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderSubType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_global_Global_proto_enumTypes[7].Descriptor()
}

func (OrderSubType) Type() protoreflect.EnumType {
	return &file_api_proto_global_Global_proto_enumTypes[7]
}

func (x OrderSubType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderSubType.Descriptor instead.
func (OrderSubType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_global_Global_proto_rawDescGZIP(), []int{7}
}

//钱包模块子模块定义
type WalletSubType int32

const (
	WalletSubType_WST_undefined   WalletSubType = 0 //proto3必须从0开始
	WalletSubType_RegisterWallet  WalletSubType = 1 //*< 10-1 钱包账号注册
	WalletSubType_Deposit         WalletSubType = 2 //*< 10-2 充值
	WalletSubType_WithDraw        WalletSubType = 3 //*< 10-4 提现
	WalletSubType_Balance         WalletSubType = 4 //*< 10-6 查询链上账号余额
	WalletSubType_QueryCommission WalletSubType = 5 //*< 10-9 佣金收益明细
)

// Enum value maps for WalletSubType.
var (
	WalletSubType_name = map[int32]string{
		0: "WST_undefined",
		1: "RegisterWallet",
		2: "Deposit",
		3: "WithDraw",
		4: "Balance",
		5: "QueryCommission",
	}
	WalletSubType_value = map[string]int32{
		"WST_undefined":   0,
		"RegisterWallet":  1,
		"Deposit":         2,
		"WithDraw":        3,
		"Balance":         4,
		"QueryCommission": 5,
	}
)

func (x WalletSubType) Enum() *WalletSubType {
	p := new(WalletSubType)
	*p = x
	return p
}

func (x WalletSubType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WalletSubType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_global_Global_proto_enumTypes[8].Descriptor()
}

func (WalletSubType) Type() protoreflect.EnumType {
	return &file_api_proto_global_Global_proto_enumTypes[8]
}

func (x WalletSubType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WalletSubType.Descriptor instead.
func (WalletSubType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_global_Global_proto_rawDescGZIP(), []int{8}
}

//订单状态枚举：
type OrderState int32

const (
	OrderState_OS_Undefined OrderState = 0 //proto3必须从0开始
	OrderState_OS_Prepare   OrderState = 1 //*< 预审核状态
	OrderState_OS_SendOK    OrderState = 2 //*< 订单发送成功
	OrderState_OS_RecvOK    OrderState = 3 //*< 订单送达成功
	OrderState_OS_Taked     OrderState = 4 //*< 接单成功
	OrderState_OS_Done      OrderState = 5 //*< 完成订单
	OrderState_OS_Cancel    OrderState = 6 //*< 取消订单
	OrderState_OS_InHand    OrderState = 7 //*< 订单处理中
)

// Enum value maps for OrderState.
var (
	OrderState_name = map[int32]string{
		0: "OS_Undefined",
		1: "OS_Prepare",
		2: "OS_SendOK",
		3: "OS_RecvOK",
		4: "OS_Taked",
		5: "OS_Done",
		6: "OS_Cancel",
		7: "OS_InHand",
	}
	OrderState_value = map[string]int32{
		"OS_Undefined": 0,
		"OS_Prepare":   1,
		"OS_SendOK":    2,
		"OS_RecvOK":    3,
		"OS_Taked":     4,
		"OS_Done":      5,
		"OS_Cancel":    6,
		"OS_InHand":    7,
	}
)

func (x OrderState) Enum() *OrderState {
	p := new(OrderState)
	*p = x
	return p
}

func (x OrderState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderState) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_global_Global_proto_enumTypes[9].Descriptor()
}

func (OrderState) Type() protoreflect.EnumType {
	return &file_api_proto_global_Global_proto_enumTypes[9]
}

func (x OrderState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderState.Descriptor instead.
func (OrderState) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_global_Global_proto_rawDescGZIP(), []int{9}
}

//订单类型
type OrderType int32

const (
	OrderType_OT_Undefined    OrderType = 0  //proto3必须从0开始
	OrderType_OT_FreshProduct OrderType = 1  //*< 生鲜产品
	OrderType_OT_Meat         OrderType = 2  //*< 肉类
	OrderType_OT_Fruits       OrderType = 3  //*< 水果蔬菜类
	OrderType_OT_GrainOil     OrderType = 4  //*< 粮油类
	OrderType_OT_Delicatessen OrderType = 5  //*< 熟食类
	OrderType_OT_Bakery       OrderType = 6  //*< 面包糕饼类
	OrderType_OT_HouseKeeping OrderType = 7  //*< 家政
	OrderType_OT_Lottery      OrderType = 8  //*< 彩票
	OrderType_OT_Carry        OrderType = 9  //*< 搬运
	OrderType_OT_Maintenance  OrderType = 10 //*< 维修
)

// Enum value maps for OrderType.
var (
	OrderType_name = map[int32]string{
		0:  "OT_Undefined",
		1:  "OT_FreshProduct",
		2:  "OT_Meat",
		3:  "OT_Fruits",
		4:  "OT_GrainOil",
		5:  "OT_Delicatessen",
		6:  "OT_Bakery",
		7:  "OT_HouseKeeping",
		8:  "OT_Lottery",
		9:  "OT_Carry",
		10: "OT_Maintenance",
	}
	OrderType_value = map[string]int32{
		"OT_Undefined":    0,
		"OT_FreshProduct": 1,
		"OT_Meat":         2,
		"OT_Fruits":       3,
		"OT_GrainOil":     4,
		"OT_Delicatessen": 5,
		"OT_Bakery":       6,
		"OT_HouseKeeping": 7,
		"OT_Lottery":      8,
		"OT_Carry":        9,
		"OT_Maintenance":  10,
	}
)

func (x OrderType) Enum() *OrderType {
	p := new(OrderType)
	*p = x
	return p
}

func (x OrderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_global_Global_proto_enumTypes[10].Descriptor()
}

func (OrderType) Type() protoreflect.EnumType {
	return &file_api_proto_global_Global_proto_enumTypes[10]
}

func (x OrderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderType.Descriptor instead.
func (OrderType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_global_Global_proto_rawDescGZIP(), []int{10}
}

//交易类型枚举(钱包资产的收支)：
type TransactionType int32

const (
	TransactionType_DT_Undefined TransactionType = 0 //proto3必须从0开始
	TransactionType_DT_Deposit   TransactionType = 1 //*< 充值
	TransactionType_DT_WithDraw  TransactionType = 2 //*< 提现
	TransactionType_DT_RollOut   TransactionType = 3 //*< 支付
	TransactionType_DT_RollIn    TransactionType = 4 //*< 收款
	TransactionType_DT_Refoud    TransactionType = 5 //*< 退款
)

// Enum value maps for TransactionType.
var (
	TransactionType_name = map[int32]string{
		0: "DT_Undefined",
		1: "DT_Deposit",
		2: "DT_WithDraw",
		3: "DT_RollOut",
		4: "DT_RollIn",
		5: "DT_Refoud",
	}
	TransactionType_value = map[string]int32{
		"DT_Undefined": 0,
		"DT_Deposit":   1,
		"DT_WithDraw":  2,
		"DT_RollOut":   3,
		"DT_RollIn":    4,
		"DT_Refoud":    5,
	}
)

func (x TransactionType) Enum() *TransactionType {
	p := new(TransactionType)
	*p = x
	return p
}

func (x TransactionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_global_Global_proto_enumTypes[11].Descriptor()
}

func (TransactionType) Type() protoreflect.EnumType {
	return &file_api_proto_global_Global_proto_enumTypes[11]
}

func (x TransactionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionType.Descriptor instead.
func (TransactionType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_global_Global_proto_rawDescGZIP(), []int{11}
}

var File_api_proto_global_Global_proto protoreflect.FileDescriptor

var file_api_proto_global_Global_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x2f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x16, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d,
	0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2a, 0xa0, 0x01, 0x0a, 0x0c, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x74, 0x5f, 0x75,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x10, 0x02, 0x12,
	0x0b, 0x0a, 0x07, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x68, 0x61, 0x74, 0x10,
	0x05, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x79, 0x6e, 0x63, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x10, 0x08, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x10, 0x09, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x10, 0x0a, 0x12, 0x0a,
	0x0a, 0x06, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x10, 0x63, 0x2a, 0xd4, 0x01, 0x0a, 0x0b, 0x41,
	0x75, 0x74, 0x68, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x73,
	0x74, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x69, 0x67,
	0x6e, 0x4f, 0x75, 0x74, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x4b,
	0x69, 0x63, 0x6b, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x4b, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x53, 0x6c, 0x61,
	0x76, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x10, 0x07, 0x12, 0x15, 0x0a,
	0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x10, 0x08, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x75, 0x74, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x09, 0x12, 0x11,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x10,
	0x0a, 0x2a, 0x9f, 0x01, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x75, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x73, 0x74, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x79,
	0x6e, 0x63, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x79, 0x6e, 0x63, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x04,
	0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x61, 0x72, 0x6b, 0x54, 0x61, 0x67, 0x10, 0x05, 0x12, 0x14, 0x0a,
	0x10, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x61, 0x72, 0x6b, 0x54, 0x61, 0x67, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x10, 0x06, 0x2a, 0xcc, 0x01, 0x0a, 0x0e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x53,
	0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x73, 0x74, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x79, 0x6e, 0x63, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x79, 0x6e,
	0x63, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x10, 0x06, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x79, 0x6e, 0x63, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73,
	0x10, 0x08, 0x2a, 0xa8, 0x04, 0x0a, 0x0c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x75, 0x62, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x47, 0x73, 0x74, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x65, 0x61, 0x6d, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61,
	0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x47, 0x65,
	0x74, 0x54, 0x65, 0x61, 0x6d, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x10, 0x04, 0x12, 0x15,
	0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x54,
	0x65, 0x61, 0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10, 0x52,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x10,
	0x07, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x10, 0x08,
	0x12, 0x11, 0x0a, 0x0d, 0x50, 0x61, 0x73, 0x73, 0x54, 0x65, 0x61, 0x6d, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x10, 0x09, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x65, 0x61,
	0x6d, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x10, 0x0a, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x10, 0x0b, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x6d,
	0x69, 0x73, 0x73, 0x54, 0x65, 0x61, 0x6d, 0x10, 0x0c, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x10, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x54,
	0x65, 0x61, 0x6d, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x10, 0x0e, 0x12, 0x16, 0x0a,
	0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x73, 0x10, 0x0f, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x54, 0x65, 0x61, 0x6d, 0x10, 0x10, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x79, 0x6e, 0x63, 0x4d,
	0x79, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x11, 0x12, 0x0c, 0x0a,
	0x08, 0x4d, 0x75, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x10, 0x12, 0x12, 0x12, 0x0a, 0x0e, 0x4d,
	0x75, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x10, 0x13, 0x12,
	0x11, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x10, 0x14, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x10, 0x15, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x16, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x79,
	0x6e, 0x63, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x10, 0x17, 0x12, 0x13,
	0x0a, 0x0f, 0x50, 0x75, 0x6c, 0x6c, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x10, 0x18, 0x12, 0x0e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x54, 0x65, 0x61, 0x6d,
	0x73, 0x10, 0x19, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x65, 0x61, 0x6d,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x10, 0x1a, 0x12, 0x13, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x69, 0x62, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x10, 0x1b, 0x2a, 0xa1, 0x02,
	0x0a, 0x0e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x11, 0x0a, 0x0d, 0x43, 0x73, 0x74, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x10, 0x01,
	0x12, 0x10, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x76, 0x4d, 0x73, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x79, 0x6e, 0x63, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x53, 0x79, 0x73, 0x4d, 0x73, 0x67, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x03, 0x12,
	0x12, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x6e, 0x64, 0x4d,
	0x73, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x65, 0x6e,
	0x64, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x73, 0x67, 0x10, 0x06, 0x12, 0x16, 0x0a, 0x12,
	0x52, 0x65, 0x63, 0x76, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x73, 0x67, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x10, 0x07, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x6e, 0x64,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x73, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x08,
	0x12, 0x16, 0x0a, 0x12, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x73,
	0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x09, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x79, 0x6e, 0x63,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x0a, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10,
	0x0b, 0x2a, 0x42, 0x0a, 0x0b, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x11, 0x0a, 0x0d, 0x53, 0x79, 0x6e, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x79, 0x6e, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x79, 0x6e, 0x63, 0x44, 0x6f, 0x6e, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x10, 0x02, 0x2a, 0x8c, 0x01, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x53, 0x54, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x10, 0x01, 0x12, 0x14,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x44, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x10, 0x04, 0x12,
	0x13, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x10, 0x05, 0x2a, 0x73, 0x0a, 0x0d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x75,
	0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x57, 0x53, 0x54, 0x5f, 0x75, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x57, 0x69, 0x74,
	0x68, 0x44, 0x72, 0x61, 0x77, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x05, 0x2a, 0x85, 0x01, 0x0a, 0x0a, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x53, 0x5f, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x53,
	0x5f, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x53,
	0x5f, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x4b, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x53, 0x5f,
	0x52, 0x65, 0x63, 0x76, 0x4f, 0x4b, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x53, 0x5f, 0x54,
	0x61, 0x6b, 0x65, 0x64, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x53, 0x5f, 0x44, 0x6f, 0x6e,
	0x65, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x53, 0x5f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x10, 0x06, 0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x53, 0x5f, 0x49, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x10,
	0x07, 0x2a, 0xca, 0x01, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x10, 0x0a, 0x0c, 0x4f, 0x54, 0x5f, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10,
	0x00, 0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x54, 0x5f, 0x46, 0x72, 0x65, 0x73, 0x68, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x54, 0x5f, 0x4d, 0x65, 0x61,
	0x74, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x54, 0x5f, 0x46, 0x72, 0x75, 0x69, 0x74, 0x73,
	0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x54, 0x5f, 0x47, 0x72, 0x61, 0x69, 0x6e, 0x4f, 0x69,
	0x6c, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x54, 0x5f, 0x44, 0x65, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x54, 0x5f, 0x42,
	0x61, 0x6b, 0x65, 0x72, 0x79, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x54, 0x5f, 0x48, 0x6f,
	0x75, 0x73, 0x65, 0x4b, 0x65, 0x65, 0x70, 0x69, 0x6e, 0x67, 0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a,
	0x4f, 0x54, 0x5f, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x10, 0x08, 0x12, 0x0c, 0x0a, 0x08,
	0x4f, 0x54, 0x5f, 0x43, 0x61, 0x72, 0x72, 0x79, 0x10, 0x09, 0x12, 0x12, 0x0a, 0x0e, 0x4f, 0x54,
	0x5f, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x10, 0x0a, 0x2a, 0x72,
	0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x54, 0x5f, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x54, 0x5f, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x54, 0x5f, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72,
	0x61, 0x77, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x54, 0x5f, 0x52, 0x6f, 0x6c, 0x6c, 0x4f,
	0x75, 0x74, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x54, 0x5f, 0x52, 0x6f, 0x6c, 0x6c, 0x49,
	0x6e, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x54, 0x5f, 0x52, 0x65, 0x66, 0x6f, 0x75, 0x64,
	0x10, 0x05, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_global_Global_proto_rawDescOnce sync.Once
	file_api_proto_global_Global_proto_rawDescData = file_api_proto_global_Global_proto_rawDesc
)

func file_api_proto_global_Global_proto_rawDescGZIP() []byte {
	file_api_proto_global_Global_proto_rawDescOnce.Do(func() {
		file_api_proto_global_Global_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_global_Global_proto_rawDescData)
	})
	return file_api_proto_global_Global_proto_rawDescData
}

var file_api_proto_global_Global_proto_enumTypes = make([]protoimpl.EnumInfo, 12)
var file_api_proto_global_Global_proto_goTypes = []interface{}{
	(BusinessType)(0),    // 0: cloud.lianmi.im.global.BusinessType
	(AuthSubType)(0),     // 1: cloud.lianmi.im.global.AuthSubType
	(UsersSubType)(0),    // 2: cloud.lianmi.im.global.UsersSubType
	(FriendsSubType)(0),  // 3: cloud.lianmi.im.global.FriendsSubType
	(GroupSubType)(0),    // 4: cloud.lianmi.im.global.GroupSubType
	(ChatMsgSubType)(0),  // 5: cloud.lianmi.im.global.ChatMsgSubType
	(SyncSubType)(0),     // 6: cloud.lianmi.im.global.SyncSubType
	(OrderSubType)(0),    // 7: cloud.lianmi.im.global.OrderSubType
	(WalletSubType)(0),   // 8: cloud.lianmi.im.global.WalletSubType
	(OrderState)(0),      // 9: cloud.lianmi.im.global.OrderState
	(OrderType)(0),       // 10: cloud.lianmi.im.global.OrderType
	(TransactionType)(0), // 11: cloud.lianmi.im.global.TransactionType
}
var file_api_proto_global_Global_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_api_proto_global_Global_proto_init() }
func file_api_proto_global_Global_proto_init() {
	if File_api_proto_global_Global_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_global_Global_proto_rawDesc,
			NumEnums:      12,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_proto_global_Global_proto_goTypes,
		DependencyIndexes: file_api_proto_global_Global_proto_depIdxs,
		EnumInfos:         file_api_proto_global_Global_proto_enumTypes,
	}.Build()
	File_api_proto_global_Global_proto = out.File
	file_api_proto_global_Global_proto_rawDesc = nil
	file_api_proto_global_Global_proto_goTypes = nil
	file_api_proto_global_Global_proto_depIdxs = nil
}
