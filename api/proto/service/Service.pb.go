// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.7.0
// source: api/proto/service/Service.proto

package serivce

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	global "github.com/lianmi/servers/api/proto/global"
	user "github.com/lianmi/servers/api/proto/user"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RespHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int32  `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode,omitempty"` //错误码  默认是0为成功， 非0-失败
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`    //错误描述
}

func (x *RespHeader) Reset() {
	*x = RespHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_service_Service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespHeader) ProtoMessage() {}

func (x *RespHeader) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_Service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespHeader.ProtoReflect.Descriptor instead.
func (*RespHeader) Descriptor() ([]byte, []int) {
	return file_api_proto_service_Service_proto_rawDescGZIP(), []int{0}
}

func (x *RespHeader) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *RespHeader) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

//=== 用户信息 === //
type UserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UserReq) Reset() {
	*x = UserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_service_Service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserReq) ProtoMessage() {}

func (x *UserReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_Service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserReq.ProtoReflect.Descriptor instead.
func (*UserReq) Descriptor() ([]byte, []int) {
	return file_api_proto_service_Service_proto_rawDescGZIP(), []int{1}
}

func (x *UserReq) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type UserRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *RespHeader `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	User   *user.User  `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UserRsp) Reset() {
	*x = UserRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_service_Service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRsp) ProtoMessage() {}

func (x *UserRsp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_Service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRsp.ProtoReflect.Descriptor instead.
func (*UserRsp) Descriptor() ([]byte, []int) {
	return file_api_proto_service_Service_proto_rawDescGZIP(), []int{2}
}

func (x *UserRsp) GetStatus() *RespHeader {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *UserRsp) GetUser() *user.User {
	if x != nil {
		return x.User
	}
	return nil
}

//==== 注册 ===//
type RegisterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User    *user.User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	SmsCode string     `protobuf:"bytes,2,opt,name=smsCode,proto3" json:"smsCode,omitempty"` //短信验证码
}

func (x *RegisterReq) Reset() {
	*x = RegisterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_service_Service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterReq) ProtoMessage() {}

func (x *RegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_Service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterReq.ProtoReflect.Descriptor instead.
func (*RegisterReq) Descriptor() ([]byte, []int) {
	return file_api_proto_service_Service_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterReq) GetUser() *user.User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *RegisterReq) GetSmsCode() string {
	if x != nil {
		return x.SmsCode
	}
	return ""
}

type RegisterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      *RespHeader `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Accesstoken string      `protobuf:"bytes,2,opt,name=accesstoken,proto3" json:"accesstoken,omitempty"` //注册成功后返回token
}

func (x *RegisterResp) Reset() {
	*x = RegisterResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_service_Service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResp) ProtoMessage() {}

func (x *RegisterResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_Service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResp.ProtoReflect.Descriptor instead.
func (*RegisterResp) Descriptor() ([]byte, []int) {
	return file_api_proto_service_Service_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterResp) GetStatus() *RespHeader {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *RegisterResp) GetAccesstoken() string {
	if x != nil {
		return x.Accesstoken
	}
	return ""
}

//=== 获取短信验证码 ===//
type SmsCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mobile string `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"` //手机号码
}

func (x *SmsCodeReq) Reset() {
	*x = SmsCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_service_Service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmsCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmsCodeReq) ProtoMessage() {}

func (x *SmsCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_Service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmsCodeReq.ProtoReflect.Descriptor instead.
func (*SmsCodeReq) Descriptor() ([]byte, []int) {
	return file_api_proto_service_Service_proto_rawDescGZIP(), []int{5}
}

func (x *SmsCodeReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

type SmsCodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  *RespHeader `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	SmsCode string      `protobuf:"bytes,2,opt,name=smsCode,proto3" json:"smsCode,omitempty"` //短信验证码
}

func (x *SmsCodeResp) Reset() {
	*x = SmsCodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_service_Service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmsCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmsCodeResp) ProtoMessage() {}

func (x *SmsCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_Service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmsCodeResp.ProtoReflect.Descriptor instead.
func (*SmsCodeResp) Descriptor() ([]byte, []int) {
	return file_api_proto_service_Service_proto_rawDescGZIP(), []int{6}
}

func (x *SmsCodeResp) GetStatus() *RespHeader {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *SmsCodeResp) GetSmsCode() string {
	if x != nil {
		return x.SmsCode
	}
	return ""
}

//==== 修改密码 ===//
type ChanPasswdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oldpasswd string `protobuf:"bytes,1,opt,name=oldpasswd,proto3" json:"oldpasswd,omitempty"` //旧密码
	SmsCode   string `protobuf:"bytes,2,opt,name=smsCode,proto3" json:"smsCode,omitempty"`     //短信验证码
	Password  string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`   //新密码
}

func (x *ChanPasswdReq) Reset() {
	*x = ChanPasswdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_service_Service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChanPasswdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChanPasswdReq) ProtoMessage() {}

func (x *ChanPasswdReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_Service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChanPasswdReq.ProtoReflect.Descriptor instead.
func (*ChanPasswdReq) Descriptor() ([]byte, []int) {
	return file_api_proto_service_Service_proto_rawDescGZIP(), []int{7}
}

func (x *ChanPasswdReq) GetOldpasswd() string {
	if x != nil {
		return x.Oldpasswd
	}
	return ""
}

func (x *ChanPasswdReq) GetSmsCode() string {
	if x != nil {
		return x.SmsCode
	}
	return ""
}

func (x *ChanPasswdReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type ChanPasswdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *RespHeader `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ChanPasswdResp) Reset() {
	*x = ChanPasswdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_service_Service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChanPasswdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChanPasswdResp) ProtoMessage() {}

func (x *ChanPasswdResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_Service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChanPasswdResp.ProtoReflect.Descriptor instead.
func (*ChanPasswdResp) Descriptor() ([]byte, []int) {
	return file_api_proto_service_Service_proto_rawDescGZIP(), []int{8}
}

func (x *ChanPasswdResp) GetStatus() *RespHeader {
	if x != nil {
		return x.Status
	}
	return nil
}

//==== 根据用户名及密码登录 ===//
type LoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` //用户名
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` //MD5加密过的
	SmsCode  string `protobuf:"bytes,3,opt,name=smsCode,proto3" json:"smsCode,omitempty"`   //短信验证码
}

func (x *LoginReq) Reset() {
	*x = LoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_service_Service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReq) ProtoMessage() {}

func (x *LoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_Service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReq.ProtoReflect.Descriptor instead.
func (*LoginReq) Descriptor() ([]byte, []int) {
	return file_api_proto_service_Service_proto_rawDescGZIP(), []int{9}
}

func (x *LoginReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginReq) GetSmsCode() string {
	if x != nil {
		return x.SmsCode
	}
	return ""
}

type LoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      *RespHeader `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Accesstoken string      `protobuf:"bytes,2,opt,name=accesstoken,proto3" json:"accesstoken,omitempty"` //用户token, jwt
}

func (x *LoginResp) Reset() {
	*x = LoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_service_Service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResp) ProtoMessage() {}

func (x *LoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_Service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResp.ProtoReflect.Descriptor instead.
func (*LoginResp) Descriptor() ([]byte, []int) {
	return file_api_proto_service_Service_proto_rawDescGZIP(), []int{10}
}

func (x *LoginResp) GetStatus() *RespHeader {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *LoginResp) GetAccesstoken() string {
	if x != nil {
		return x.Accesstoken
	}
	return ""
}

//==== 登出 =====//
type SignOutReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignOutReq) Reset() {
	*x = SignOutReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_service_Service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignOutReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignOutReq) ProtoMessage() {}

func (x *SignOutReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_Service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignOutReq.ProtoReflect.Descriptor instead.
func (*SignOutReq) Descriptor() ([]byte, []int) {
	return file_api_proto_service_Service_proto_rawDescGZIP(), []int{11}
}

type SignOutResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *RespHeader `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SignOutResp) Reset() {
	*x = SignOutResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_service_Service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignOutResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignOutResp) ProtoMessage() {}

func (x *SignOutResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_Service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignOutResp.ProtoReflect.Descriptor instead.
func (*SignOutResp) Descriptor() ([]byte, []int) {
	return file_api_proto_service_Service_proto_rawDescGZIP(), []int{12}
}

func (x *SignOutResp) GetStatus() *RespHeader {
	if x != nil {
		return x.Status
	}
	return nil
}

type CustomerServiceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//客服或技术人员的注册账号id
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	//客服或技术人员的工号
	JobNumber string `protobuf:"bytes,2,opt,name=jobNumber,proto3" json:"jobNumber,omitempty"`
	//客服或技术人员的类型， 1-客服，2-技术
	Type global.CustomerServiceType `protobuf:"varint,3,opt,name=type,proto3,enum=cloud.lianmi.im.global.CustomerServiceType" json:"type,omitempty"`
	//职称, 技术工程师，技术员等
	Evaluation string `protobuf:"bytes,4,opt,name=evaluation,proto3" json:"evaluation,omitempty"`
	//呢称,
	NickName string `protobuf:"bytes,5,opt,name=nickName,proto3" json:"nickName,omitempty"`
}

func (x *CustomerServiceInfo) Reset() {
	*x = CustomerServiceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_service_Service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerServiceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerServiceInfo) ProtoMessage() {}

func (x *CustomerServiceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_Service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerServiceInfo.ProtoReflect.Descriptor instead.
func (*CustomerServiceInfo) Descriptor() ([]byte, []int) {
	return file_api_proto_service_Service_proto_rawDescGZIP(), []int{13}
}

func (x *CustomerServiceInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CustomerServiceInfo) GetJobNumber() string {
	if x != nil {
		return x.JobNumber
	}
	return ""
}

func (x *CustomerServiceInfo) GetType() global.CustomerServiceType {
	if x != nil {
		return x.Type
	}
	return global.CustomerServiceType_CS_Undefined
}

func (x *CustomerServiceInfo) GetEvaluation() string {
	if x != nil {
		return x.Evaluation
	}
	return ""
}

func (x *CustomerServiceInfo) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

type CustomerServicesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//true查询空闲, false -所有
	IsIdle bool `protobuf:"varint,1,opt,name=isIdle,proto3" json:"isIdle,omitempty"`
	//客服或技术人员的注册账号id
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	//客服或技术人员的工号
	JobNumber string `protobuf:"bytes,3,opt,name=jobNumber,proto3" json:"jobNumber,omitempty"`
	//客服或技术人员的类型， 1-客服，2-技术 0 - 所有
	Type global.CustomerServiceType `protobuf:"varint,4,opt,name=type,proto3,enum=cloud.lianmi.im.global.CustomerServiceType" json:"type,omitempty"`
	//职称, 技术工程师，技术员等
	Evaluation string `protobuf:"bytes,5,opt,name=evaluation,proto3" json:"evaluation,omitempty"`
	//呢称,
	NickName string `protobuf:"bytes,6,opt,name=nickName,proto3" json:"nickName,omitempty"`
}

func (x *CustomerServicesReq) Reset() {
	*x = CustomerServicesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_service_Service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerServicesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerServicesReq) ProtoMessage() {}

func (x *CustomerServicesReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_Service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerServicesReq.ProtoReflect.Descriptor instead.
func (*CustomerServicesReq) Descriptor() ([]byte, []int) {
	return file_api_proto_service_Service_proto_rawDescGZIP(), []int{14}
}

func (x *CustomerServicesReq) GetIsIdle() bool {
	if x != nil {
		return x.IsIdle
	}
	return false
}

func (x *CustomerServicesReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CustomerServicesReq) GetJobNumber() string {
	if x != nil {
		return x.JobNumber
	}
	return ""
}

func (x *CustomerServicesReq) GetType() global.CustomerServiceType {
	if x != nil {
		return x.Type
	}
	return global.CustomerServiceType_CS_Undefined
}

func (x *CustomerServicesReq) GetEvaluation() string {
	if x != nil {
		return x.Evaluation
	}
	return ""
}

func (x *CustomerServicesReq) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

type CustomerServicesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status                 *RespHeader            `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	OnlineCustomerServices []*CustomerServiceInfo `protobuf:"bytes,2,rep,name=onlineCustomerServices,proto3" json:"onlineCustomerServices,omitempty"`
}

func (x *CustomerServicesResp) Reset() {
	*x = CustomerServicesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_service_Service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerServicesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerServicesResp) ProtoMessage() {}

func (x *CustomerServicesResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_Service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerServicesResp.ProtoReflect.Descriptor instead.
func (*CustomerServicesResp) Descriptor() ([]byte, []int) {
	return file_api_proto_service_Service_proto_rawDescGZIP(), []int{15}
}

func (x *CustomerServicesResp) GetStatus() *RespHeader {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *CustomerServicesResp) GetOnlineCustomerServices() []*CustomerServiceInfo {
	if x != nil {
		return x.OnlineCustomerServices
	}
	return nil
}

type GradeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 本次app用户求助的标题，约定： consult + _+ 日期字符串(20201025) + _ + 编号（自增）
	Title string `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	//APP用户的注册账号id
	AppUsername string `protobuf:"bytes,2,opt,name=AppUsername,proto3" json:"AppUsername,omitempty"`
	//客服或技术人员的注册账号id
	CustomerServiceUsername string `protobuf:"bytes,3,opt,name=CustomerServiceUsername,proto3" json:"CustomerServiceUsername,omitempty"`
	//客服或技术人员的工号
	JobNumber string `protobuf:"bytes,4,opt,name=JobNumber,proto3" json:"JobNumber,omitempty"`
	//客服或技术人员的类型， 1-客服，2-技术
	Type global.CustomerServiceType `protobuf:"varint,5,opt,name=type,proto3,enum=cloud.lianmi.im.global.CustomerServiceType" json:"type,omitempty"`
	//职称, 技术工程师，技术员等
	Evaluation string `protobuf:"bytes,6,opt,name=Evaluation,proto3" json:"Evaluation,omitempty"`
	//呢称
	NickName string `protobuf:"bytes,7,opt,name=NickName,proto3" json:"NickName,omitempty"`
	//问题类型
	Catalog string `protobuf:"bytes,8,opt,name=Catalog,proto3" json:"Catalog,omitempty"`
	//问题描述
	Desc string `protobuf:"bytes,9,opt,name=Desc,proto3" json:"Desc,omitempty"`
	//评分, 0-3 4-6 7-10
	GradeNum int32 `protobuf:"varint,10,opt,name=GradeNum,proto3" json:"GradeNum,omitempty"`
}

func (x *GradeInfo) Reset() {
	*x = GradeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_service_Service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GradeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GradeInfo) ProtoMessage() {}

func (x *GradeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_Service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GradeInfo.ProtoReflect.Descriptor instead.
func (*GradeInfo) Descriptor() ([]byte, []int) {
	return file_api_proto_service_Service_proto_rawDescGZIP(), []int{16}
}

func (x *GradeInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GradeInfo) GetAppUsername() string {
	if x != nil {
		return x.AppUsername
	}
	return ""
}

func (x *GradeInfo) GetCustomerServiceUsername() string {
	if x != nil {
		return x.CustomerServiceUsername
	}
	return ""
}

func (x *GradeInfo) GetJobNumber() string {
	if x != nil {
		return x.JobNumber
	}
	return ""
}

func (x *GradeInfo) GetType() global.CustomerServiceType {
	if x != nil {
		return x.Type
	}
	return global.CustomerServiceType_CS_Undefined
}

func (x *GradeInfo) GetEvaluation() string {
	if x != nil {
		return x.Evaluation
	}
	return ""
}

func (x *GradeInfo) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *GradeInfo) GetCatalog() string {
	if x != nil {
		return x.Catalog
	}
	return ""
}

func (x *GradeInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *GradeInfo) GetGradeNum() int32 {
	if x != nil {
		return x.GradeNum
	}
	return 0
}

//必须由客服技术人员构造title，然后用约定的方式发送给用户，用户在UI弹出评分页面， 填写后提交
type GradeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 本次app用户求助的标题，约定： consult + _+ 日期字符串(20201025) + _ + 编号（自增）
	Title string `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	//APP用户的注册账号id
	AppUsername string `protobuf:"bytes,2,opt,name=AppUsername,proto3" json:"AppUsername,omitempty"`
	//客服或技术人员的注册账号id
	CustomerServiceUsername string `protobuf:"bytes,3,opt,name=CustomerServiceUsername,proto3" json:"CustomerServiceUsername,omitempty"`
	//评分, 0-3 4-6 7-10
	GradeNum int32 `protobuf:"varint,4,opt,name=GradeNum,proto3" json:"GradeNum,omitempty"`
	//页数,第几页
	//默认1
	//是否必填-否
	PageIndex int32 `protobuf:"varint,5,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"` // [default=1];
	//每页成员数量
	//默认100,最大只允许100
	//是否必填-否
	PageSize int32 `protobuf:"varint,6,opt,name=pageSize,proto3" json:"pageSize,omitempty"` // [default=100];
	//开始时间
	StartAt uint64 `protobuf:"fixed64,7,opt,name=startAt,proto3" json:"startAt,omitempty"`
	//结束时间
	EndAt uint64 `protobuf:"fixed64,8,opt,name=endAt,proto3" json:"endAt,omitempty"`
}

func (x *GradeReq) Reset() {
	*x = GradeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_service_Service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GradeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GradeReq) ProtoMessage() {}

func (x *GradeReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_Service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GradeReq.ProtoReflect.Descriptor instead.
func (*GradeReq) Descriptor() ([]byte, []int) {
	return file_api_proto_service_Service_proto_rawDescGZIP(), []int{17}
}

func (x *GradeReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GradeReq) GetAppUsername() string {
	if x != nil {
		return x.AppUsername
	}
	return ""
}

func (x *GradeReq) GetCustomerServiceUsername() string {
	if x != nil {
		return x.CustomerServiceUsername
	}
	return ""
}

func (x *GradeReq) GetGradeNum() int32 {
	if x != nil {
		return x.GradeNum
	}
	return 0
}

func (x *GradeReq) GetPageIndex() int32 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *GradeReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GradeReq) GetStartAt() uint64 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *GradeReq) GetEndAt() uint64 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

type GradesPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total  uint64       `protobuf:"fixed64,1,opt,name=total,proto3" json:"total,omitempty"`
	Grades []*GradeInfo `protobuf:"bytes,2,rep,name=grades,proto3" json:"grades,omitempty"`
}

func (x *GradesPage) Reset() {
	*x = GradesPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_service_Service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GradesPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GradesPage) ProtoMessage() {}

func (x *GradesPage) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_Service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GradesPage.ProtoReflect.Descriptor instead.
func (*GradesPage) Descriptor() ([]byte, []int) {
	return file_api_proto_service_Service_proto_rawDescGZIP(), []int{18}
}

func (x *GradesPage) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GradesPage) GetGrades() []*GradeInfo {
	if x != nil {
		return x.Grades
	}
	return nil
}

type GradesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *RespHeader `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Pages  *GradesPage `protobuf:"bytes,2,opt,name=pages,proto3" json:"pages,omitempty"`
}

func (x *GradesResp) Reset() {
	*x = GradesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_service_Service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GradesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GradesResp) ProtoMessage() {}

func (x *GradesResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_Service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GradesResp.ProtoReflect.Descriptor instead.
func (*GradesResp) Descriptor() ([]byte, []int) {
	return file_api_proto_service_Service_proto_rawDescGZIP(), []int{19}
}

func (x *GradesResp) GetStatus() *RespHeader {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GradesResp) GetPages() *GradesPage {
	if x != nil {
		return x.Pages
	}
	return nil
}

//客服人员增加求助记录，以便发给用户评分
type AddGradeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//客服或技术人员的注册账号id
	CustomerServiceUsername string `protobuf:"bytes,1,opt,name=CustomerServiceUsername,proto3" json:"CustomerServiceUsername,omitempty"`
	//问题类型
	Catalog string `protobuf:"bytes,2,opt,name=Catalog,proto3" json:"Catalog,omitempty"`
	//问题描述
	Desc string `protobuf:"bytes,3,opt,name=Desc,proto3" json:"Desc,omitempty"`
}

func (x *AddGradeReq) Reset() {
	*x = AddGradeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_service_Service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGradeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGradeReq) ProtoMessage() {}

func (x *AddGradeReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_Service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGradeReq.ProtoReflect.Descriptor instead.
func (*AddGradeReq) Descriptor() ([]byte, []int) {
	return file_api_proto_service_Service_proto_rawDescGZIP(), []int{20}
}

func (x *AddGradeReq) GetCustomerServiceUsername() string {
	if x != nil {
		return x.CustomerServiceUsername
	}
	return ""
}

func (x *AddGradeReq) GetCatalog() string {
	if x != nil {
		return x.Catalog
	}
	return ""
}

func (x *AddGradeReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type GradeTitleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//客服或技术人员的注册账号id
	CustomerServiceUsername string `protobuf:"bytes,1,opt,name=CustomerServiceUsername,proto3" json:"CustomerServiceUsername,omitempty"`
	// 本次app用户求助的标题，约定： consult +'-' + 日期字符串(2020-10-25) + '-' + 编号（自增）
	Title string `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
}

func (x *GradeTitleInfo) Reset() {
	*x = GradeTitleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_service_Service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GradeTitleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GradeTitleInfo) ProtoMessage() {}

func (x *GradeTitleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_Service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GradeTitleInfo.ProtoReflect.Descriptor instead.
func (*GradeTitleInfo) Descriptor() ([]byte, []int) {
	return file_api_proto_service_Service_proto_rawDescGZIP(), []int{21}
}

func (x *GradeTitleInfo) GetCustomerServiceUsername() string {
	if x != nil {
		return x.CustomerServiceUsername
	}
	return ""
}

func (x *GradeTitleInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type AddGradesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *RespHeader     `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Info   *GradeTitleInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *AddGradesResp) Reset() {
	*x = AddGradesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_service_Service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGradesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGradesResp) ProtoMessage() {}

func (x *AddGradesResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_Service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGradesResp.ProtoReflect.Descriptor instead.
func (*AddGradesResp) Descriptor() ([]byte, []int) {
	return file_api_proto_service_Service_proto_rawDescGZIP(), []int{22}
}

func (x *AddGradesResp) GetStatus() *RespHeader {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *AddGradesResp) GetInfo() *GradeTitleInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

//app用户提交评分
type SubmitGradeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//APP用户的注册账号id
	AppUsername string `protobuf:"bytes,1,opt,name=AppUsername,proto3" json:"AppUsername,omitempty"`
	// 本次app用户求助的标题，约定： consult + _+ 日期字符串(20201025) + _ + 编号（自增）
	Title string `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	//评分, 0-3 4-6 7-10
	GradeNum int32 `protobuf:"varint,3,opt,name=GradeNum,proto3" json:"GradeNum,omitempty"`
}

func (x *SubmitGradeReq) Reset() {
	*x = SubmitGradeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_service_Service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitGradeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitGradeReq) ProtoMessage() {}

func (x *SubmitGradeReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_Service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitGradeReq.ProtoReflect.Descriptor instead.
func (*SubmitGradeReq) Descriptor() ([]byte, []int) {
	return file_api_proto_service_Service_proto_rawDescGZIP(), []int{23}
}

func (x *SubmitGradeReq) GetAppUsername() string {
	if x != nil {
		return x.AppUsername
	}
	return ""
}

func (x *SubmitGradeReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SubmitGradeReq) GetGradeNum() int32 {
	if x != nil {
		return x.GradeNum
	}
	return 0
}

type SubmitGradeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *RespHeader `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SubmitGradeResp) Reset() {
	*x = SubmitGradeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_service_Service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitGradeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitGradeResp) ProtoMessage() {}

func (x *SubmitGradeResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_Service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitGradeResp.ProtoReflect.Descriptor instead.
func (*SubmitGradeResp) Descriptor() ([]byte, []int) {
	return file_api_proto_service_Service_proto_rawDescGZIP(), []int{24}
}

func (x *SubmitGradeResp) GetStatus() *RespHeader {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_api_proto_service_Service_proto protoreflect.FileDescriptor

var file_api_proto_service_Service_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x17, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e,
	0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x76, 0x63, 0x65, 0x1a, 0x19, 0x61, 0x70, 0x69, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x55, 0x73, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3e, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x70, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72,
	0x72, 0x4d, 0x73, 0x67, 0x22, 0x1d, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x22, 0x76, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x3b,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d,
	0x2e, 0x73, 0x65, 0x72, 0x69, 0x76, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x57, 0x0a, 0x0b, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6d,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6d, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x6d, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69, 0x61,
	0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x76, 0x63, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x24, 0x0a, 0x0a, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x22, 0x64, 0x0a, 0x0b, 0x53, 0x6d, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x76,
	0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x63, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x6c, 0x64, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x6c, 0x64, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x22, 0x4d, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c,
	0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x76, 0x63, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x5c, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6d, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6d, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0x6a, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d,
	0x2e, 0x73, 0x65, 0x72, 0x69, 0x76, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x0c, 0x0a,
	0x0a, 0x53, 0x69, 0x67, 0x6e, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x22, 0x4a, 0x0a, 0x0b, 0x53,
	0x69, 0x67, 0x6e, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72,
	0x69, 0x76, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xcc, 0x01, 0x0a, 0x13, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6a,
	0x6f, 0x62, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6a, 0x6f, 0x62, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xe4, 0x01, 0x0a, 0x13, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x73, 0x49, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x69, 0x73, 0x49, 0x64, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6a, 0x6f, 0x62, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6a, 0x6f, 0x62, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x3f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d,
	0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb9, 0x01,
	0x0a, 0x14, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c,
	0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x76, 0x63, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x64, 0x0a, 0x16, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69, 0x61, 0x6e,
	0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x76, 0x63, 0x65, 0x2e, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x16, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0xe2, 0x02, 0x0a, 0x09, 0x47, 0x72,
	0x61, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x38, 0x0a, 0x17, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x17, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4a, 0x6f, 0x62,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4a, 0x6f,
	0x62, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69,
	0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x45, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65,
	0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x47, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x82,
	0x02, 0x0a, 0x08, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x17, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x47, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x47, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x06, 0x52, 0x05, 0x65, 0x6e,
	0x64, 0x41, 0x74, 0x22, 0x5e, 0x0a, 0x0a, 0x47, 0x72, 0x61, 0x64, 0x65, 0x73, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3a, 0x0a, 0x06, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x76, 0x63,
	0x65, 0x2e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x0a, 0x47, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d,
	0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x76, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x39, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d,
	0x2e, 0x73, 0x65, 0x72, 0x69, 0x76, 0x63, 0x65, 0x2e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x73, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x22, 0x75, 0x0a, 0x0b, 0x41, 0x64,
	0x64, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x38, 0x0a, 0x17, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65, 0x73,
	0x63, 0x22, 0x60, 0x0a, 0x0e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x38, 0x0a, 0x17, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x47, 0x72, 0x61, 0x64, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69,
	0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x76, 0x63, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x3b, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e,
	0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x76, 0x63, 0x65, 0x2e, 0x47, 0x72, 0x61, 0x64, 0x65,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22,
	0x64, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x72, 0x61,
	0x64, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x47, 0x72, 0x61,
	0x64, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x4e, 0x0a, 0x0f, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x47,
	0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x76,
	0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0xff, 0x09, 0x0a, 0x0a, 0x4c, 0x69, 0x61, 0x6e, 0x6d, 0x69,
	0x41, 0x70, 0x69, 0x73, 0x12, 0x4d, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x20, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69,
	0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x76, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x1a, 0x20, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69,
	0x2e, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x76, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x73, 0x70, 0x12, 0x5c, 0x0a, 0x0f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53,
	0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c,
	0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x76, 0x63, 0x65,
	0x2e, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x73, 0x65,
	0x72, 0x69, 0x76, 0x63, 0x65, 0x2e, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x57, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x24, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e,
	0x73, 0x65, 0x72, 0x69, 0x76, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69, 0x61, 0x6e,
	0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x76, 0x63, 0x65, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x05, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x12, 0x21, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69, 0x61, 0x6e,
	0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x76, 0x63, 0x65, 0x2e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c,
	0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x76, 0x63, 0x65,
	0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x07, 0x53, 0x69,
	0x67, 0x6e, 0x4f, 0x75, 0x74, 0x12, 0x23, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69,
	0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x76, 0x63, 0x65, 0x2e,
	0x53, 0x69, 0x67, 0x6e, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72,
	0x69, 0x76, 0x63, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x5d, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x64, 0x12, 0x26,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d,
	0x2e, 0x73, 0x65, 0x72, 0x69, 0x76, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c,
	0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x76, 0x63, 0x65,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x74, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x2c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x76,
	0x63, 0x65, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c,
	0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x76, 0x63, 0x65,
	0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x71, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x73, 0x65,
	0x72, 0x69, 0x76, 0x63, 0x65, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69,
	0x76, 0x63, 0x65, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x74, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x2c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69,
	0x2e, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x76, 0x63, 0x65, 0x2e, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x2d, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69,
	0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x76, 0x63, 0x65, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x74,
	0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x76, 0x63,
	0x65, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69,
	0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x76, 0x63, 0x65, 0x2e,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x55, 0x0a, 0x0b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x72, 0x61,
	0x64, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69, 0x61, 0x6e,
	0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x76, 0x63, 0x65, 0x2e, 0x47, 0x72,
	0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c,
	0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x76, 0x63, 0x65,
	0x2e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x58, 0x0a, 0x08, 0x41,
	0x64, 0x64, 0x47, 0x72, 0x61, 0x64, 0x65, 0x12, 0x24, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x76, 0x63,
	0x65, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e,
	0x73, 0x65, 0x72, 0x69, 0x76, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x72, 0x61, 0x64, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x60, 0x0a, 0x0b, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x47,
	0x72, 0x61, 0x64, 0x65, 0x12, 0x27, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69, 0x61,
	0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x76, 0x63, 0x65, 0x2e, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e,
	0x73, 0x65, 0x72, 0x69, 0x76, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x47, 0x72,
	0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73,
	0x65, 0x72, 0x69, 0x76, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_service_Service_proto_rawDescOnce sync.Once
	file_api_proto_service_Service_proto_rawDescData = file_api_proto_service_Service_proto_rawDesc
)

func file_api_proto_service_Service_proto_rawDescGZIP() []byte {
	file_api_proto_service_Service_proto_rawDescOnce.Do(func() {
		file_api_proto_service_Service_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_service_Service_proto_rawDescData)
	})
	return file_api_proto_service_Service_proto_rawDescData
}

var file_api_proto_service_Service_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_api_proto_service_Service_proto_goTypes = []interface{}{
	(*RespHeader)(nil),              // 0: cloud.lianmi.im.serivce.RespHeader
	(*UserReq)(nil),                 // 1: cloud.lianmi.im.serivce.UserReq
	(*UserRsp)(nil),                 // 2: cloud.lianmi.im.serivce.UserRsp
	(*RegisterReq)(nil),             // 3: cloud.lianmi.im.serivce.RegisterReq
	(*RegisterResp)(nil),            // 4: cloud.lianmi.im.serivce.RegisterResp
	(*SmsCodeReq)(nil),              // 5: cloud.lianmi.im.serivce.SmsCodeReq
	(*SmsCodeResp)(nil),             // 6: cloud.lianmi.im.serivce.SmsCodeResp
	(*ChanPasswdReq)(nil),           // 7: cloud.lianmi.im.serivce.ChanPasswdReq
	(*ChanPasswdResp)(nil),          // 8: cloud.lianmi.im.serivce.ChanPasswdResp
	(*LoginReq)(nil),                // 9: cloud.lianmi.im.serivce.LoginReq
	(*LoginResp)(nil),               // 10: cloud.lianmi.im.serivce.LoginResp
	(*SignOutReq)(nil),              // 11: cloud.lianmi.im.serivce.SignOutReq
	(*SignOutResp)(nil),             // 12: cloud.lianmi.im.serivce.SignOutResp
	(*CustomerServiceInfo)(nil),     // 13: cloud.lianmi.im.serivce.CustomerServiceInfo
	(*CustomerServicesReq)(nil),     // 14: cloud.lianmi.im.serivce.CustomerServicesReq
	(*CustomerServicesResp)(nil),    // 15: cloud.lianmi.im.serivce.CustomerServicesResp
	(*GradeInfo)(nil),               // 16: cloud.lianmi.im.serivce.GradeInfo
	(*GradeReq)(nil),                // 17: cloud.lianmi.im.serivce.GradeReq
	(*GradesPage)(nil),              // 18: cloud.lianmi.im.serivce.GradesPage
	(*GradesResp)(nil),              // 19: cloud.lianmi.im.serivce.GradesResp
	(*AddGradeReq)(nil),             // 20: cloud.lianmi.im.serivce.AddGradeReq
	(*GradeTitleInfo)(nil),          // 21: cloud.lianmi.im.serivce.GradeTitleInfo
	(*AddGradesResp)(nil),           // 22: cloud.lianmi.im.serivce.AddGradesResp
	(*SubmitGradeReq)(nil),          // 23: cloud.lianmi.im.serivce.SubmitGradeReq
	(*SubmitGradeResp)(nil),         // 24: cloud.lianmi.im.serivce.SubmitGradeResp
	(*user.User)(nil),               // 25: cloud.lianmi.im.user.User
	(global.CustomerServiceType)(0), // 26: cloud.lianmi.im.global.CustomerServiceType
}
var file_api_proto_service_Service_proto_depIdxs = []int32{
	0,  // 0: cloud.lianmi.im.serivce.UserRsp.status:type_name -> cloud.lianmi.im.serivce.RespHeader
	25, // 1: cloud.lianmi.im.serivce.UserRsp.user:type_name -> cloud.lianmi.im.user.User
	25, // 2: cloud.lianmi.im.serivce.RegisterReq.user:type_name -> cloud.lianmi.im.user.User
	0,  // 3: cloud.lianmi.im.serivce.RegisterResp.status:type_name -> cloud.lianmi.im.serivce.RespHeader
	0,  // 4: cloud.lianmi.im.serivce.SmsCodeResp.status:type_name -> cloud.lianmi.im.serivce.RespHeader
	0,  // 5: cloud.lianmi.im.serivce.ChanPasswdResp.status:type_name -> cloud.lianmi.im.serivce.RespHeader
	0,  // 6: cloud.lianmi.im.serivce.LoginResp.status:type_name -> cloud.lianmi.im.serivce.RespHeader
	0,  // 7: cloud.lianmi.im.serivce.SignOutResp.status:type_name -> cloud.lianmi.im.serivce.RespHeader
	26, // 8: cloud.lianmi.im.serivce.CustomerServiceInfo.type:type_name -> cloud.lianmi.im.global.CustomerServiceType
	26, // 9: cloud.lianmi.im.serivce.CustomerServicesReq.type:type_name -> cloud.lianmi.im.global.CustomerServiceType
	0,  // 10: cloud.lianmi.im.serivce.CustomerServicesResp.status:type_name -> cloud.lianmi.im.serivce.RespHeader
	13, // 11: cloud.lianmi.im.serivce.CustomerServicesResp.onlineCustomerServices:type_name -> cloud.lianmi.im.serivce.CustomerServiceInfo
	26, // 12: cloud.lianmi.im.serivce.GradeInfo.type:type_name -> cloud.lianmi.im.global.CustomerServiceType
	16, // 13: cloud.lianmi.im.serivce.GradesPage.grades:type_name -> cloud.lianmi.im.serivce.GradeInfo
	0,  // 14: cloud.lianmi.im.serivce.GradesResp.status:type_name -> cloud.lianmi.im.serivce.RespHeader
	18, // 15: cloud.lianmi.im.serivce.GradesResp.pages:type_name -> cloud.lianmi.im.serivce.GradesPage
	0,  // 16: cloud.lianmi.im.serivce.AddGradesResp.status:type_name -> cloud.lianmi.im.serivce.RespHeader
	21, // 17: cloud.lianmi.im.serivce.AddGradesResp.info:type_name -> cloud.lianmi.im.serivce.GradeTitleInfo
	0,  // 18: cloud.lianmi.im.serivce.SubmitGradeResp.status:type_name -> cloud.lianmi.im.serivce.RespHeader
	1,  // 19: cloud.lianmi.im.serivce.LianmiApis.GetUser:input_type -> cloud.lianmi.im.serivce.UserReq
	5,  // 20: cloud.lianmi.im.serivce.LianmiApis.GenerateSmsCode:input_type -> cloud.lianmi.im.serivce.SmsCodeReq
	3,  // 21: cloud.lianmi.im.serivce.LianmiApis.Register:input_type -> cloud.lianmi.im.serivce.RegisterReq
	9,  // 22: cloud.lianmi.im.serivce.LianmiApis.Login:input_type -> cloud.lianmi.im.serivce.LoginReq
	11, // 23: cloud.lianmi.im.serivce.LianmiApis.SignOut:input_type -> cloud.lianmi.im.serivce.SignOutReq
	7,  // 24: cloud.lianmi.im.serivce.LianmiApis.ChanPasswd:input_type -> cloud.lianmi.im.serivce.ChanPasswdReq
	14, // 25: cloud.lianmi.im.serivce.LianmiApis.QueryCustomerServices:input_type -> cloud.lianmi.im.serivce.CustomerServicesReq
	14, // 26: cloud.lianmi.im.serivce.LianmiApis.AddCustomerService:input_type -> cloud.lianmi.im.serivce.CustomerServicesReq
	14, // 27: cloud.lianmi.im.serivce.LianmiApis.DeleteCustomerService:input_type -> cloud.lianmi.im.serivce.CustomerServicesReq
	14, // 28: cloud.lianmi.im.serivce.LianmiApis.UpdateCustomerService:input_type -> cloud.lianmi.im.serivce.CustomerServicesReq
	17, // 29: cloud.lianmi.im.serivce.LianmiApis.QueryGrades:input_type -> cloud.lianmi.im.serivce.GradeReq
	20, // 30: cloud.lianmi.im.serivce.LianmiApis.AddGrade:input_type -> cloud.lianmi.im.serivce.AddGradeReq
	23, // 31: cloud.lianmi.im.serivce.LianmiApis.SubmitGrade:input_type -> cloud.lianmi.im.serivce.SubmitGradeReq
	2,  // 32: cloud.lianmi.im.serivce.LianmiApis.GetUser:output_type -> cloud.lianmi.im.serivce.UserRsp
	6,  // 33: cloud.lianmi.im.serivce.LianmiApis.GenerateSmsCode:output_type -> cloud.lianmi.im.serivce.SmsCodeResp
	4,  // 34: cloud.lianmi.im.serivce.LianmiApis.Register:output_type -> cloud.lianmi.im.serivce.RegisterResp
	10, // 35: cloud.lianmi.im.serivce.LianmiApis.Login:output_type -> cloud.lianmi.im.serivce.LoginResp
	12, // 36: cloud.lianmi.im.serivce.LianmiApis.SignOut:output_type -> cloud.lianmi.im.serivce.SignOutResp
	8,  // 37: cloud.lianmi.im.serivce.LianmiApis.ChanPasswd:output_type -> cloud.lianmi.im.serivce.ChanPasswdResp
	15, // 38: cloud.lianmi.im.serivce.LianmiApis.QueryCustomerServices:output_type -> cloud.lianmi.im.serivce.CustomerServicesResp
	15, // 39: cloud.lianmi.im.serivce.LianmiApis.AddCustomerService:output_type -> cloud.lianmi.im.serivce.CustomerServicesResp
	15, // 40: cloud.lianmi.im.serivce.LianmiApis.DeleteCustomerService:output_type -> cloud.lianmi.im.serivce.CustomerServicesResp
	15, // 41: cloud.lianmi.im.serivce.LianmiApis.UpdateCustomerService:output_type -> cloud.lianmi.im.serivce.CustomerServicesResp
	19, // 42: cloud.lianmi.im.serivce.LianmiApis.QueryGrades:output_type -> cloud.lianmi.im.serivce.GradesResp
	22, // 43: cloud.lianmi.im.serivce.LianmiApis.AddGrade:output_type -> cloud.lianmi.im.serivce.AddGradesResp
	24, // 44: cloud.lianmi.im.serivce.LianmiApis.SubmitGrade:output_type -> cloud.lianmi.im.serivce.SubmitGradeResp
	32, // [32:45] is the sub-list for method output_type
	19, // [19:32] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_api_proto_service_Service_proto_init() }
func file_api_proto_service_Service_proto_init() {
	if File_api_proto_service_Service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_service_Service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_service_Service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_service_Service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_service_Service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_service_Service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_service_Service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmsCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_service_Service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmsCodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_service_Service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChanPasswdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_service_Service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChanPasswdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_service_Service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_service_Service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_service_Service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignOutReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_service_Service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignOutResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_service_Service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerServiceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_service_Service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerServicesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_service_Service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerServicesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_service_Service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GradeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_service_Service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GradeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_service_Service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GradesPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_service_Service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GradesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_service_Service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGradeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_service_Service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GradeTitleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_service_Service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGradesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_service_Service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitGradeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_service_Service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitGradeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_service_Service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_service_Service_proto_goTypes,
		DependencyIndexes: file_api_proto_service_Service_proto_depIdxs,
		MessageInfos:      file_api_proto_service_Service_proto_msgTypes,
	}.Build()
	File_api_proto_service_Service_proto = out.File
	file_api_proto_service_Service_proto_rawDesc = nil
	file_api_proto_service_Service_proto_goTypes = nil
	file_api_proto_service_Service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LianmiApisClient is the client API for LianmiApis service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LianmiApisClient interface {
	//获取用户信息
	GetUser(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*UserRsp, error)
	//短信验证码
	GenerateSmsCode(ctx context.Context, in *SmsCodeReq, opts ...grpc.CallOption) (*SmsCodeResp, error)
	//注册
	Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error)
	//登录 Login,  根据手机号及密码， 获取token
	Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error)
	//登出 SignOut,  服务端会删除此用户的Token
	SignOut(ctx context.Context, in *SignOutReq, opts ...grpc.CallOption) (*SignOutResp, error)
	//修改密码
	ChanPasswd(ctx context.Context, in *ChanPasswdReq, opts ...grpc.CallOption) (*ChanPasswdResp, error)
	//查出当前所有空闲的客服id, 用于UI端的联系客服人员
	QueryCustomerServices(ctx context.Context, in *CustomerServicesReq, opts ...grpc.CallOption) (*CustomerServicesResp, error)
	//增加客服技术人员名单， 要先注册
	AddCustomerService(ctx context.Context, in *CustomerServicesReq, opts ...grpc.CallOption) (*CustomerServicesResp, error)
	// 删除客服技术人员
	DeleteCustomerService(ctx context.Context, in *CustomerServicesReq, opts ...grpc.CallOption) (*CustomerServicesResp, error)
	// 修改客服技术人员
	UpdateCustomerService(ctx context.Context, in *CustomerServicesReq, opts ...grpc.CallOption) (*CustomerServicesResp, error)
	// 按条件查出客服评分
	QueryGrades(ctx context.Context, in *GradeReq, opts ...grpc.CallOption) (*GradesResp, error)
	//客服人员增加客服评分记录，以便生成title发送给用户提交评分
	AddGrade(ctx context.Context, in *AddGradeReq, opts ...grpc.CallOption) (*AddGradesResp, error)
	// app用户提交评分
	SubmitGrade(ctx context.Context, in *SubmitGradeReq, opts ...grpc.CallOption) (*SubmitGradeResp, error)
}

type lianmiApisClient struct {
	cc grpc.ClientConnInterface
}

func NewLianmiApisClient(cc grpc.ClientConnInterface) LianmiApisClient {
	return &lianmiApisClient{cc}
}

func (c *lianmiApisClient) GetUser(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*UserRsp, error) {
	out := new(UserRsp)
	err := c.cc.Invoke(ctx, "/cloud.lianmi.im.serivce.LianmiApis/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lianmiApisClient) GenerateSmsCode(ctx context.Context, in *SmsCodeReq, opts ...grpc.CallOption) (*SmsCodeResp, error) {
	out := new(SmsCodeResp)
	err := c.cc.Invoke(ctx, "/cloud.lianmi.im.serivce.LianmiApis/GenerateSmsCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lianmiApisClient) Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error) {
	out := new(RegisterResp)
	err := c.cc.Invoke(ctx, "/cloud.lianmi.im.serivce.LianmiApis/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lianmiApisClient) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error) {
	out := new(LoginResp)
	err := c.cc.Invoke(ctx, "/cloud.lianmi.im.serivce.LianmiApis/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lianmiApisClient) SignOut(ctx context.Context, in *SignOutReq, opts ...grpc.CallOption) (*SignOutResp, error) {
	out := new(SignOutResp)
	err := c.cc.Invoke(ctx, "/cloud.lianmi.im.serivce.LianmiApis/SignOut", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lianmiApisClient) ChanPasswd(ctx context.Context, in *ChanPasswdReq, opts ...grpc.CallOption) (*ChanPasswdResp, error) {
	out := new(ChanPasswdResp)
	err := c.cc.Invoke(ctx, "/cloud.lianmi.im.serivce.LianmiApis/ChanPasswd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lianmiApisClient) QueryCustomerServices(ctx context.Context, in *CustomerServicesReq, opts ...grpc.CallOption) (*CustomerServicesResp, error) {
	out := new(CustomerServicesResp)
	err := c.cc.Invoke(ctx, "/cloud.lianmi.im.serivce.LianmiApis/QueryCustomerServices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lianmiApisClient) AddCustomerService(ctx context.Context, in *CustomerServicesReq, opts ...grpc.CallOption) (*CustomerServicesResp, error) {
	out := new(CustomerServicesResp)
	err := c.cc.Invoke(ctx, "/cloud.lianmi.im.serivce.LianmiApis/AddCustomerService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lianmiApisClient) DeleteCustomerService(ctx context.Context, in *CustomerServicesReq, opts ...grpc.CallOption) (*CustomerServicesResp, error) {
	out := new(CustomerServicesResp)
	err := c.cc.Invoke(ctx, "/cloud.lianmi.im.serivce.LianmiApis/DeleteCustomerService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lianmiApisClient) UpdateCustomerService(ctx context.Context, in *CustomerServicesReq, opts ...grpc.CallOption) (*CustomerServicesResp, error) {
	out := new(CustomerServicesResp)
	err := c.cc.Invoke(ctx, "/cloud.lianmi.im.serivce.LianmiApis/UpdateCustomerService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lianmiApisClient) QueryGrades(ctx context.Context, in *GradeReq, opts ...grpc.CallOption) (*GradesResp, error) {
	out := new(GradesResp)
	err := c.cc.Invoke(ctx, "/cloud.lianmi.im.serivce.LianmiApis/QueryGrades", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lianmiApisClient) AddGrade(ctx context.Context, in *AddGradeReq, opts ...grpc.CallOption) (*AddGradesResp, error) {
	out := new(AddGradesResp)
	err := c.cc.Invoke(ctx, "/cloud.lianmi.im.serivce.LianmiApis/AddGrade", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lianmiApisClient) SubmitGrade(ctx context.Context, in *SubmitGradeReq, opts ...grpc.CallOption) (*SubmitGradeResp, error) {
	out := new(SubmitGradeResp)
	err := c.cc.Invoke(ctx, "/cloud.lianmi.im.serivce.LianmiApis/SubmitGrade", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LianmiApisServer is the server API for LianmiApis service.
type LianmiApisServer interface {
	//获取用户信息
	GetUser(context.Context, *UserReq) (*UserRsp, error)
	//短信验证码
	GenerateSmsCode(context.Context, *SmsCodeReq) (*SmsCodeResp, error)
	//注册
	Register(context.Context, *RegisterReq) (*RegisterResp, error)
	//登录 Login,  根据手机号及密码， 获取token
	Login(context.Context, *LoginReq) (*LoginResp, error)
	//登出 SignOut,  服务端会删除此用户的Token
	SignOut(context.Context, *SignOutReq) (*SignOutResp, error)
	//修改密码
	ChanPasswd(context.Context, *ChanPasswdReq) (*ChanPasswdResp, error)
	//查出当前所有空闲的客服id, 用于UI端的联系客服人员
	QueryCustomerServices(context.Context, *CustomerServicesReq) (*CustomerServicesResp, error)
	//增加客服技术人员名单， 要先注册
	AddCustomerService(context.Context, *CustomerServicesReq) (*CustomerServicesResp, error)
	// 删除客服技术人员
	DeleteCustomerService(context.Context, *CustomerServicesReq) (*CustomerServicesResp, error)
	// 修改客服技术人员
	UpdateCustomerService(context.Context, *CustomerServicesReq) (*CustomerServicesResp, error)
	// 按条件查出客服评分
	QueryGrades(context.Context, *GradeReq) (*GradesResp, error)
	//客服人员增加客服评分记录，以便生成title发送给用户提交评分
	AddGrade(context.Context, *AddGradeReq) (*AddGradesResp, error)
	// app用户提交评分
	SubmitGrade(context.Context, *SubmitGradeReq) (*SubmitGradeResp, error)
}

// UnimplementedLianmiApisServer can be embedded to have forward compatible implementations.
type UnimplementedLianmiApisServer struct {
}

func (*UnimplementedLianmiApisServer) GetUser(context.Context, *UserReq) (*UserRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}
func (*UnimplementedLianmiApisServer) GenerateSmsCode(context.Context, *SmsCodeReq) (*SmsCodeResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateSmsCode not implemented")
}
func (*UnimplementedLianmiApisServer) Register(context.Context, *RegisterReq) (*RegisterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (*UnimplementedLianmiApisServer) Login(context.Context, *LoginReq) (*LoginResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedLianmiApisServer) SignOut(context.Context, *SignOutReq) (*SignOutResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignOut not implemented")
}
func (*UnimplementedLianmiApisServer) ChanPasswd(context.Context, *ChanPasswdReq) (*ChanPasswdResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChanPasswd not implemented")
}
func (*UnimplementedLianmiApisServer) QueryCustomerServices(context.Context, *CustomerServicesReq) (*CustomerServicesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryCustomerServices not implemented")
}
func (*UnimplementedLianmiApisServer) AddCustomerService(context.Context, *CustomerServicesReq) (*CustomerServicesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddCustomerService not implemented")
}
func (*UnimplementedLianmiApisServer) DeleteCustomerService(context.Context, *CustomerServicesReq) (*CustomerServicesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCustomerService not implemented")
}
func (*UnimplementedLianmiApisServer) UpdateCustomerService(context.Context, *CustomerServicesReq) (*CustomerServicesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCustomerService not implemented")
}
func (*UnimplementedLianmiApisServer) QueryGrades(context.Context, *GradeReq) (*GradesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryGrades not implemented")
}
func (*UnimplementedLianmiApisServer) AddGrade(context.Context, *AddGradeReq) (*AddGradesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddGrade not implemented")
}
func (*UnimplementedLianmiApisServer) SubmitGrade(context.Context, *SubmitGradeReq) (*SubmitGradeResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitGrade not implemented")
}

func RegisterLianmiApisServer(s *grpc.Server, srv LianmiApisServer) {
	s.RegisterService(&_LianmiApis_serviceDesc, srv)
}

func _LianmiApis_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LianmiApisServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.lianmi.im.serivce.LianmiApis/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LianmiApisServer).GetUser(ctx, req.(*UserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LianmiApis_GenerateSmsCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SmsCodeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LianmiApisServer).GenerateSmsCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.lianmi.im.serivce.LianmiApis/GenerateSmsCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LianmiApisServer).GenerateSmsCode(ctx, req.(*SmsCodeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LianmiApis_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LianmiApisServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.lianmi.im.serivce.LianmiApis/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LianmiApisServer).Register(ctx, req.(*RegisterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LianmiApis_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LianmiApisServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.lianmi.im.serivce.LianmiApis/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LianmiApisServer).Login(ctx, req.(*LoginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LianmiApis_SignOut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignOutReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LianmiApisServer).SignOut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.lianmi.im.serivce.LianmiApis/SignOut",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LianmiApisServer).SignOut(ctx, req.(*SignOutReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LianmiApis_ChanPasswd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChanPasswdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LianmiApisServer).ChanPasswd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.lianmi.im.serivce.LianmiApis/ChanPasswd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LianmiApisServer).ChanPasswd(ctx, req.(*ChanPasswdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LianmiApis_QueryCustomerServices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CustomerServicesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LianmiApisServer).QueryCustomerServices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.lianmi.im.serivce.LianmiApis/QueryCustomerServices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LianmiApisServer).QueryCustomerServices(ctx, req.(*CustomerServicesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LianmiApis_AddCustomerService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CustomerServicesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LianmiApisServer).AddCustomerService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.lianmi.im.serivce.LianmiApis/AddCustomerService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LianmiApisServer).AddCustomerService(ctx, req.(*CustomerServicesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LianmiApis_DeleteCustomerService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CustomerServicesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LianmiApisServer).DeleteCustomerService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.lianmi.im.serivce.LianmiApis/DeleteCustomerService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LianmiApisServer).DeleteCustomerService(ctx, req.(*CustomerServicesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LianmiApis_UpdateCustomerService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CustomerServicesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LianmiApisServer).UpdateCustomerService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.lianmi.im.serivce.LianmiApis/UpdateCustomerService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LianmiApisServer).UpdateCustomerService(ctx, req.(*CustomerServicesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LianmiApis_QueryGrades_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GradeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LianmiApisServer).QueryGrades(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.lianmi.im.serivce.LianmiApis/QueryGrades",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LianmiApisServer).QueryGrades(ctx, req.(*GradeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LianmiApis_AddGrade_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddGradeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LianmiApisServer).AddGrade(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.lianmi.im.serivce.LianmiApis/AddGrade",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LianmiApisServer).AddGrade(ctx, req.(*AddGradeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LianmiApis_SubmitGrade_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitGradeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LianmiApisServer).SubmitGrade(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.lianmi.im.serivce.LianmiApis/SubmitGrade",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LianmiApisServer).SubmitGrade(ctx, req.(*SubmitGradeReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _LianmiApis_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cloud.lianmi.im.serivce.LianmiApis",
	HandlerType: (*LianmiApisServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUser",
			Handler:    _LianmiApis_GetUser_Handler,
		},
		{
			MethodName: "GenerateSmsCode",
			Handler:    _LianmiApis_GenerateSmsCode_Handler,
		},
		{
			MethodName: "Register",
			Handler:    _LianmiApis_Register_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _LianmiApis_Login_Handler,
		},
		{
			MethodName: "SignOut",
			Handler:    _LianmiApis_SignOut_Handler,
		},
		{
			MethodName: "ChanPasswd",
			Handler:    _LianmiApis_ChanPasswd_Handler,
		},
		{
			MethodName: "QueryCustomerServices",
			Handler:    _LianmiApis_QueryCustomerServices_Handler,
		},
		{
			MethodName: "AddCustomerService",
			Handler:    _LianmiApis_AddCustomerService_Handler,
		},
		{
			MethodName: "DeleteCustomerService",
			Handler:    _LianmiApis_DeleteCustomerService_Handler,
		},
		{
			MethodName: "UpdateCustomerService",
			Handler:    _LianmiApis_UpdateCustomerService_Handler,
		},
		{
			MethodName: "QueryGrades",
			Handler:    _LianmiApis_QueryGrades_Handler,
		},
		{
			MethodName: "AddGrade",
			Handler:    _LianmiApis_AddGrade_Handler,
		},
		{
			MethodName: "SubmitGrade",
			Handler:    _LianmiApis_SubmitGrade_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/proto/service/Service.proto",
}
