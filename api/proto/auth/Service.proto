syntax = "proto3";
import "api/proto/user/User.proto";
import "api/proto/global/Global.proto";
import "api/proto/wallet/PreTransfer.proto";

package cloud.lianmi.im.auth;
option go_package = "github.com/lianmi/servers/api/proto/auth";


//Restful 接口
service LianmiAuth {
    //获取用户信息
    rpc GetUser (UserReq) returns (UserRsp);

    //短信验证码
   // rpc GenerateSmsCode (SmsCodeReq) returns (SmsCodeResp);

    //注册
   // rpc Register (RegisterReq) returns (RegisterResp);

    //登录 Login,  根据手机号及密码， 获取token 
    //rpc Login (LoginReq) returns (LoginResp);

    //登出 SignOut,  服务端会删除此用户的Token
    //rpc SignOut (SignOutReq) returns (SignOutResp);

    //修改密码， 需要输入正确的旧密码及smscode
   // rpc ChanPassword (ChanPasswordReq) returns (ChanPasswordResp);

    //重置密码， 需要输入smscode
    //rpc ResetPassword (ResetPasswordReq) returns (ResetPasswordResp);

    //根据百度坐标经纬度查找出指定范围内的所有商户列表
    //rpc QueryShopsNearby (QueryShopsNearbyReq) returns (QueryShopsNearbyResp);

    //根据条件查出所有客服及技术列表, 用于UI端的联系客服人员
   // rpc QueryCustomerServices(QueryCustomerServiceReq) returns (QueryCustomerServiceResp);

    //增加客服技术人员名单， 要先注册
    //rpc AddCustomerService(AddCustomerServiceReq) returns (AddCustomerServiceResp);

    //删除客服技术人员
   // rpc DeleteCustomerService(DeleteCustomerServiceReq) returns (DeleteCustomerServiceResp);

    //修改客服技术人员
    //rpc UpdateCustomerService(UpdateCustomerServiceReq) returns (UpdateCustomerServiceResp);

    // 按条件查出客服评分
    //rpc QueryGrades(GradeReq) returns (GradesResp);

    //客服人员增加客服评分记录，以便生成title发送给用户提交评分 
    // rpc AddGrade(AddGradeReq) returns (AddGradesResp);
 
    // app用户提交评分
    //rpc SubmitGrade(SubmitGradeReq) returns (SubmitGradeResp);


}


//=== 用户信息 === //
message UserReq {
    fixed64 id = 1;
}

message UserRsp {
    user.User  user  = 1;
}

//==== 注册 ===//
message RegisterReq {
    user.User user = 1;
    string smsCode = 2; //短信验证码
}

message RegisterResp {
    string username = 1; //注册成功后返回username
}

//=== 获取短信验证码 ===//
message SmsCodeReq {
    string mobile = 1; //手机号码
}

message SmsCodeResp {
    string smsCode = 2; //短信验证码
}

//==== 修改密码 ===//
message ChanPasswordReq {
    string smsCode   = 1; //短信验证码
    string oldpasswd = 2; //旧密码
    string password  = 3; //新密码
}

message ChanPasswordResp {
}

//==== 重置密码 ===//
message ResetPasswordReq {
    string mobile    = 1; //手机号 
    string smsCode   = 2; //短信验证码
    string password  = 3; //新密码
}

message ResetPasswordResp {
    string username = 1; //用户名
}

//======查询经纬度范围内的商户列表=====//
message QueryShopsNearbyReq {
    //商户经营范围搜索关键字, 用半角的逗号隔开
    string  keys = 1;

    //用户当前位置的经度
    double longitude=2; 

    //用户当前位置的经度
    double latitude=3;

    //距离范围, 默认10km
    double distance=4;

    //页数,第几页
    //默认1
    //是否必填-否
    int32 page = 5; // [default=1];

    //每页成员数量
    //默认20,最大只允许100
    //是否必填-否
    int32 limit = 6; // [default=20];
}

//商店信息
message Shop {
     //商户注册号，自动生成，字母 + 数字
    string businessUsername =1;

    //商户呢称，必填
	string nick             =2;   

    //头像url
	string avatar           =3;                                     

    //商店名称
    string branchesName     =4; 

    //商店简介
    string introductory      =5;

    //省份, 如广东省
    string province         =6;

    //城市，如广州市
    string city             =7; 

    //区，如天河区
	string county           =8;
    
    //街道
	string street           =9;

    //地址
	string address          =10;

    //商店位置的经度
    double longitude        =11; 

    //商店位置的经度
    double latitude         =12;
}

message QueryShopsNearbyResp {
    //总页数
    fixed64 totalPage =1;

    //搜索结果列表
    repeated Shop shops =2;
}

//==== 根据用户名及密码登录 ===//
message LoginReq {
    string username = 1; //用户名
    string password = 2; //MD5加密过的
    string smsCode = 3; //短信验证码
}

message LoginResp {
    string accesstoken = 2; //用户token, jwt
}

message CustomerServiceInfo {

    //客服或技术人员的注册账号id
    string username =1;

    //客服或技术人员的工号
    string jobNumber =2;

    //客服或技术人员的类型， 1-客服，2-技术
    global.CustomerServiceType type =3;

    //职称, 技术工程师，技术员等
    string evaluation =4;

    //呢称
    string nickName  =5;

}

message QueryCustomerServiceReq {
    //true查询空闲, false -所有 
    bool isIdle = 1;

    //客服或技术人员的类型， 1-客服，2-技术 0 - 所有 
    global.CustomerServiceType type =2;

}

message QueryCustomerServiceResp {
 repeated CustomerServiceInfo onlineCustomerServices =2;
}

message AddCustomerServiceReq {
    
    //客服或技术人员的注册账号id
    string username =1;

    //客服或技术人员的工号
    string jobNumber =2;

    //客服或技术人员的类型， 1-客服，2-技术 0 - 所有 
    global.CustomerServiceType type =3;

    //职称, 技术工程师，技术员等
    string evaluation =4;

    //呢称
    string nickName  =5;
}

message AddCustomerServiceResp {
   
}

message DeleteCustomerServiceReq {
    //客服或技术人员的注册账号id
    string username =1;
}


message  DeleteCustomerServiceResp {

}

message UpdateCustomerServiceReq {
   //客服或技术人员的注册账号id, 用来查询
    string username =1;

    //客服或技术人员的工号
    string jobNumber =2;

    //客服或技术人员的类型， 1-客服，2-技术 0 - 所有 
    global.CustomerServiceType type =3;

    //职称, 技术工程师，技术员等
    string evaluation =4;

    //呢称
    string nickName  =5;
}

message UpdateCustomerServiceResp {

}

message GradeInfo  {
    // 本次app用户求助的标题，约定： consult + _+ 日期字符串(20201025) + _ + 编号（自增）
    string Title=1;

	//APP用户的注册账号id
	string AppUsername =2;

	//客服或技术人员的注册账号id
	string CustomerServiceUsername =3;

    //客服或技术人员的工号
	string JobNumber =4;

    //客服或技术人员的类型， 1-客服，2-技术
    global.CustomerServiceType type =5;

    //职称, 技术工程师，技术员等
	string Evaluation =6;

     //呢称
	string NickName =7;

     //问题类型
	string Catalog =8;

    //问题描述
	string Desc =9;
                  
    //评分, 0-3 4-6 7-10
	int32 GradeNum =10;
    
}

//必须由客服技术人员构造title，然后用约定的方式发送给用户，用户在UI弹出评分页面， 填写后提交 
message GradeReq{
    // 本次app用户求助的标题，约定： consult + _+ 日期字符串(20201025) + _ + 编号（自增）
    string Title=1;

	//APP用户的注册账号id
	string AppUsername =2;

	//客服或技术人员的注册账号id
	string CustomerServiceUsername =3;

	 //评分, 0-3 4-6 7-10
	int32 GradeNum =4;

    //页数,第几页
    //默认1
    //是否必填-否
    int32 page = 5; // [default=1];

    //每页成员数量
    //默认20,最大只允许100
    //是否必填-否
    int32 limit = 6; // [default=20];

    //开始时间
    fixed64 startAt = 7;

    //结束时间
    fixed64 endAt = 8;
}

message GradesPage {
    fixed64 totalPage =1;
    repeated GradeInfo grades =2;
}

message GradesResp {
    GradesPage pages =2;
}

//客服人员增加求助记录，以便发给用户评分
message AddGradeReq{

	//客服或技术人员的注册账号id
	string CustomerServiceUsername =1;

     //问题类型
	string Catalog =2;

    //问题描述
	string Desc =3;
}

message GradeTitleInfo {
   //客服或技术人员的注册账号id
   string CustomerServiceUsername =1;

   // 本次app用户求助的标题，约定： consult + _+ 日期字符串(20201025) + _ + 编号（自增）
   string Title=2;
}

message AddGradesResp {
    GradeTitleInfo info =2;
}

//app用户提交评分
message SubmitGradeReq {
  //APP用户的注册账号id
  string AppUsername =1;
  
  // 本次app用户求助的标题，约定： consult + _+ 日期字符串(20201025) + _ + 编号（自增）
  string Title=2;

  //评分, 0-3 4-6 7-10
  int32 GradeNum =3;

}

message SubmitGradeResp {
}


//预生成一个购买会员的订单， 返回OrderID及预转账裸交易数据
message PreOrderForPayMembershipReq {
    //要给谁付费
    string PayForUsername =1; 
}

message PreOrderForPayMembershipResp {

   //订单的总金额, 支付的时候以这个金额计算, 人民币格式，带小数点 99.00
   double OrderTotalAmount=1;

   //服务端生成的订单id
   string orderID =2; 

   //向收款方转账的裸交易结构体
   wallet.RawDesc rawDescToTarget=3;

   //时间
   fixed64 time=4;
}

//确认购买会员
message ConfirmPayForMembershipReq {
    //订单id
    string orderID =1;

    //签名后的转给目标接收者的Tx(A签) hex格式
    string signedTxToTarget=2;

    //附言， 会通知给被购买的会员
    string content =3;

}

message ConfirmPayForMembershipResp {
    //要给谁付费
    string PayForUsername =1;

    //订单的总金额, 支付的时候以这个金额计算, 人民币格式，带小数点 99.00
    double OrderTotalAmount=2;

    // 区块高度 
    fixed64 blockNumber=3;

    // 交易哈希hex
    string hash=4;

    //交易时间
    fixed64 time=5;
}

message GetBusinessMembershipReq {
     //商户账号
    string businessUsername =1;
}

message BusinessUserMonthDetail {
    //商户账号
    string businessUsername =1;

    //月份 2020-10
    string yearMonth =2;

    //当月付费会员数量
    fixed64 total =3;

    //当月返佣金额
    double totalCommission =4;

    //是否已经返佣
    bool isRebate =5;

    //操作时间
    fixed64 rebateTime =6;
}


message GetBusinessMembershipResp {
    // 当前商户所属的会员总数
    fixed64  totalmembers =1;

    //按月统计付费会员 
    repeated BusinessUserMonthDetail details=2;
}


message GetMembershipReq{
    //用户账号
    string username =1;
}

message UserMonthCommssionDetail{
    //用户账号
    string username =1;

    //月份 2020-10
    string yearMonth =2;

    //当月返佣金额
    double totalCommission =3;

    //是否已经返佣
    bool isRebate =4;

    //操作时间
    fixed64 rebateTime =5;
}

message GetMembershipResp{
    //按月统计佣金记录 
    repeated UserMonthCommssionDetail commssionDetails=1;
}


message NormalMembershipReq {
    //页数,第几页
    //默认1
    //是否必填-否
    int32 page = 1; // [default=1];

    //每页成员数量
    //默认20,最大只允许100
    //是否必填-否
    int32 limit = 2; // [default=20];

    //开始时间
    fixed64 startAt = 3;

    //结束时间
    fixed64 endAt = 4;
}


//用户三级分销的按月统计记录
message PerLevelSummary{
    //月份 2020-10
    string month =1;

    //5元返佣会员数量
    int32 fiveCount =2;

    //10元返佣会员数量
    int32 tenCount =3;

    //35元返佣会员数量
    int32 ThirtyFiveCount =4;

    //当月返佣金额总计
    double rebateTotalMoney =5;

    //是否已经返佣
    bool isRebate =6;

    //返佣的区块高度
    fixed64 blockNumber =7;

    //返佣的交易哈希
    string txHash =8;

    //操作时间
    fixed64 rebateTime =9;
}

message NormalMembershipResp {
    
    //总页数
    fixed64 totalPage =1;

    //按月统计各级返佣
    repeated PerLevelSummary summary=2;
}

message AskedWithdrawReq {

}

message  AskedWithdrawResp {
    
}

//商户或用户申请分销佣金返现  
message CommssionWithdrawReq {
    //用户账号
    string username =1;

    //月份 2020-10
    string yearMonth =2;
}

message CommssionWithdrawResp {
    //用户账号
    string username =1;

    //月份 2020-10
    string yearMonth =2;

    //对应月份的返佣
    double commssionAmount =3;
}