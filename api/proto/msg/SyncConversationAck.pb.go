// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.7.0
// source: api/proto/msg/SyncConversationAck.proto

package msg

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//2.6.7. 同步会话最大确认时间
//会话时间戳
type ConversationAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//会话ID
	//是否必填-是
	SessionId string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	//传输场景
	//是否必填-是
	Scene Scene `protobuf:"varint,2,opt,name=scene,proto3,enum=cc.lianmi.im.msg.Scene" json:"scene,omitempty"`
	//该会话收到的消息最后消息id
	//是否必填-是
	IdServer string `protobuf:"bytes,3,opt,name=idServer,proto3" json:"idServer,omitempty"`
	//消息序号，单个会话内自然递增,与idServer唯一对应
	//是否必填-是
	Seq uint64 `protobuf:"fixed64,4,opt,name=seq,proto3" json:"seq,omitempty"`
	//客户端分配的消息ID，SDK生成的消息id,
	//在发送消息之后会返回给开发者, 开发者可以在
	//发送消息的结果回调里面根据这个ID来判断相应消息的发送
	//状态, 到底是发送成功了还是发送失败了, 然后根据此状
	//态来更新页面的UI。如果发送失败, 那么可以重新发送此消息，推荐UUID
	//是否必填-是
	IdClient string `protobuf:"bytes,5,opt,name=idClient,proto3" json:"idClient,omitempty"`
	//用于UI展示的文本信息
	//是否必填-否
	Body string `protobuf:"bytes,6,opt,name=body,proto3" json:"body,omitempty"`
	//消息来源,用户ID
	//是否必填-是
	From string `protobuf:"bytes,7,opt,name=from,proto3" json:"from,omitempty"`
	//发消息，用户昵称
	//是否必填-是
	FromNick string `protobuf:"bytes,8,opt,name=fromNick,proto3" json:"fromNick,omitempty"`
	//消息类型
	//是否必填-是
	Type MsgType `protobuf:"varint,9,opt,name=type,proto3,enum=cc.lianmi.im.msg.MsgType" json:"type,omitempty"`
	//该会话收到的消息最后时间
	//是否必填-是
	Time uint64 `protobuf:"fixed64,10,opt,name=time,proto3" json:"time,omitempty"`
	//当前会话读取到的消息id位置
	//是否必填-是
	CurrentMsgId string `protobuf:"bytes,11,opt,name=currentMsgId,proto3" json:"currentMsgId,omitempty"`
	//消息序号，单个会话内自然递增,与currentMsgId唯一对应
	//是否必填-是
	CurrentSeq uint64 `protobuf:"fixed64,12,opt,name=currentSeq,proto3" json:"currentSeq,omitempty"`
	//联系人帐号或群id
	//是否必填-是
	ContactId string `protobuf:"bytes,13,opt,name=contactId,proto3" json:"contactId,omitempty"`
	//联系人设备ID
	//是否必填-否
	ContactDeviceId string `protobuf:"bytes,14,opt,name=contactDeviceId,proto3" json:"contactDeviceId,omitempty"`
	//供客户端自己扩展使用
	//是否必填-是
	Ext string `protobuf:"bytes,15,opt,name=ext,proto3" json:"ext,omitempty"`
}

func (x *ConversationAck) Reset() {
	*x = ConversationAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msg_SyncConversationAck_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationAck) ProtoMessage() {}

func (x *ConversationAck) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msg_SyncConversationAck_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationAck.ProtoReflect.Descriptor instead.
func (*ConversationAck) Descriptor() ([]byte, []int) {
	return file_api_proto_msg_SyncConversationAck_proto_rawDescGZIP(), []int{0}
}

func (x *ConversationAck) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ConversationAck) GetScene() Scene {
	if x != nil {
		return x.Scene
	}
	return Scene_Sc_Undefined
}

func (x *ConversationAck) GetIdServer() string {
	if x != nil {
		return x.IdServer
	}
	return ""
}

func (x *ConversationAck) GetSeq() uint64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *ConversationAck) GetIdClient() string {
	if x != nil {
		return x.IdClient
	}
	return ""
}

func (x *ConversationAck) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *ConversationAck) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *ConversationAck) GetFromNick() string {
	if x != nil {
		return x.FromNick
	}
	return ""
}

func (x *ConversationAck) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_Mt_Undefined
}

func (x *ConversationAck) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ConversationAck) GetCurrentMsgId() string {
	if x != nil {
		return x.CurrentMsgId
	}
	return ""
}

func (x *ConversationAck) GetCurrentSeq() uint64 {
	if x != nil {
		return x.CurrentSeq
	}
	return 0
}

func (x *ConversationAck) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

func (x *ConversationAck) GetContactDeviceId() string {
	if x != nil {
		return x.ContactDeviceId
	}
	return ""
}

func (x *ConversationAck) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

//2.6.7. 同步会话最大确认时间
//登录后，由服务端增量推送其他终端确认过的会话确认最大时间戳
type SyncConversationAckEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//本次同步，服务器结束时间，unix时间戳，单位ms
	//是否必填-是
	Timetag uint64 `protobuf:"fixed64,1,opt,name=timetag,proto3" json:"timetag,omitempty"`
	//会话时间戳列表
	Conversations []*ConversationAck `protobuf:"bytes,2,rep,name=conversations,proto3" json:"conversations,omitempty"`
}

func (x *SyncConversationAckEvent) Reset() {
	*x = SyncConversationAckEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msg_SyncConversationAck_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncConversationAckEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncConversationAckEvent) ProtoMessage() {}

func (x *SyncConversationAckEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msg_SyncConversationAck_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncConversationAckEvent.ProtoReflect.Descriptor instead.
func (*SyncConversationAckEvent) Descriptor() ([]byte, []int) {
	return file_api_proto_msg_SyncConversationAck_proto_rawDescGZIP(), []int{1}
}

func (x *SyncConversationAckEvent) GetTimetag() uint64 {
	if x != nil {
		return x.Timetag
	}
	return 0
}

func (x *SyncConversationAckEvent) GetConversations() []*ConversationAck {
	if x != nil {
		return x.Conversations
	}
	return nil
}

var File_api_proto_msg_SyncConversationAck_proto protoreflect.FileDescriptor

var file_api_proto_msg_SyncConversationAck_proto_rawDesc = []byte{
	0x0a, 0x27, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x73, 0x67, 0x2f,
	0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x63, 0x63, 0x2e, 0x6c, 0x69,
	0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x6d, 0x73, 0x67, 0x1a, 0x17, 0x61, 0x70, 0x69,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x4d, 0x73, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcd, 0x03, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x63, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d,
	0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x52, 0x05,
	0x73, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x06, 0x52, 0x03,
	0x73, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x4e,
	0x69, 0x63, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x4e,
	0x69, 0x63, 0x6b, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x63, 0x63, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x06,
	0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x71, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0a,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x65, 0x78, 0x74, 0x22, 0x7d, 0x0a, 0x18, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x67, 0x12, 0x47, 0x0a, 0x0d, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x63, 0x63, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x63, 0x6b, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x73, 0x67, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_msg_SyncConversationAck_proto_rawDescOnce sync.Once
	file_api_proto_msg_SyncConversationAck_proto_rawDescData = file_api_proto_msg_SyncConversationAck_proto_rawDesc
)

func file_api_proto_msg_SyncConversationAck_proto_rawDescGZIP() []byte {
	file_api_proto_msg_SyncConversationAck_proto_rawDescOnce.Do(func() {
		file_api_proto_msg_SyncConversationAck_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_msg_SyncConversationAck_proto_rawDescData)
	})
	return file_api_proto_msg_SyncConversationAck_proto_rawDescData
}

var file_api_proto_msg_SyncConversationAck_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_api_proto_msg_SyncConversationAck_proto_goTypes = []interface{}{
	(*ConversationAck)(nil),          // 0: cc.lianmi.im.msg.ConversationAck
	(*SyncConversationAckEvent)(nil), // 1: cc.lianmi.im.msg.SyncConversationAckEvent
	(Scene)(0),                       // 2: cc.lianmi.im.msg.Scene
	(MsgType)(0),                     // 3: cc.lianmi.im.msg.MsgType
}
var file_api_proto_msg_SyncConversationAck_proto_depIdxs = []int32{
	2, // 0: cc.lianmi.im.msg.ConversationAck.scene:type_name -> cc.lianmi.im.msg.Scene
	3, // 1: cc.lianmi.im.msg.ConversationAck.type:type_name -> cc.lianmi.im.msg.MsgType
	0, // 2: cc.lianmi.im.msg.SyncConversationAckEvent.conversations:type_name -> cc.lianmi.im.msg.ConversationAck
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_api_proto_msg_SyncConversationAck_proto_init() }
func file_api_proto_msg_SyncConversationAck_proto_init() {
	if File_api_proto_msg_SyncConversationAck_proto != nil {
		return
	}
	file_api_proto_msg_Msg_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msg_SyncConversationAck_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msg_SyncConversationAck_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncConversationAckEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_msg_SyncConversationAck_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_proto_msg_SyncConversationAck_proto_goTypes,
		DependencyIndexes: file_api_proto_msg_SyncConversationAck_proto_depIdxs,
		MessageInfos:      file_api_proto_msg_SyncConversationAck_proto_msgTypes,
	}.Build()
	File_api_proto_msg_SyncConversationAck_proto = out.File
	file_api_proto_msg_SyncConversationAck_proto_rawDesc = nil
	file_api_proto_msg_SyncConversationAck_proto_goTypes = nil
	file_api_proto_msg_SyncConversationAck_proto_depIdxs = nil
}
