// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.7.0
// source: api/proto/msg/MsgTypeEnum.proto

package msg

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type MessageScene int32

const (
	//无效
	MessageScene_MsgScene_Undefined MessageScene = 0
	//人对人通讯
	MessageScene_MsgScene_C2C MessageScene = 1 //  用户对用户
	//群组通讯
	MessageScene_MsgScene_C2G MessageScene = 2 // 用户到群
	//系统消息
	MessageScene_MsgScene_S2C MessageScene = 3 // 服务端到 用户
	//点对点
	MessageScene_MsgScene_P2P MessageScene = 5 // 透传 点对点
)

// Enum value maps for MessageScene.
var (
	MessageScene_name = map[int32]string{
		0: "MsgScene_Undefined",
		1: "MsgScene_C2C",
		2: "MsgScene_C2G",
		3: "MsgScene_S2C",
		5: "MsgScene_P2P",
	}
	MessageScene_value = map[string]int32{
		"MsgScene_Undefined": 0,
		"MsgScene_C2C":       1,
		"MsgScene_C2G":       2,
		"MsgScene_S2C":       3,
		"MsgScene_P2P":       5,
	}
)

func (x MessageScene) Enum() *MessageScene {
	p := new(MessageScene)
	*p = x
	return p
}

func (x MessageScene) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageScene) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_msg_MsgTypeEnum_proto_enumTypes[0].Descriptor()
}

func (MessageScene) Type() protoreflect.EnumType {
	return &file_api_proto_msg_MsgTypeEnum_proto_enumTypes[0]
}

func (x MessageScene) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageScene.Descriptor instead.
func (MessageScene) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_msg_MsgTypeEnum_proto_rawDescGZIP(), []int{0}
}

//消息的类型枚举定义
type MessageType int32

const (
	//无效
	MessageType_MsgType_Undefined MessageType = 0
	//Text-文本
	MessageType_MsgType_Text MessageType = 1
	// 附件类型
	//　数据经过　json 处理　的
	MessageType_MsgType_Attach MessageType = 2
	// 通知类型的数据
	MessageType_MsgType_Notification MessageType = 3
	// 加密类型
	// 在基础类型　中增加了　加密封装
	MessageType_MsgType_Secret MessageType = 4
	//  二进制
	//　直接二进制流bytes
	MessageType_MsgType_Bin MessageType = 5
	// 订单 类型
	MessageType_MsgType_Order MessageType = 6
	// 系统消息更新 类型 用于更新系统消息
	MessageType_MsgType_SysMsgUpdate MessageType = 7
	//吸顶式群消息,只能是群主或管理员发送，此消息会吸附在群会话的最上面，适合一些倒计时、股价、币价、比分、赔率等
	MessageType_MsgType_Roof MessageType = 8
	//用户自定义
	MessageType_MSgType_Customer MessageType = 100
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0:   "MsgType_Undefined",
		1:   "MsgType_Text",
		2:   "MsgType_Attach",
		3:   "MsgType_Notification",
		4:   "MsgType_Secret",
		5:   "MsgType_Bin",
		6:   "MsgType_Order",
		7:   "MsgType_SysMsgUpdate",
		8:   "MsgType_Roof",
		100: "MSgType_Customer",
	}
	MessageType_value = map[string]int32{
		"MsgType_Undefined":    0,
		"MsgType_Text":         1,
		"MsgType_Attach":       2,
		"MsgType_Notification": 3,
		"MsgType_Secret":       4,
		"MsgType_Bin":          5,
		"MsgType_Order":        6,
		"MsgType_SysMsgUpdate": 7,
		"MsgType_Roof":         8,
		"MSgType_Customer":     100,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_msg_MsgTypeEnum_proto_enumTypes[1].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_api_proto_msg_MsgTypeEnum_proto_enumTypes[1]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_msg_MsgTypeEnum_proto_rawDescGZIP(), []int{1}
}

//附件类型枚举定义
type AttachType int32

const (
	//　未定义的附件类型
	AttachType_AttachType_Undefined AttachType = 0
	//   图片
	AttachType_AttachType_Image AttachType = 1
	//Audio(2) - 音频文件
	AttachType_AttachType_Audio AttachType = 2
	//Video(3) - 视频文件
	AttachType_AttachType_Video AttachType = 3
	//File(4) - 文件
	AttachType_AttachType_File AttachType = 4
	// 地理位置
	AttachType_AttachType_Geo AttachType = 5
	// 订单数据
	AttachType_AttachType_Order AttachType = 6
	//钱包相关的交易数据(提现，充值 ，转账，收款 ，退款等)
	AttachType_AttachType_Transaction AttachType = 7
	//上链服务费
	AttachType_AttachType_BlockServiceCharge AttachType = 8
	//Vip会员费
	AttachType_AttachType_VipPrice AttachType = 9
	//自定义带附件（json）的消息
	AttachType_AttachType_CustomAttach AttachType = 10
)

// Enum value maps for AttachType.
var (
	AttachType_name = map[int32]string{
		0:  "AttachType_Undefined",
		1:  "AttachType_Image",
		2:  "AttachType_Audio",
		3:  "AttachType_Video",
		4:  "AttachType_File",
		5:  "AttachType_Geo",
		6:  "AttachType_Order",
		7:  "AttachType_Transaction",
		8:  "AttachType_BlockServiceCharge",
		9:  "AttachType_VipPrice",
		10: "AttachType_CustomAttach",
	}
	AttachType_value = map[string]int32{
		"AttachType_Undefined":          0,
		"AttachType_Image":              1,
		"AttachType_Audio":              2,
		"AttachType_Video":              3,
		"AttachType_File":               4,
		"AttachType_Geo":                5,
		"AttachType_Order":              6,
		"AttachType_Transaction":        7,
		"AttachType_BlockServiceCharge": 8,
		"AttachType_VipPrice":           9,
		"AttachType_CustomAttach":       10,
	}
)

func (x AttachType) Enum() *AttachType {
	p := new(AttachType)
	*p = x
	return p
}

func (x AttachType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AttachType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_msg_MsgTypeEnum_proto_enumTypes[2].Descriptor()
}

func (AttachType) Type() protoreflect.EnumType {
	return &file_api_proto_msg_MsgTypeEnum_proto_enumTypes[2]
}

func (x AttachType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AttachType.Descriptor instead.
func (AttachType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_msg_MsgTypeEnum_proto_rawDescGZIP(), []int{2}
}

// 通知类型
type MessageNotificationType int32

const (
	MessageNotificationType_MNT_UNDEFINE              MessageNotificationType = 0
	MessageNotificationType_MNT_ApplyFriend           MessageNotificationType = 1   ///< 好友请求
	MessageNotificationType_MNT_PassFriendApply       MessageNotificationType = 2   ///< 对方同意加你为好友
	MessageNotificationType_MNT_RejectFriendApply     MessageNotificationType = 3   ///< 对方拒绝添加好友
	MessageNotificationType_MNT_DeleteFriend          MessageNotificationType = 4   ///< 删除好友
	MessageNotificationType_MNT_ApplyJoinTeam         MessageNotificationType = 5   ///< 申请加群请求
	MessageNotificationType_MNT_PassTeamApply         MessageNotificationType = 6   ///< 管理员同意加群申请
	MessageNotificationType_MNT_RejectTeamApply       MessageNotificationType = 7   ///< 管理员拒绝加群申请
	MessageNotificationType_MNT_TeamInvite            MessageNotificationType = 8   ///< 邀请加群
	MessageNotificationType_MNT_PassTeamInvite        MessageNotificationType = 9   ///< 用户同意群邀请
	MessageNotificationType_MNT_RejectTeamInvite      MessageNotificationType = 10  ///< 用户被拒绝群邀请
	MessageNotificationType_MNT_DismissTeam           MessageNotificationType = 11  ///< 群被解散
	MessageNotificationType_MNT_KickOffTeam           MessageNotificationType = 12  ///< 被管理员踢出群
	MessageNotificationType_MNT_QuitTeam              MessageNotificationType = 13  ///< 主动退群 对应 ON_MEMBER_EXITED
	MessageNotificationType_MNT_GrantManager          MessageNotificationType = 14  ///< 设置管理员
	MessageNotificationType_MNT_CancelManager         MessageNotificationType = 15  ///< 取消管理员
	MessageNotificationType_MNT_RevokeTeam            MessageNotificationType = 16  ///< 群已被回收
	MessageNotificationType_MNT_TransferTeam          MessageNotificationType = 17  ///< 转让群
	MessageNotificationType_MNT_UpdateTeam            MessageNotificationType = 18  ///< 更新群资料
	MessageNotificationType_MNT_MuteTeamMember        MessageNotificationType = 19  ///< 群成员禁言/解禁
	MessageNotificationType_MNT_MuteTeam              MessageNotificationType = 20  ///< 设置群组禁言模式
	MessageNotificationType_MNT_UpdateTeamMember      MessageNotificationType = 21  ///< 管理员/群主修改群成员信息
	MessageNotificationType_MNT_CheckTeamInvite       MessageNotificationType = 22  ///< 邀请入群前询问管理员是否同意
	MessageNotificationType_MNT_Approveteam           MessageNotificationType = 23  ///< 群审核通过，成为正常状态，可以加群及拉人
	MessageNotificationType_MNT_MemberUpdateMyInfo    MessageNotificationType = 24  ///<  多端同步用户设置其在群里的资料
	MessageNotificationType_MNT_MultiDeleteFriend     MessageNotificationType = 25  ///< 多端同步删除好友
	MessageNotificationType_MNT_CheckTeamInvitePass   MessageNotificationType = 26  ///< 管理员同意了邀请入群前的询问
	MessageNotificationType_MNT_CheckTeamInviteReject MessageNotificationType = 27  ///< 管理员拒绝了邀请入群前的询问
	MessageNotificationType_MNT_MemberJoined          MessageNotificationType = 28  ///< 有新用户加入群
	MessageNotificationType_MNT_OPKLimitAlert         MessageNotificationType = 40  ///< 商户的OPK存量少于10个告警
	MessageNotificationType_MNT_Customer              MessageNotificationType = 100 ///< 自定义事件消息
)

// Enum value maps for MessageNotificationType.
var (
	MessageNotificationType_name = map[int32]string{
		0:   "MNT_UNDEFINE",
		1:   "MNT_ApplyFriend",
		2:   "MNT_PassFriendApply",
		3:   "MNT_RejectFriendApply",
		4:   "MNT_DeleteFriend",
		5:   "MNT_ApplyJoinTeam",
		6:   "MNT_PassTeamApply",
		7:   "MNT_RejectTeamApply",
		8:   "MNT_TeamInvite",
		9:   "MNT_PassTeamInvite",
		10:  "MNT_RejectTeamInvite",
		11:  "MNT_DismissTeam",
		12:  "MNT_KickOffTeam",
		13:  "MNT_QuitTeam",
		14:  "MNT_GrantManager",
		15:  "MNT_CancelManager",
		16:  "MNT_RevokeTeam",
		17:  "MNT_TransferTeam",
		18:  "MNT_UpdateTeam",
		19:  "MNT_MuteTeamMember",
		20:  "MNT_MuteTeam",
		21:  "MNT_UpdateTeamMember",
		22:  "MNT_CheckTeamInvite",
		23:  "MNT_Approveteam",
		24:  "MNT_MemberUpdateMyInfo",
		25:  "MNT_MultiDeleteFriend",
		26:  "MNT_CheckTeamInvitePass",
		27:  "MNT_CheckTeamInviteReject",
		28:  "MNT_MemberJoined",
		40:  "MNT_OPKLimitAlert",
		100: "MNT_Customer",
	}
	MessageNotificationType_value = map[string]int32{
		"MNT_UNDEFINE":              0,
		"MNT_ApplyFriend":           1,
		"MNT_PassFriendApply":       2,
		"MNT_RejectFriendApply":     3,
		"MNT_DeleteFriend":          4,
		"MNT_ApplyJoinTeam":         5,
		"MNT_PassTeamApply":         6,
		"MNT_RejectTeamApply":       7,
		"MNT_TeamInvite":            8,
		"MNT_PassTeamInvite":        9,
		"MNT_RejectTeamInvite":      10,
		"MNT_DismissTeam":           11,
		"MNT_KickOffTeam":           12,
		"MNT_QuitTeam":              13,
		"MNT_GrantManager":          14,
		"MNT_CancelManager":         15,
		"MNT_RevokeTeam":            16,
		"MNT_TransferTeam":          17,
		"MNT_UpdateTeam":            18,
		"MNT_MuteTeamMember":        19,
		"MNT_MuteTeam":              20,
		"MNT_UpdateTeamMember":      21,
		"MNT_CheckTeamInvite":       22,
		"MNT_Approveteam":           23,
		"MNT_MemberUpdateMyInfo":    24,
		"MNT_MultiDeleteFriend":     25,
		"MNT_CheckTeamInvitePass":   26,
		"MNT_CheckTeamInviteReject": 27,
		"MNT_MemberJoined":          28,
		"MNT_OPKLimitAlert":         40,
		"MNT_Customer":              100,
	}
)

func (x MessageNotificationType) Enum() *MessageNotificationType {
	p := new(MessageNotificationType)
	*p = x
	return p
}

func (x MessageNotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageNotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_msg_MsgTypeEnum_proto_enumTypes[3].Descriptor()
}

func (MessageNotificationType) Type() protoreflect.EnumType {
	return &file_api_proto_msg_MsgTypeEnum_proto_enumTypes[3]
}

func (x MessageNotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageNotificationType.Descriptor instead.
func (MessageNotificationType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_msg_MsgTypeEnum_proto_rawDescGZIP(), []int{3}
}

// 当消息事件类型是订单的时候的
type MessageOrderEventType int32

const (
	MessageOrderEventType_MOET_UNDEFINE           MessageOrderEventType = 0
	MessageOrderEventType_MOET_MakeOrder          MessageOrderEventType = 1  ///< 发起一个订单
	MessageOrderEventType_MOET_ReceiveOrderr      MessageOrderEventType = 2  ///< 收到一个订单
	MessageOrderEventType_MOET_CancelOrder        MessageOrderEventType = 3  ///< 撤销订单
	MessageOrderEventType_MOET_ReceiveCancelOrder MessageOrderEventType = 4  ///< 收到撤销订单
	MessageOrderEventType_MOET_Deposit            MessageOrderEventType = 5  ///< 发起充值请求
	MessageOrderEventType_MOET_WithDraw           MessageOrderEventType = 6  ///< 发起提现请求
	MessageOrderEventType_MOET_OTCBuy             MessageOrderEventType = 7  ///< 发起一个OTC买单
	MessageOrderEventType_MOET_OTCSell            MessageOrderEventType = 8  ///< 发起一个OTC卖单
	MessageOrderEventType_MOET_AddProduct         MessageOrderEventType = 9  ///< 新增商品
	MessageOrderEventType_MOET_DeleteProduct      MessageOrderEventType = 10 ///< 删除商品
)

// Enum value maps for MessageOrderEventType.
var (
	MessageOrderEventType_name = map[int32]string{
		0:  "MOET_UNDEFINE",
		1:  "MOET_MakeOrder",
		2:  "MOET_ReceiveOrderr",
		3:  "MOET_CancelOrder",
		4:  "MOET_ReceiveCancelOrder",
		5:  "MOET_Deposit",
		6:  "MOET_WithDraw",
		7:  "MOET_OTCBuy",
		8:  "MOET_OTCSell",
		9:  "MOET_AddProduct",
		10: "MOET_DeleteProduct",
	}
	MessageOrderEventType_value = map[string]int32{
		"MOET_UNDEFINE":           0,
		"MOET_MakeOrder":          1,
		"MOET_ReceiveOrderr":      2,
		"MOET_CancelOrder":        3,
		"MOET_ReceiveCancelOrder": 4,
		"MOET_Deposit":            5,
		"MOET_WithDraw":           6,
		"MOET_OTCBuy":             7,
		"MOET_OTCSell":            8,
		"MOET_AddProduct":         9,
		"MOET_DeleteProduct":      10,
	}
)

func (x MessageOrderEventType) Enum() *MessageOrderEventType {
	p := new(MessageOrderEventType)
	*p = x
	return p
}

func (x MessageOrderEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageOrderEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_msg_MsgTypeEnum_proto_enumTypes[4].Descriptor()
}

func (MessageOrderEventType) Type() protoreflect.EnumType {
	return &file_api_proto_msg_MsgTypeEnum_proto_enumTypes[4]
}

func (x MessageOrderEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageOrderEventType.Descriptor instead.
func (MessageOrderEventType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_msg_MsgTypeEnum_proto_rawDescGZIP(), []int{4}
}

type MessageStatus int32

const (
	MessageStatus_MOS_UDEFINE    MessageStatus = 0 ///< 未定义
	MessageStatus_MOS_Init       MessageStatus = 1 ///<  未处理状态<默认>
	MessageStatus_MOS_Declined   MessageStatus = 2 ///<  已拒绝
	MessageStatus_MOS_Expired    MessageStatus = 3 ///<  已过期
	MessageStatus_MOS_Ignored    MessageStatus = 4 ///<  已忽略
	MessageStatus_MOS_Passed     MessageStatus = 5 ///<  已通过验证
	MessageStatus_MOS_Taked      MessageStatus = 6 ///<  已接单
	MessageStatus_MOS_Done       MessageStatus = 7 ///<  已完成订单
	MessageStatus_MOS_Cancel     MessageStatus = 8 ///<  撤单
	MessageStatus_MOS_Processing MessageStatus = 9 ///< 处理中
)

// Enum value maps for MessageStatus.
var (
	MessageStatus_name = map[int32]string{
		0: "MOS_UDEFINE",
		1: "MOS_Init",
		2: "MOS_Declined",
		3: "MOS_Expired",
		4: "MOS_Ignored",
		5: "MOS_Passed",
		6: "MOS_Taked",
		7: "MOS_Done",
		8: "MOS_Cancel",
		9: "MOS_Processing",
	}
	MessageStatus_value = map[string]int32{
		"MOS_UDEFINE":    0,
		"MOS_Init":       1,
		"MOS_Declined":   2,
		"MOS_Expired":    3,
		"MOS_Ignored":    4,
		"MOS_Passed":     5,
		"MOS_Taked":      6,
		"MOS_Done":       7,
		"MOS_Cancel":     8,
		"MOS_Processing": 9,
	}
)

func (x MessageStatus) Enum() *MessageStatus {
	p := new(MessageStatus)
	*p = x
	return p
}

func (x MessageStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_msg_MsgTypeEnum_proto_enumTypes[5].Descriptor()
}

func (MessageStatus) Type() protoreflect.EnumType {
	return &file_api_proto_msg_MsgTypeEnum_proto_enumTypes[5]
}

func (x MessageStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageStatus.Descriptor instead.
func (MessageStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_msg_MsgTypeEnum_proto_rawDescGZIP(), []int{5}
}

// 加密消息的时候的 类型枚举
type MessageSecretType int32

const (
	//
	MessageSecretType_MST_UNDEFINE MessageSecretType = 0
	MessageSecretType_MST_PRE_KRY  MessageSecretType = 1 /// 预先消息
	MessageSecretType_MST_MESSAGE  MessageSecretType = 2 /// 加密消息
)

// Enum value maps for MessageSecretType.
var (
	MessageSecretType_name = map[int32]string{
		0: "MST_UNDEFINE",
		1: "MST_PRE_KRY",
		2: "MST_MESSAGE",
	}
	MessageSecretType_value = map[string]int32{
		"MST_UNDEFINE": 0,
		"MST_PRE_KRY":  1,
		"MST_MESSAGE":  2,
	}
)

func (x MessageSecretType) Enum() *MessageSecretType {
	p := new(MessageSecretType)
	*p = x
	return p
}

func (x MessageSecretType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageSecretType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_msg_MsgTypeEnum_proto_enumTypes[6].Descriptor()
}

func (MessageSecretType) Type() protoreflect.EnumType {
	return &file_api_proto_msg_MsgTypeEnum_proto_enumTypes[6]
}

func (x MessageSecretType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageSecretType.Descriptor instead.
func (MessageSecretType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_msg_MsgTypeEnum_proto_rawDescGZIP(), []int{6}
}

var File_api_proto_msg_MsgTypeEnum_proto protoreflect.FileDescriptor

var file_api_proto_msg_MsgTypeEnum_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x73, 0x67, 0x2f,
	0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x13, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e,
	0x69, 0x6d, 0x2e, 0x6d, 0x73, 0x67, 0x2a, 0x6e, 0x0a, 0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x73, 0x67, 0x53, 0x63, 0x65,
	0x6e, 0x65, 0x5f, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x00, 0x12, 0x10,
	0x0a, 0x0c, 0x4d, 0x73, 0x67, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x43, 0x32, 0x43, 0x10, 0x01,
	0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x73, 0x67, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x43, 0x32, 0x47,
	0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x73, 0x67, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x53,
	0x32, 0x43, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x73, 0x67, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x5f, 0x50, 0x32, 0x50, 0x10, 0x05, 0x2a, 0xde, 0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x00, 0x12, 0x10, 0x0a,
	0x0c, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x74, 0x10, 0x01, 0x12,
	0x12, 0x0a, 0x0e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x03, 0x12, 0x12, 0x0a,
	0x0e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x10,
	0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x42, 0x69, 0x6e,
	0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x10, 0x06, 0x12, 0x18, 0x0a, 0x14, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x5f, 0x53, 0x79, 0x73, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0x07, 0x12,
	0x10, 0x0a, 0x0c, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x52, 0x6f, 0x6f, 0x66, 0x10,
	0x08, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x53, 0x67, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x10, 0x64, 0x2a, 0x9c, 0x02, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65,
	0x5f, 0x46, 0x69, 0x6c, 0x65, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x47, 0x65, 0x6f, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x10,
	0x06, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x07, 0x12, 0x21, 0x0a,
	0x1d, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x10, 0x08,
	0x12, 0x17, 0x0a, 0x13, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x56,
	0x69, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x10, 0x09, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x10, 0x0a, 0x2a, 0xe2, 0x05, 0x0a, 0x17, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x4e, 0x54, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x4e, 0x54, 0x5f, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x4e, 0x54,
	0x5f, 0x50, 0x61, 0x73, 0x73, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x4e, 0x54, 0x5f, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x10, 0x03, 0x12, 0x14, 0x0a,
	0x10, 0x4d, 0x4e, 0x54, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x4e, 0x54, 0x5f, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x4e,
	0x54, 0x5f, 0x50, 0x61, 0x73, 0x73, 0x54, 0x65, 0x61, 0x6d, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x10,
	0x06, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x4e, 0x54, 0x5f, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54,
	0x65, 0x61, 0x6d, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x10, 0x07, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x4e,
	0x54, 0x5f, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x10, 0x08, 0x12, 0x16,
	0x0a, 0x12, 0x4d, 0x4e, 0x54, 0x5f, 0x50, 0x61, 0x73, 0x73, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x10, 0x09, 0x12, 0x18, 0x0a, 0x14, 0x4d, 0x4e, 0x54, 0x5f, 0x52, 0x65,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x10, 0x0a,
	0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x4e, 0x54, 0x5f, 0x44, 0x69, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x54,
	0x65, 0x61, 0x6d, 0x10, 0x0b, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x4e, 0x54, 0x5f, 0x4b, 0x69, 0x63,
	0x6b, 0x4f, 0x66, 0x66, 0x54, 0x65, 0x61, 0x6d, 0x10, 0x0c, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x4e,
	0x54, 0x5f, 0x51, 0x75, 0x69, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x10, 0x0d, 0x12, 0x14, 0x0a, 0x10,
	0x4d, 0x4e, 0x54, 0x5f, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x10, 0x0e, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x4e, 0x54, 0x5f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x10, 0x0f, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x4e, 0x54,
	0x5f, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x10, 0x10, 0x12, 0x14, 0x0a,
	0x10, 0x4d, 0x4e, 0x54, 0x5f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x65, 0x61,
	0x6d, 0x10, 0x11, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x4e, 0x54, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x61, 0x6d, 0x10, 0x12, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x4e, 0x54, 0x5f, 0x4d,
	0x75, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x10, 0x13, 0x12,
	0x10, 0x0a, 0x0c, 0x4d, 0x4e, 0x54, 0x5f, 0x4d, 0x75, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x10,
	0x14, 0x12, 0x18, 0x0a, 0x14, 0x4d, 0x4e, 0x54, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x10, 0x15, 0x12, 0x17, 0x0a, 0x13, 0x4d,
	0x4e, 0x54, 0x5f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x10, 0x16, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x4e, 0x54, 0x5f, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x74, 0x65, 0x61, 0x6d, 0x10, 0x17, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x4e, 0x54,
	0x5f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x10, 0x18, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x4e, 0x54, 0x5f, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x10, 0x19,
	0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x4e, 0x54, 0x5f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x65, 0x61,
	0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x10, 0x1a, 0x12, 0x1d, 0x0a,
	0x19, 0x4d, 0x4e, 0x54, 0x5f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x10, 0x1b, 0x12, 0x14, 0x0a, 0x10,
	0x4d, 0x4e, 0x54, 0x5f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64,
	0x10, 0x1c, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x4e, 0x54, 0x5f, 0x4f, 0x50, 0x4b, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x10, 0x28, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x4e, 0x54,
	0x5f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x10, 0x64, 0x2a, 0xfe, 0x01, 0x0a, 0x15,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x4f, 0x45, 0x54, 0x5f, 0x55, 0x4e,
	0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x4f, 0x45, 0x54,
	0x5f, 0x4d, 0x61, 0x6b, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12,
	0x4d, 0x4f, 0x45, 0x54, 0x5f, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x72, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x4f, 0x45, 0x54, 0x5f, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x4f,
	0x45, 0x54, 0x5f, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x4f, 0x45, 0x54, 0x5f,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x4f, 0x45,
	0x54, 0x5f, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b,
	0x4d, 0x4f, 0x45, 0x54, 0x5f, 0x4f, 0x54, 0x43, 0x42, 0x75, 0x79, 0x10, 0x07, 0x12, 0x10, 0x0a,
	0x0c, 0x4d, 0x4f, 0x45, 0x54, 0x5f, 0x4f, 0x54, 0x43, 0x53, 0x65, 0x6c, 0x6c, 0x10, 0x08, 0x12,
	0x13, 0x0a, 0x0f, 0x4d, 0x4f, 0x45, 0x54, 0x5f, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x10, 0x09, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x4f, 0x45, 0x54, 0x5f, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x10, 0x0a, 0x2a, 0xb3, 0x01, 0x0a,
	0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f,
	0x0a, 0x0b, 0x4d, 0x4f, 0x53, 0x5f, 0x55, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x0c, 0x0a, 0x08, 0x4d, 0x4f, 0x53, 0x5f, 0x49, 0x6e, 0x69, 0x74, 0x10, 0x01, 0x12, 0x10, 0x0a,
	0x0c, 0x4d, 0x4f, 0x53, 0x5f, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x02, 0x12,
	0x0f, 0x0a, 0x0b, 0x4d, 0x4f, 0x53, 0x5f, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x10, 0x03,
	0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x4f, 0x53, 0x5f, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x10,
	0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x4f, 0x53, 0x5f, 0x50, 0x61, 0x73, 0x73, 0x65, 0x64, 0x10,
	0x05, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x4f, 0x53, 0x5f, 0x54, 0x61, 0x6b, 0x65, 0x64, 0x10, 0x06,
	0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x4f, 0x53, 0x5f, 0x44, 0x6f, 0x6e, 0x65, 0x10, 0x07, 0x12, 0x0e,
	0x0a, 0x0a, 0x4d, 0x4f, 0x53, 0x5f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x10, 0x08, 0x12, 0x12,
	0x0a, 0x0e, 0x4d, 0x4f, 0x53, 0x5f, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x10, 0x09, 0x2a, 0x47, 0x0a, 0x11, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x53, 0x54, 0x5f, 0x55,
	0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x53, 0x54,
	0x5f, 0x50, 0x52, 0x45, 0x5f, 0x4b, 0x52, 0x59, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x53,
	0x54, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x02, 0x42, 0x29, 0x5a, 0x27, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x6d, 0x73, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_msg_MsgTypeEnum_proto_rawDescOnce sync.Once
	file_api_proto_msg_MsgTypeEnum_proto_rawDescData = file_api_proto_msg_MsgTypeEnum_proto_rawDesc
)

func file_api_proto_msg_MsgTypeEnum_proto_rawDescGZIP() []byte {
	file_api_proto_msg_MsgTypeEnum_proto_rawDescOnce.Do(func() {
		file_api_proto_msg_MsgTypeEnum_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_msg_MsgTypeEnum_proto_rawDescData)
	})
	return file_api_proto_msg_MsgTypeEnum_proto_rawDescData
}

var file_api_proto_msg_MsgTypeEnum_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_api_proto_msg_MsgTypeEnum_proto_goTypes = []interface{}{
	(MessageScene)(0),            // 0: cloud.lianmi.im.msg.MessageScene
	(MessageType)(0),             // 1: cloud.lianmi.im.msg.MessageType
	(AttachType)(0),              // 2: cloud.lianmi.im.msg.AttachType
	(MessageNotificationType)(0), // 3: cloud.lianmi.im.msg.MessageNotificationType
	(MessageOrderEventType)(0),   // 4: cloud.lianmi.im.msg.MessageOrderEventType
	(MessageStatus)(0),           // 5: cloud.lianmi.im.msg.MessageStatus
	(MessageSecretType)(0),       // 6: cloud.lianmi.im.msg.MessageSecretType
}
var file_api_proto_msg_MsgTypeEnum_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_api_proto_msg_MsgTypeEnum_proto_init() }
func file_api_proto_msg_MsgTypeEnum_proto_init() {
	if File_api_proto_msg_MsgTypeEnum_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_msg_MsgTypeEnum_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_proto_msg_MsgTypeEnum_proto_goTypes,
		DependencyIndexes: file_api_proto_msg_MsgTypeEnum_proto_depIdxs,
		EnumInfos:         file_api_proto_msg_MsgTypeEnum_proto_enumTypes,
	}.Build()
	File_api_proto_msg_MsgTypeEnum_proto = out.File
	file_api_proto_msg_MsgTypeEnum_proto_rawDesc = nil
	file_api_proto_msg_MsgTypeEnum_proto_goTypes = nil
	file_api_proto_msg_MsgTypeEnum_proto_depIdxs = nil
}
