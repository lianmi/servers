syntax = "proto3"; 
import "api/proto/msg/Msg.proto";

package cc.lianmi.im.msg;
option go_package = "github.com/lianmi/servers/api/proto/msg";

//2.6.15. 接收系统消息
//API描述
//接收系统消息，该类消息消息跟普通消息区别在于，该类消息带交互状态，如：好友申请、群组操作相关的系统通知类消息。
//消息触发场景补充说明：
//1、好友申请系统事件
//当添加方调用好友请求#ApplyFriend，双方都会接收该系统事件，自己和对方会收到好友申请系统通知。当申请好友时对方需要验证，自己和对方会收到好友申请系统通知，对方可选择同意或者拒绝，自己不能操作，只做信息同步之用。
//2、添加好友通过/拒绝事件
//当被添加方调用好友请求#PassFriendApply | RejectFriendApply ，好友申请通过/拒绝后,A和B都会收到该事件。均作为信息同步之用
//3、删除好友系统事件
//当用户调用删除好友, 双方都会收到该事件，均作为信息同步之用
//4、申请加群请求
//当有用户申请申请加群时，群管理员会收到申请加群事件，可展示给用户，由用户决定是否同意对方加群。
//5、申请加群被同意消息
//当管理员通过群申请时，申请人/其他群管理员会收到同意入群的事件。
//6、申请加群被拒绝消息
//当管理员拒绝群申请时，申请人/其他群管理员收到拒绝入群的事件。
//7、邀请入群消息
//当邀请用户加群时，被邀请人会收到邀请入群事件，可展示给用户，由用户决定是否同意入群。
//8、邀请人同意入群消息
//当被邀请者接受群邀请时，邀请者会收到同意入群的事件
//9、邀请入群拒绝消息
//当被邀请者拒绝群邀请时，邀请者会收到拒绝入群的事件。
//10、群被解散
//当群主解散群组时，全员会收到解散群事件。
//11、被管理员踢出群
//当管理员删除群组成员时，被踢成员会收到被踢出群的事件。
//12、主动退群
//当用户主动离开群组时，该用户会收到退群事件，只有退群的用户自己可以收到。当用户调用 退出指令 时成功回调返回，表示已退出成功，此消息主要为了多终端同步，其他终端可以作为更新群列表的时机，本终端可以选择忽略。
//13、设置/取消管理员
//当用户被群主设置群管理员时，可收到被设置管理员的事件通知，当用户被取消群管理员时，可收到取消事件，可提示用户。
//14、群被回收
//当群组被系统回收时，全员可收到群组被回收消息。
//15、转让群
//当有用户被转让群时，新群主会收到转让群群事件。
//16、更新群基础信息
//当群主、管理员更新群组信息后，所有群成员会收到该事件。
//17、群成员禁言/解禁
//当管理员对群成员实施设置群成员禁言时，被实施群成员收到该事件。
//18、修改群组禁言模式
//当群主、管理员修改群组禁言模式修改群禁言模式时，所有群成员收到该事件。
//19、更新群成员信息
//当群主、管理员设置群成员资料后，被修改群成员会收到该事件会触发该事件。
message RecvSysMsgEvent{
   //服务器分配的消息ID
   //是否必填-是
   string idServer=1;
   //通讯场景
   //C2C(1) - 点对点通讯
   //C2G(2) - 群组通讯
   //是否必填-是
   msg.Scene  scene=2;
   //附件字段json格式
   //是否必填-否
   string attach=3;
   //请求的附言信息
   //是否必填-否
   string requestMsg=4;
   //获取请求者id
   //1、请求加群:请求者
   //2、邀请加群:发起邀请人者的ID
   //3、请求添加好友,发起好友申请的用户ID
   //是否必填-是
   string from=5;
   //消息接收人，只有以下场景，该字段有值
   //邀请入群，该字段为被邀请用户ID
   //申请加好友的目标用户ID
   //申请加群被同意/拒绝，该字段为申请人ID
   //邀请入群被同意/拒绝，该字段为邀请人ID
   //是否必填-否
   string to=6;
   //群组ID，好友请求场景，该字段为空，群操作场景，该字段必填
   //是否必填-否
   string teamId=7;
   //最后处理人
   //1、添加好友，对方接收/拒绝后，该字段填充为对方ID
   //2、申请入群，管理员通过/拒绝后，该字段填充管理员ID
   //3、邀请入群，用户通过/拒绝后，该字段填充目标用户ID
   //是否必填-否
   string handledAccount=8;
   //获取处理者添加的附加信息
   //1、添加好友，拒绝附言
   //2、申请入群，拒绝附言
   //3、邀请入群，拒绝附言
   //是否必填-否
   string handledMsg=9; 
   //消息类型
   //消息子类型
   //ApplyFriend(1) <好友请求>
   //PassFriendApply(2) <对方同意加你为好友>
   //RejectFriendApply(3) <对方拒绝添加好友>
   //DeleteFriend(4) <被删除好友>
   //ApplyJoinTeam(5) <申请加群请求>
   //PassTeamApply(6) <管理员同意加群申请>
   //RejectTeamApply(7) <管理员拒绝加群申请>
   //TeamInvite(8) <邀请加群>
   //PassTeamInvite(9) <用户同意群邀请>
   //RejectTeamInvite(10) <用户拒绝群邀请>
   //DismissTeam(11) <群被解散>
   //KickOffTeam(12) <被管理员踢出群>
   //QuitTeam(13) <主动退群>
   //GrantManager(14) <设置管理员>
   //CancelManager(15) <取消管理员>
   //RevokeTeam(16) <群已被回收>
   //TransferTeam(17) <转让群>
   //UpdateTeam(18) <更新群资料>
   //MuteTeamMember(19) <群成员禁言/解禁>
   //MuteTeam(20) <设置群组禁言模式>
   //UpdateTeamMember(21) <管理员/群主修改群成员信息>
   //Customer(100)<自定义事件消息>
   //是否必填-是
   msg.RecvSysMsgSubType  type=10;
   //消息处理状态
   //Declined(1) - 已拒绝
   //Expired(2) - 已过期
   //Ignored(3) - 已忽略
   //Init(4) - 未处理状态<默认>
   //Passed(5) - 已通过验证
   //是否必填-是
   msg.RecvSysMsgStatus  status=11;
   //消息是否已读
   //是否必填-否
   bool unread=12; //[default=true];
   //消息最后处理时间
   //是否必填-是
   fixed64 time=13;
   
}