syntax = "proto3"; 
import "api/proto/msg/Msg.proto";

package cloud.lianmi.im.msg;
option go_package = "github.com/lianmi/servers/api/proto/msg";

//2.6.7. 同步会话最大确认时间 
//会话时间戳
message ConversationAck{
   //会话ID
   //是否必填-是
   string sessionId=1;
   //传输场景
   //是否必填-是
   msg.Scene scene=2;
   //该会话收到的消息最后消息id
   //是否必填-是
   string idServer=3;
   //消息序号，单个会话内自然递增,与idServer唯一对应
   //是否必填-是
   fixed64 seq=4;
   //客户端分配的消息ID，SDK生成的消息id, 
   //在发送消息之后会返回给开发者, 开发者可以在
   //发送消息的结果回调里面根据这个ID来判断相应消息的发送
   //状态, 到底是发送成功了还是发送失败了, 然后根据此状
   //态来更新页面的UI。如果发送失败, 那么可以重新发送此消息，推荐UUID
   //是否必填-是
   string idClient=5;
   //用于UI展示的文本信息
   //是否必填-否
   string body=6;
   //消息来源,用户ID
   //是否必填-是
   string from=7;
   //发消息，用户昵称
   //是否必填-是
   string fromNick=8;
   //消息类型
   //是否必填-是
   msg.MsgType type=9;
   //该会话收到的消息最后时间
   //是否必填-是
   fixed64 time=10; 
   //当前会话读取到的消息id位置
   //是否必填-是
   string currentMsgId=11;
   //消息序号，单个会话内自然递增,与currentMsgId唯一对应
   //是否必填-是
   fixed64 currentSeq=12;
   //联系人帐号或群id
   //是否必填-是
   string contactId=13;
   //联系人设备ID
   //是否必填-否
   string contactDeviceId=14;
   //供客户端自己扩展使用
   //是否必填-是
   string ext=15;
}
//2.6.7. 同步会话最大确认时间
//登录后，由服务端增量推送其他终端确认过的会话确认最大时间戳
message SyncConversationAckEvent{
   //本次同步，服务器结束时间，unix时间戳，单位ms
   //是否必填-是
   fixed64 timetag=1;
   //会话时间戳列表
   repeated ConversationAck conversations=2;
}