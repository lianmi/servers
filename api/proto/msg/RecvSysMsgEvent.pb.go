// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.7.0
// source: api/proto/msg/RecvSysMsgEvent.proto

package msg

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//2.6.15. 接收系统消息
//API描述
//接收系统消息，该类消息消息跟普通消息区别在于，该类消息带交互状态，如：好友申请、群组操作相关的系统通知类消息。
//消息触发场景补充说明：
//1、好友申请系统事件
//当添加方调用好友请求#ApplyFriend，双方都会接收该系统事件，自己和对方会收到好友申请系统通知。当申请好友时对方需要验证，自己和对方会收到好友申请系统通知，对方可选择同意或者拒绝，自己不能操作，只做信息同步之用。
//2、添加好友通过/拒绝事件
//当被添加方调用好友请求#PassFriendApply | RejectFriendApply ，好友申请通过/拒绝后,A和B都会收到该事件。均作为信息同步之用
//3、删除好友系统事件
//当用户调用删除好友, 双方都会收到该事件，均作为信息同步之用
//4、申请加群请求
//当有用户申请申请加群时，群管理员会收到申请加群事件，可展示给用户，由用户决定是否同意对方加群。
//5、申请加群被同意消息
//当管理员通过群申请时，申请人/其他群管理员会收到同意入群的事件。
//6、申请加群被拒绝消息
//当管理员拒绝群申请时，申请人/其他群管理员收到拒绝入群的事件。
//7、邀请入群消息
//当邀请用户加群时，被邀请人会收到邀请入群事件，可展示给用户，由用户决定是否同意入群。
//8、邀请人同意入群消息
//当被邀请者接受群邀请时，邀请者会收到同意入群的事件
//9、邀请入群拒绝消息
//当被邀请者拒绝群邀请时，邀请者会收到拒绝入群的事件。
//10、群被解散
//当群主解散群组时，全员会收到解散群事件。
//11、被管理员踢出群
//当管理员删除群组成员时，被踢成员会收到被踢出群的事件。
//12、主动退群
//当用户主动离开群组时，该用户会收到退群事件，只有退群的用户自己可以收到。当用户调用 退出指令 时成功回调返回，表示已退出成功，此消息主要为了多终端同步，其他终端可以作为更新群列表的时机，本终端可以选择忽略。
//13、设置/取消管理员
//当用户被群主设置群管理员时，可收到被设置管理员的事件通知，当用户被取消群管理员时，可收到取消事件，可提示用户。
//14、群被回收
//当群组被系统回收时，全员可收到群组被回收消息。
//15、转让群
//当有用户被转让群时，新群主会收到转让群群事件。
//16、更新群基础信息
//当群主、管理员更新群组信息后，所有群成员会收到该事件。
//17、群成员禁言/解禁
//当管理员对群成员实施设置群成员禁言时，被实施群成员收到该事件。
//18、修改群组禁言模式
//当群主、管理员修改群组禁言模式修改群禁言模式时，所有群成员收到该事件。
//19、更新群成员信息
//当群主、管理员设置群成员资料后，被修改群成员会收到该事件会触发该事件。
type RecvSysMsgEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//服务器分配的消息ID
	//是否必填-是
	IdServer string `protobuf:"bytes,1,opt,name=idServer,proto3" json:"idServer,omitempty"`
	//通讯场景
	//C2C(1) - 点对点通讯
	//C2G(2) - 群组通讯
	//是否必填-是
	Scene Scene `protobuf:"varint,2,opt,name=scene,proto3,enum=cloud.lianmi.im.msg.Scene" json:"scene,omitempty"`
	//附件字段json格式
	//是否必填-否
	Attach string `protobuf:"bytes,3,opt,name=attach,proto3" json:"attach,omitempty"`
	//请求的附言信息
	//是否必填-否
	RequestMsg string `protobuf:"bytes,4,opt,name=requestMsg,proto3" json:"requestMsg,omitempty"`
	//获取请求者id
	//1、请求加群:请求者
	//2、邀请加群:发起邀请人者的ID
	//3、请求添加好友,发起好友申请的用户ID
	//是否必填-是
	From string `protobuf:"bytes,5,opt,name=from,proto3" json:"from,omitempty"`
	//消息接收人，只有以下场景，该字段有值
	//邀请入群，该字段为被邀请用户ID
	//申请加好友的目标用户ID
	//申请加群被同意/拒绝，该字段为申请人ID
	//邀请入群被同意/拒绝，该字段为邀请人ID
	//是否必填-否
	To string `protobuf:"bytes,6,opt,name=to,proto3" json:"to,omitempty"`
	//群组ID，好友请求场景，该字段为空，群操作场景，该字段必填
	//是否必填-否
	TeamId string `protobuf:"bytes,7,opt,name=teamId,proto3" json:"teamId,omitempty"`
	//最后处理人
	//1、添加好友，对方接收/拒绝后，该字段填充为对方ID
	//2、申请入群，管理员通过/拒绝后，该字段填充管理员ID
	//3、邀请入群，用户通过/拒绝后，该字段填充目标用户ID
	//是否必填-否
	HandledAccount string `protobuf:"bytes,8,opt,name=handledAccount,proto3" json:"handledAccount,omitempty"`
	//获取处理者添加的附加信息
	//1、添加好友，拒绝附言
	//2、申请入群，拒绝附言
	//3、邀请入群，拒绝附言
	//是否必填-否
	HandledMsg string `protobuf:"bytes,9,opt,name=handledMsg,proto3" json:"handledMsg,omitempty"`
	//消息类型
	//消息子类型
	//ApplyFriend(1) <好友请求>
	//PassFriendApply(2) <对方同意加你为好友>
	//RejectFriendApply(3) <对方拒绝添加好友>
	//DeleteFriend(4) <被删除好友>
	//ApplyJoinTeam(5) <申请加群请求>
	//PassTeamApply(6) <管理员同意加群申请>
	//RejectTeamApply(7) <管理员拒绝加群申请>
	//TeamInvite(8) <邀请加群>
	//PassTeamInvite(9) <用户同意群邀请>
	//RejectTeamInvite(10) <用户拒绝群邀请>
	//DismissTeam(11) <群被解散>
	//KickOffTeam(12) <被管理员踢出群>
	//QuitTeam(13) <主动退群>
	//GrantManager(14) <设置管理员>
	//CancelManager(15) <取消管理员>
	//RevokeTeam(16) <群已被回收>
	//TransferTeam(17) <转让群>
	//UpdateTeam(18) <更新群资料>
	//MuteTeamMember(19) <群成员禁言/解禁>
	//MuteTeam(20) <设置群组禁言模式>
	//UpdateTeamMember(21) <管理员/群主修改群成员信息>
	//Customer(100)<自定义事件消息>
	//是否必填-是
	Type RecvSysMsgSubType `protobuf:"varint,10,opt,name=type,proto3,enum=cloud.lianmi.im.msg.RecvSysMsgSubType" json:"type,omitempty"`
	//消息处理状态
	//Declined(1) - 已拒绝
	//Expired(2) - 已过期
	//Ignored(3) - 已忽略
	//Init(4) - 未处理状态<默认>
	//Passed(5) - 已通过验证
	//是否必填-是
	Status RecvSysMsgStatus `protobuf:"varint,11,opt,name=status,proto3,enum=cloud.lianmi.im.msg.RecvSysMsgStatus" json:"status,omitempty"`
	//消息是否已读
	//是否必填-否
	Unread bool `protobuf:"varint,12,opt,name=unread,proto3" json:"unread,omitempty"` //[default=true];
	//消息最后处理时间
	//是否必填-是
	Time uint64 `protobuf:"fixed64,13,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *RecvSysMsgEvent) Reset() {
	*x = RecvSysMsgEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msg_RecvSysMsgEvent_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecvSysMsgEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecvSysMsgEvent) ProtoMessage() {}

func (x *RecvSysMsgEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msg_RecvSysMsgEvent_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecvSysMsgEvent.ProtoReflect.Descriptor instead.
func (*RecvSysMsgEvent) Descriptor() ([]byte, []int) {
	return file_api_proto_msg_RecvSysMsgEvent_proto_rawDescGZIP(), []int{0}
}

func (x *RecvSysMsgEvent) GetIdServer() string {
	if x != nil {
		return x.IdServer
	}
	return ""
}

func (x *RecvSysMsgEvent) GetScene() Scene {
	if x != nil {
		return x.Scene
	}
	return Scene_Sc_Undefined
}

func (x *RecvSysMsgEvent) GetAttach() string {
	if x != nil {
		return x.Attach
	}
	return ""
}

func (x *RecvSysMsgEvent) GetRequestMsg() string {
	if x != nil {
		return x.RequestMsg
	}
	return ""
}

func (x *RecvSysMsgEvent) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *RecvSysMsgEvent) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *RecvSysMsgEvent) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *RecvSysMsgEvent) GetHandledAccount() string {
	if x != nil {
		return x.HandledAccount
	}
	return ""
}

func (x *RecvSysMsgEvent) GetHandledMsg() string {
	if x != nil {
		return x.HandledMsg
	}
	return ""
}

func (x *RecvSysMsgEvent) GetType() RecvSysMsgSubType {
	if x != nil {
		return x.Type
	}
	return RecvSysMsgSubType_Rsmst_Undefined
}

func (x *RecvSysMsgEvent) GetStatus() RecvSysMsgStatus {
	if x != nil {
		return x.Status
	}
	return RecvSysMsgStatus_Rsmsta_Undefined
}

func (x *RecvSysMsgEvent) GetUnread() bool {
	if x != nil {
		return x.Unread
	}
	return false
}

func (x *RecvSysMsgEvent) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

var File_api_proto_msg_RecvSysMsgEvent_proto protoreflect.FileDescriptor

var file_api_proto_msg_RecvSysMsgEvent_proto_rawDesc = []byte{
	0x0a, 0x23, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x73, 0x67, 0x2f,
	0x52, 0x65, 0x63, 0x76, 0x53, 0x79, 0x73, 0x4d, 0x73, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69, 0x61,
	0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x6d, 0x73, 0x67, 0x1a, 0x17, 0x61, 0x70, 0x69, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x4d, 0x73, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xc2, 0x03, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x76, 0x53, 0x79, 0x73, 0x4d,
	0x73, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d,
	0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x52, 0x05,
	0x73, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x4d, 0x73, 0x67, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x4d, 0x73,
	0x67, 0x12, 0x3a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x26, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69,
	0x6d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x52, 0x65, 0x63, 0x76, 0x53, 0x79, 0x73, 0x4d, 0x73, 0x67,
	0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x52, 0x65, 0x63, 0x76, 0x53, 0x79, 0x73, 0x4d, 0x73, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x6e,
	0x72, 0x65, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x06, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x6d, 0x73, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_msg_RecvSysMsgEvent_proto_rawDescOnce sync.Once
	file_api_proto_msg_RecvSysMsgEvent_proto_rawDescData = file_api_proto_msg_RecvSysMsgEvent_proto_rawDesc
)

func file_api_proto_msg_RecvSysMsgEvent_proto_rawDescGZIP() []byte {
	file_api_proto_msg_RecvSysMsgEvent_proto_rawDescOnce.Do(func() {
		file_api_proto_msg_RecvSysMsgEvent_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_msg_RecvSysMsgEvent_proto_rawDescData)
	})
	return file_api_proto_msg_RecvSysMsgEvent_proto_rawDescData
}

var file_api_proto_msg_RecvSysMsgEvent_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_api_proto_msg_RecvSysMsgEvent_proto_goTypes = []interface{}{
	(*RecvSysMsgEvent)(nil), // 0: cloud.lianmi.im.msg.RecvSysMsgEvent
	(Scene)(0),              // 1: cloud.lianmi.im.msg.Scene
	(RecvSysMsgSubType)(0),  // 2: cloud.lianmi.im.msg.RecvSysMsgSubType
	(RecvSysMsgStatus)(0),   // 3: cloud.lianmi.im.msg.RecvSysMsgStatus
}
var file_api_proto_msg_RecvSysMsgEvent_proto_depIdxs = []int32{
	1, // 0: cloud.lianmi.im.msg.RecvSysMsgEvent.scene:type_name -> cloud.lianmi.im.msg.Scene
	2, // 1: cloud.lianmi.im.msg.RecvSysMsgEvent.type:type_name -> cloud.lianmi.im.msg.RecvSysMsgSubType
	3, // 2: cloud.lianmi.im.msg.RecvSysMsgEvent.status:type_name -> cloud.lianmi.im.msg.RecvSysMsgStatus
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_api_proto_msg_RecvSysMsgEvent_proto_init() }
func file_api_proto_msg_RecvSysMsgEvent_proto_init() {
	if File_api_proto_msg_RecvSysMsgEvent_proto != nil {
		return
	}
	file_api_proto_msg_Msg_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msg_RecvSysMsgEvent_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecvSysMsgEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_msg_RecvSysMsgEvent_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_proto_msg_RecvSysMsgEvent_proto_goTypes,
		DependencyIndexes: file_api_proto_msg_RecvSysMsgEvent_proto_depIdxs,
		MessageInfos:      file_api_proto_msg_RecvSysMsgEvent_proto_msgTypes,
	}.Build()
	File_api_proto_msg_RecvSysMsgEvent_proto = out.File
	file_api_proto_msg_RecvSysMsgEvent_proto_rawDesc = nil
	file_api_proto_msg_RecvSysMsgEvent_proto_goTypes = nil
	file_api_proto_msg_RecvSysMsgEvent_proto_depIdxs = nil
}
