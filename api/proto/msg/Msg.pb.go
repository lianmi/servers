// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.7.0
// source: api/proto/msg/Msg.proto

package msg

import (
	proto "github.com/golang/protobuf/proto"
	team "github.com/lianmi/servers/api/proto/team"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//2.6.1
//公共消息定义
//消息的传输场景枚举定义
type Scene int32

const (
	//无效
	Scene_Sc_Undefined Scene = 0
	//人对人通讯
	Scene_Sc_C2C Scene = 1
	//群组通讯
	Scene_Sc_C2G Scene = 2
	//系统消息
	Scene_Sc_SYSTEM Scene = 3
	//设备对设备(点对点)通讯
	Scene_Sc_P2P Scene = 4
	//加密通信
	Scene_Sc_Secret Scene = 5
)

// Enum value maps for Scene.
var (
	Scene_name = map[int32]string{
		0: "Sc_Undefined",
		1: "Sc_C2C",
		2: "Sc_C2G",
		3: "Sc_SYSTEM",
		4: "Sc_P2P",
		5: "Sc_Secret",
	}
	Scene_value = map[string]int32{
		"Sc_Undefined": 0,
		"Sc_C2C":       1,
		"Sc_C2G":       2,
		"Sc_SYSTEM":    3,
		"Sc_P2P":       4,
		"Sc_Secret":    5,
	}
)

func (x Scene) Enum() *Scene {
	p := new(Scene)
	*p = x
	return p
}

func (x Scene) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Scene) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_msg_Msg_proto_enumTypes[0].Descriptor()
}

func (Scene) Type() protoreflect.EnumType {
	return &file_api_proto_msg_Msg_proto_enumTypes[0]
}

func (x Scene) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Scene.Descriptor instead.
func (Scene) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_msg_Msg_proto_rawDescGZIP(), []int{0}
}

//2.6.1
//消息的类型枚举定义
type MsgType int32

const (
	//无效
	MsgType_Mt_Undefined MsgType = 0
	//Text(0)-文本
	MsgType_Mt_Text MsgType = 1
	//Image(1) - 图片
	MsgType_Mt_Image MsgType = 2
	//Audio(2) - 音频文件
	MsgType_Mt_Audio MsgType = 3
	//Video(3) - 视频文件
	MsgType_Mt_Video MsgType = 4
	//File(4) - 文件
	MsgType_Mt_File MsgType = 5
	//Geo(5) - 地理位置
	MsgType_Mt_Geo MsgType = 6
	//Notification(6) - 通知
	MsgType_Mt_Notification MsgType = 7
	//AvChat(7) - 音视频消息
	MsgType_Mt_AvChat MsgType = 8
	//Customer(100) - 自定义消息
	MsgType_Mt_Customer MsgType = 100
)

// Enum value maps for MsgType.
var (
	MsgType_name = map[int32]string{
		0:   "Mt_Undefined",
		1:   "Mt_Text",
		2:   "Mt_Image",
		3:   "Mt_Audio",
		4:   "Mt_Video",
		5:   "Mt_File",
		6:   "Mt_Geo",
		7:   "Mt_Notification",
		8:   "Mt_AvChat",
		100: "Mt_Customer",
	}
	MsgType_value = map[string]int32{
		"Mt_Undefined":    0,
		"Mt_Text":         1,
		"Mt_Image":        2,
		"Mt_Audio":        3,
		"Mt_Video":        4,
		"Mt_File":         5,
		"Mt_Geo":          6,
		"Mt_Notification": 7,
		"Mt_AvChat":       8,
		"Mt_Customer":     100,
	}
)

func (x MsgType) Enum() *MsgType {
	p := new(MsgType)
	*p = x
	return p
}

func (x MsgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MsgType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_msg_Msg_proto_enumTypes[1].Descriptor()
}

func (MsgType) Type() protoreflect.EnumType {
	return &file_api_proto_msg_Msg_proto_enumTypes[1]
}

func (x MsgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MsgType.Descriptor instead.
func (MsgType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_msg_Msg_proto_rawDescGZIP(), []int{1}
}

//2.6.11. 拉取群组消息
type TeamMsgSubType int32

const (
	//无效
	TeamMsgSubType_Tms_Undefined TeamMsgSubType = 0
	//新成员加入群组
	//opAccount 为加入用户ID
	//teamMembers 包含加入用户对应群组成员信息
	//userInfos 包含加入用户信息
	//Tms_MemberJoin
	//用户加群申请通过
	TeamMsgSubType_Tms_PassTeamApply TeamMsgSubType = 1
	//新成员加入群组
	//opAccount 为加入用户ID
	//teamMembers 包含加入用户对应群组成员信息
	//userInfos 包含加入用户信息
	//Tms_MemberJoin
	//用户接收邀请加入群组
	TeamMsgSubType_Tms_InviteMember TeamMsgSubType = 2
	//成员被踢出群组
	//opAccount 为群组管理员或群主ID
	//teamMembers 包含被踢用户、操作管理员群成员信息
	//userInfos 包含被踢用户、操作管理员用户信息
	TeamMsgSubType_Tms_KickedMember TeamMsgSubType = 3
	//成员主动退出群组
	//opAccount 为退群用户ID
	//teamMembers 包含退群用户对应群组成员信息
	//userInfos 包含退群用户信息
	TeamMsgSubType_Tms_MemberLeaveTeam TeamMsgSubType = 4
	//更新群组信息
	//opAccount 为退群用户ID
	//teamMembers 包含退群用户对应群组成员信息
	//userInfos 包含退群用户信息
	TeamMsgSubType_Tms_UpdateTeamInfo TeamMsgSubType = 5
	//成员信息被修改
	//opAccount 为群组管理员或群主ID
	//teamMembers 包含被修改用户、操作管理员群成员信息
	//userInfos 包含被修改用户、操作管理员用户信息
	TeamMsgSubType_Tms_UpdateMemberInfo TeamMsgSubType = 6
	//群主添加群管理员
	//opAccount 为群主ID
	//teamMembers 包含群主、新增管理员群成员信息
	//userInfos 包含群主、新增管理员用户信息
	TeamMsgSubType_Tms_GrantManager TeamMsgSubType = 7
	//群主取消群管理员
	//opAccount 为群主ID
	//teamMembers 包含群主、被取消管理员群成员信息
	//userInfos 包含群主、被取消管理员用户信息
	TeamMsgSubType_Tms_CancelManager TeamMsgSubType = 8
	//群主被转让
	TeamMsgSubType_Tms_TransferOwner TeamMsgSubType = 9
	//禁言/解禁群成员
	TeamMsgSubType_Tms_MuteTeamMember TeamMsgSubType = 10
	//群组发言模式变更
	TeamMsgSubType_Tms_MuteTeam TeamMsgSubType = 11
	//自定义类型
	TeamMsgSubType_Tms_Customer TeamMsgSubType = 100
)

// Enum value maps for TeamMsgSubType.
var (
	TeamMsgSubType_name = map[int32]string{
		0:   "Tms_Undefined",
		1:   "Tms_PassTeamApply",
		2:   "Tms_InviteMember",
		3:   "Tms_KickedMember",
		4:   "Tms_MemberLeaveTeam",
		5:   "Tms_UpdateTeamInfo",
		6:   "Tms_UpdateMemberInfo",
		7:   "Tms_GrantManager",
		8:   "Tms_CancelManager",
		9:   "Tms_TransferOwner",
		10:  "Tms_MuteTeamMember",
		11:  "Tms_MuteTeam",
		100: "Tms_Customer",
	}
	TeamMsgSubType_value = map[string]int32{
		"Tms_Undefined":        0,
		"Tms_PassTeamApply":    1,
		"Tms_InviteMember":     2,
		"Tms_KickedMember":     3,
		"Tms_MemberLeaveTeam":  4,
		"Tms_UpdateTeamInfo":   5,
		"Tms_UpdateMemberInfo": 6,
		"Tms_GrantManager":     7,
		"Tms_CancelManager":    8,
		"Tms_TransferOwner":    9,
		"Tms_MuteTeamMember":   10,
		"Tms_MuteTeam":         11,
		"Tms_Customer":         100,
	}
)

func (x TeamMsgSubType) Enum() *TeamMsgSubType {
	p := new(TeamMsgSubType)
	*p = x
	return p
}

func (x TeamMsgSubType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TeamMsgSubType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_msg_Msg_proto_enumTypes[2].Descriptor()
}

func (TeamMsgSubType) Type() protoreflect.EnumType {
	return &file_api_proto_msg_Msg_proto_enumTypes[2]
}

func (x TeamMsgSubType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TeamMsgSubType.Descriptor instead.
func (TeamMsgSubType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_msg_Msg_proto_rawDescGZIP(), []int{2}
}

//2.6.7
//系统消息类型
type SystemMsgType int32

const (
	//无效
	SystemMsgType_Smt_Undefined SystemMsgType = 0
	//个人系统消息
	SystemMsgType_Smt_S2C SystemMsgType = 1
	//群组系统消息
	SystemMsgType_Smt_S2G SystemMsgType = 2
)

// Enum value maps for SystemMsgType.
var (
	SystemMsgType_name = map[int32]string{
		0: "Smt_Undefined",
		1: "Smt_S2C",
		2: "Smt_S2G",
	}
	SystemMsgType_value = map[string]int32{
		"Smt_Undefined": 0,
		"Smt_S2C":       1,
		"Smt_S2G":       2,
	}
)

func (x SystemMsgType) Enum() *SystemMsgType {
	p := new(SystemMsgType)
	*p = x
	return p
}

func (x SystemMsgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SystemMsgType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_msg_Msg_proto_enumTypes[3].Descriptor()
}

func (SystemMsgType) Type() protoreflect.EnumType {
	return &file_api_proto_msg_Msg_proto_enumTypes[3]
}

func (x SystemMsgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SystemMsgType.Descriptor instead.
func (SystemMsgType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_msg_Msg_proto_rawDescGZIP(), []int{3}
}

//2.6.15. 接收系统消息
//消息子类型
type RecvSysMsgSubType int32

const (
	//无效
	RecvSysMsgSubType_Rsmst_Undefined RecvSysMsgSubType = 0
	//好友请求
	RecvSysMsgSubType_Rsmst_ApplyFriend RecvSysMsgSubType = 1
	//对方同意加你为好友
	RecvSysMsgSubType_Rsmst_PassFriendApply RecvSysMsgSubType = 2
	//对方拒绝添加好友
	RecvSysMsgSubType_Rsmst_RejectFriendApply RecvSysMsgSubType = 3
	//被删除好友
	RecvSysMsgSubType_Rsmst_DeleteFriend RecvSysMsgSubType = 4
	//申请加群请求
	RecvSysMsgSubType_Rsmst_ApplyJoinTeam RecvSysMsgSubType = 5
	//管理员同意加群申请
	RecvSysMsgSubType_Rsmst_PassTeamApply RecvSysMsgSubType = 6
	//管理员拒绝加群申请
	RecvSysMsgSubType_Rsmst_RejectTeamApply RecvSysMsgSubType = 7
	//邀请加群
	RecvSysMsgSubType_Rsmst_TeamInvite RecvSysMsgSubType = 8
	//用户同意群邀请
	RecvSysMsgSubType_Rsmst_PassTeamInvite RecvSysMsgSubType = 9
	//用户拒绝群邀请
	RecvSysMsgSubType_Rsmst_RejectTeamInvite RecvSysMsgSubType = 10
	//群被解散
	RecvSysMsgSubType_Rsmst_DismissTeam RecvSysMsgSubType = 11
	//被管理员踢出群
	RecvSysMsgSubType_Rsmst_KickOffTeam RecvSysMsgSubType = 12
	//主动退群
	RecvSysMsgSubType_Rsmst_QuitTeam RecvSysMsgSubType = 13
	//设置管理员
	RecvSysMsgSubType_Rsmst_GrantManager RecvSysMsgSubType = 14
	//取消管理员
	RecvSysMsgSubType_Rsmst_CancelManager RecvSysMsgSubType = 15
	//群已被回收
	RecvSysMsgSubType_Rsmst_RevokeTeam RecvSysMsgSubType = 16
	//转让群
	RecvSysMsgSubType_Rsmst_TransferTeam RecvSysMsgSubType = 17
	//更新群资料
	RecvSysMsgSubType_Rsmst_UpdateTeam RecvSysMsgSubType = 18
	//群成员禁言/解禁
	RecvSysMsgSubType_Rsmst_MuteTeamMember RecvSysMsgSubType = 19
	//设置群组禁言模式
	RecvSysMsgSubType_Rsmst_MuteTeam RecvSysMsgSubType = 20
	//管理员/群主修改群成员信息
	RecvSysMsgSubType_Rsmst_UpdateTeamMember RecvSysMsgSubType = 21
	//邀请入群前询问管理员是否同意
	RecvSysMsgSubType_Rsmst_CheckTeamInvite RecvSysMsgSubType = 22
	//自定义事件消息
	RecvSysMsgSubType_Rsmst_Customer RecvSysMsgSubType = 100
)

// Enum value maps for RecvSysMsgSubType.
var (
	RecvSysMsgSubType_name = map[int32]string{
		0:   "Rsmst_Undefined",
		1:   "Rsmst_ApplyFriend",
		2:   "Rsmst_PassFriendApply",
		3:   "Rsmst_RejectFriendApply",
		4:   "Rsmst_DeleteFriend",
		5:   "Rsmst_ApplyJoinTeam",
		6:   "Rsmst_PassTeamApply",
		7:   "Rsmst_RejectTeamApply",
		8:   "Rsmst_TeamInvite",
		9:   "Rsmst_PassTeamInvite",
		10:  "Rsmst_RejectTeamInvite",
		11:  "Rsmst_DismissTeam",
		12:  "Rsmst_KickOffTeam",
		13:  "Rsmst_QuitTeam",
		14:  "Rsmst_GrantManager",
		15:  "Rsmst_CancelManager",
		16:  "Rsmst_RevokeTeam",
		17:  "Rsmst_TransferTeam",
		18:  "Rsmst_UpdateTeam",
		19:  "Rsmst_MuteTeamMember",
		20:  "Rsmst_MuteTeam",
		21:  "Rsmst_UpdateTeamMember",
		22:  "Rsmst_CheckTeamInvite",
		100: "Rsmst_Customer",
	}
	RecvSysMsgSubType_value = map[string]int32{
		"Rsmst_Undefined":         0,
		"Rsmst_ApplyFriend":       1,
		"Rsmst_PassFriendApply":   2,
		"Rsmst_RejectFriendApply": 3,
		"Rsmst_DeleteFriend":      4,
		"Rsmst_ApplyJoinTeam":     5,
		"Rsmst_PassTeamApply":     6,
		"Rsmst_RejectTeamApply":   7,
		"Rsmst_TeamInvite":        8,
		"Rsmst_PassTeamInvite":    9,
		"Rsmst_RejectTeamInvite":  10,
		"Rsmst_DismissTeam":       11,
		"Rsmst_KickOffTeam":       12,
		"Rsmst_QuitTeam":          13,
		"Rsmst_GrantManager":      14,
		"Rsmst_CancelManager":     15,
		"Rsmst_RevokeTeam":        16,
		"Rsmst_TransferTeam":      17,
		"Rsmst_UpdateTeam":        18,
		"Rsmst_MuteTeamMember":    19,
		"Rsmst_MuteTeam":          20,
		"Rsmst_UpdateTeamMember":  21,
		"Rsmst_CheckTeamInvite":   22,
		"Rsmst_Customer":          100,
	}
)

func (x RecvSysMsgSubType) Enum() *RecvSysMsgSubType {
	p := new(RecvSysMsgSubType)
	*p = x
	return p
}

func (x RecvSysMsgSubType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RecvSysMsgSubType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_msg_Msg_proto_enumTypes[4].Descriptor()
}

func (RecvSysMsgSubType) Type() protoreflect.EnumType {
	return &file_api_proto_msg_Msg_proto_enumTypes[4]
}

func (x RecvSysMsgSubType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RecvSysMsgSubType.Descriptor instead.
func (RecvSysMsgSubType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_msg_Msg_proto_rawDescGZIP(), []int{4}
}

//2.6.15. 接收系统消息
//消息处理状态
type RecvSysMsgStatus int32

const (
	//无效
	RecvSysMsgStatus_Rsmsta_Undefined RecvSysMsgStatus = 0
	//已拒绝
	RecvSysMsgStatus_Rsmsta_Declined RecvSysMsgStatus = 1
	//已过期
	RecvSysMsgStatus_Rsmsta_Expired RecvSysMsgStatus = 2
	//已忽略
	RecvSysMsgStatus_Rsmsta_Ignored RecvSysMsgStatus = 3
	//未处理状态<默认>
	RecvSysMsgStatus_Rsmsta_Init RecvSysMsgStatus = 4
	//已通过验证
	RecvSysMsgStatus_Rsmsta_Passed RecvSysMsgStatus = 5
)

// Enum value maps for RecvSysMsgStatus.
var (
	RecvSysMsgStatus_name = map[int32]string{
		0: "Rsmsta_Undefined",
		1: "Rsmsta_Declined",
		2: "Rsmsta_Expired",
		3: "Rsmsta_Ignored",
		4: "Rsmsta_Init",
		5: "Rsmsta_Passed",
	}
	RecvSysMsgStatus_value = map[string]int32{
		"Rsmsta_Undefined": 0,
		"Rsmsta_Declined":  1,
		"Rsmsta_Expired":   2,
		"Rsmsta_Ignored":   3,
		"Rsmsta_Init":      4,
		"Rsmsta_Passed":    5,
	}
)

func (x RecvSysMsgStatus) Enum() *RecvSysMsgStatus {
	p := new(RecvSysMsgStatus)
	*p = x
	return p
}

func (x RecvSysMsgStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RecvSysMsgStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_msg_Msg_proto_enumTypes[5].Descriptor()
}

func (RecvSysMsgStatus) Type() protoreflect.EnumType {
	return &file_api_proto_msg_Msg_proto_enumTypes[5]
}

func (x RecvSysMsgStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RecvSysMsgStatus.Descriptor instead.
func (RecvSysMsgStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_msg_Msg_proto_rawDescGZIP(), []int{5}
}

//2.6.1
//消息内容-Image
type MsgImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//图片文件MD5值
	//是否必填-是
	Md5 string `protobuf:"bytes,1,opt,name=md5,proto3" json:"md5,omitempty"`
	//图片大小,单位:字节
	//是否必填-是
	Size uint64 `protobuf:"fixed64,2,opt,name=size,proto3" json:"size,omitempty"`
	//图片宽度
	//是否必填-是
	Width int32 `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	//图片长度
	//是否必填-是
	Height int32 `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	//图片访问地址
	//是否必填-是
	Url string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	//图片名称
	//是否必填-是
	Name string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	//图片类型
	//是否必填-是
	Ext string `protobuf:"bytes,7,opt,name=ext,proto3" json:"ext,omitempty"`
}

func (x *MsgImage) Reset() {
	*x = MsgImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msg_Msg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgImage) ProtoMessage() {}

func (x *MsgImage) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msg_Msg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgImage.ProtoReflect.Descriptor instead.
func (*MsgImage) Descriptor() ([]byte, []int) {
	return file_api_proto_msg_Msg_proto_rawDescGZIP(), []int{0}
}

func (x *MsgImage) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *MsgImage) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *MsgImage) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *MsgImage) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *MsgImage) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MsgImage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MsgImage) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

//2.6.1
//消息内容-Audio
type MsgAudio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//音频文件MD5值
	//是否必填-是
	Md5 string `protobuf:"bytes,1,opt,name=md5,proto3" json:"md5,omitempty"`
	//音频大小,单位:字节
	//是否必填-是
	Size uint64 `protobuf:"fixed64,2,opt,name=size,proto3" json:"size,omitempty"`
	//音频时长,单位:毫秒
	//是否必填-是
	Dur int32 `protobuf:"varint,3,opt,name=dur,proto3" json:"dur,omitempty"`
	//音频访问地址
	//是否必填-是
	Url string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	//音频类型
	//是否必填-是
	Ext string `protobuf:"bytes,5,opt,name=ext,proto3" json:"ext,omitempty"`
}

func (x *MsgAudio) Reset() {
	*x = MsgAudio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msg_Msg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAudio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAudio) ProtoMessage() {}

func (x *MsgAudio) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msg_Msg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAudio.ProtoReflect.Descriptor instead.
func (*MsgAudio) Descriptor() ([]byte, []int) {
	return file_api_proto_msg_Msg_proto_rawDescGZIP(), []int{1}
}

func (x *MsgAudio) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *MsgAudio) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *MsgAudio) GetDur() int32 {
	if x != nil {
		return x.Dur
	}
	return 0
}

func (x *MsgAudio) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MsgAudio) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

//2.6.1
//消息内容-Video
type MsgVideo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//视频文件MD5值
	//是否必填-是
	Md5 string `protobuf:"bytes,1,opt,name=md5,proto3" json:"md5,omitempty"`
	//视频大小,单位:字节
	//是否必填-是
	Size uint64 `protobuf:"fixed64,2,opt,name=size,proto3" json:"size,omitempty"`
	//视频时长,单位:毫秒
	//是否必填-是
	Dur int32 `protobuf:"varint,3,opt,name=dur,proto3" json:"dur,omitempty"`
	//视频访问地址
	//是否必填-是
	Url string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	//视频预览图
	//是否必填-是
	Preview string `protobuf:"bytes,5,opt,name=preview,proto3" json:"preview,omitempty"`
	//视频类型
	//是否必填-是
	Ext string `protobuf:"bytes,6,opt,name=ext,proto3" json:"ext,omitempty"`
}

func (x *MsgVideo) Reset() {
	*x = MsgVideo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msg_Msg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgVideo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgVideo) ProtoMessage() {}

func (x *MsgVideo) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msg_Msg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgVideo.ProtoReflect.Descriptor instead.
func (*MsgVideo) Descriptor() ([]byte, []int) {
	return file_api_proto_msg_Msg_proto_rawDescGZIP(), []int{2}
}

func (x *MsgVideo) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *MsgVideo) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *MsgVideo) GetDur() int32 {
	if x != nil {
		return x.Dur
	}
	return 0
}

func (x *MsgVideo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MsgVideo) GetPreview() string {
	if x != nil {
		return x.Preview
	}
	return ""
}

func (x *MsgVideo) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

//2.6.1
//消息内容-File
type MsgFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//文件MD5值
	//是否必填-是
	Md5 string `protobuf:"bytes,1,opt,name=md5,proto3" json:"md5,omitempty"`
	//文件大小,单位:字节
	//是否必填-是
	Size uint64 `protobuf:"fixed64,2,opt,name=size,proto3" json:"size,omitempty"`
	//文件访问地址
	//是否必填-是
	Url string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	//文件类型
	//是否必填-是
	Ext string `protobuf:"bytes,4,opt,name=ext,proto3" json:"ext,omitempty"`
}

func (x *MsgFile) Reset() {
	*x = MsgFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msg_Msg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgFile) ProtoMessage() {}

func (x *MsgFile) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msg_Msg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgFile.ProtoReflect.Descriptor instead.
func (*MsgFile) Descriptor() ([]byte, []int) {
	return file_api_proto_msg_Msg_proto_rawDescGZIP(), []int{3}
}

func (x *MsgFile) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *MsgFile) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *MsgFile) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MsgFile) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

//2.6.1
//消息类型-Geo地理位置
type MsgGeo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//地址信息
	//是否必填-是
	//示例:中国 广东省 广州市 天河区 体育西路167号
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	//纬度
	//是否必填-是
	//示例:23.135917958237425
	Lat float32 `protobuf:"fixed32,2,opt,name=lat,proto3" json:"lat,omitempty"`
	//经度
	//是否必填-是
	//示例:113.32090977288983
	Lng float32 `protobuf:"fixed32,3,opt,name=lng,proto3" json:"lng,omitempty"`
}

func (x *MsgGeo) Reset() {
	*x = MsgGeo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msg_Msg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGeo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGeo) ProtoMessage() {}

func (x *MsgGeo) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msg_Msg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgGeo.ProtoReflect.Descriptor instead.
func (*MsgGeo) Descriptor() ([]byte, []int) {
	return file_api_proto_msg_Msg_proto_rawDescGZIP(), []int{4}
}

func (x *MsgGeo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *MsgGeo) GetLat() float32 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *MsgGeo) GetLng() float32 {
	if x != nil {
		return x.Lng
	}
	return 0
}

//2.6.11. 拉取群组消息
type TeamNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//操作人
	//是否必填-是
	OpAccount string `protobuf:"bytes,1,opt,name=opAccount,proto3" json:"opAccount,omitempty"`
	//被操作群成员信息，参考群模块群成员信息结构
	//是否必填-否
	TeamMembers []*team.TeamMemberGet `protobuf:"bytes,2,rep,name=teamMembers,proto3" json:"teamMembers,omitempty"`
	//群信息
	//TeamProtocal.proto 中TeamField的索引值为key
	//value为字符串，值定义为枚举的则为对应枚举值的索引的字符串表示
	//value值如果为枚举则枚举定义在TeamProtocal中
	//是否必填-否
	TeamInfo map[int32]string `protobuf:"bytes,3,rep,name=teamInfo,proto3" json:"teamInfo,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TeamNotification) Reset() {
	*x = TeamNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msg_Msg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamNotification) ProtoMessage() {}

func (x *TeamNotification) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msg_Msg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamNotification.ProtoReflect.Descriptor instead.
func (*TeamNotification) Descriptor() ([]byte, []int) {
	return file_api_proto_msg_Msg_proto_rawDescGZIP(), []int{5}
}

func (x *TeamNotification) GetOpAccount() string {
	if x != nil {
		return x.OpAccount
	}
	return ""
}

func (x *TeamNotification) GetTeamMembers() []*team.TeamMemberGet {
	if x != nil {
		return x.TeamMembers
	}
	return nil
}

func (x *TeamNotification) GetTeamInfo() map[int32]string {
	if x != nil {
		return x.TeamInfo
	}
	return nil
}

var File_api_proto_msg_Msg_proto protoreflect.FileDescriptor

var file_api_proto_msg_Msg_proto_rawDesc = []byte{
	0x0a, 0x17, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x73, 0x67, 0x2f,
	0x4d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x6d, 0x73, 0x67, 0x1a, 0x19,
	0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x54,
	0x65, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x96, 0x01, 0x0a, 0x08, 0x4d, 0x73,
	0x67, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65,
	0x78, 0x74, 0x22, 0x66, 0x0a, 0x08, 0x4d, 0x73, 0x67, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x75, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x64, 0x75, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x22, 0x80, 0x01, 0x0a, 0x08, 0x4d,
	0x73, 0x67, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x64, 0x75, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x75, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x22, 0x53, 0x0a,
	0x07, 0x4d, 0x73, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65,
	0x78, 0x74, 0x22, 0x46, 0x0a, 0x06, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x6f, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x22, 0x85, 0x02, 0x0a, 0x10, 0x54,
	0x65, 0x61, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x45, 0x0a,
	0x0b, 0x74, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d,
	0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x0b, 0x74, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x12, 0x4f, 0x0a, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c,
	0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x54, 0x65, 0x61,
	0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x65,
	0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x74, 0x65, 0x61,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x3b, 0x0a, 0x0d, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x2a, 0x5b, 0x0a, 0x05, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x53,
	0x63, 0x5f, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x53, 0x63, 0x5f, 0x43, 0x32, 0x43, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x63, 0x5f,
	0x43, 0x32, 0x47, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x63, 0x5f, 0x53, 0x59, 0x53, 0x54,
	0x45, 0x4d, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x63, 0x5f, 0x50, 0x32, 0x50, 0x10, 0x04,
	0x12, 0x0d, 0x0a, 0x09, 0x53, 0x63, 0x5f, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x10, 0x05, 0x2a,
	0xa0, 0x01, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x4d,
	0x74, 0x5f, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x4d, 0x74, 0x5f, 0x54, 0x65, 0x78, 0x74, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x74,
	0x5f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x74, 0x5f, 0x41,
	0x75, 0x64, 0x69, 0x6f, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x74, 0x5f, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x74, 0x5f, 0x46, 0x69, 0x6c, 0x65, 0x10,
	0x05, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x74, 0x5f, 0x47, 0x65, 0x6f, 0x10, 0x06, 0x12, 0x13, 0x0a,
	0x0f, 0x4d, 0x74, 0x5f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x74, 0x5f, 0x41, 0x76, 0x43, 0x68, 0x61, 0x74, 0x10,
	0x08, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x74, 0x5f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x10, 0x64, 0x2a, 0xb1, 0x02, 0x0a, 0x0e, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x73, 0x67, 0x53, 0x75,
	0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x6d, 0x73, 0x5f, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x6d, 0x73, 0x5f,
	0x50, 0x61, 0x73, 0x73, 0x54, 0x65, 0x61, 0x6d, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x10, 0x01, 0x12,
	0x14, 0x0a, 0x10, 0x54, 0x6d, 0x73, 0x5f, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x6d, 0x73, 0x5f, 0x4b, 0x69, 0x63,
	0x6b, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x54,
	0x6d, 0x73, 0x5f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x65,
	0x61, 0x6d, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x6d, 0x73, 0x5f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x05, 0x12, 0x18, 0x0a, 0x14,
	0x54, 0x6d, 0x73, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x6d, 0x73, 0x5f, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x10, 0x07, 0x12, 0x15, 0x0a, 0x11,
	0x54, 0x6d, 0x73, 0x5f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x10, 0x08, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x6d, 0x73, 0x5f, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x10, 0x09, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x6d,
	0x73, 0x5f, 0x4d, 0x75, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x10, 0x0a, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x6d, 0x73, 0x5f, 0x4d, 0x75, 0x74, 0x65, 0x54, 0x65,
	0x61, 0x6d, 0x10, 0x0b, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x6d, 0x73, 0x5f, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x10, 0x64, 0x2a, 0x3c, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x6d, 0x74, 0x5f, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x6d,
	0x74, 0x5f, 0x53, 0x32, 0x43, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x6d, 0x74, 0x5f, 0x53,
	0x32, 0x47, 0x10, 0x02, 0x2a, 0xd8, 0x04, 0x0a, 0x11, 0x52, 0x65, 0x63, 0x76, 0x53, 0x79, 0x73,
	0x4d, 0x73, 0x67, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x73,
	0x6d, 0x73, 0x74, 0x5f, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x00, 0x12,
	0x15, 0x0a, 0x11, 0x52, 0x73, 0x6d, 0x73, 0x74, 0x5f, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x73, 0x6d, 0x73, 0x74, 0x5f,
	0x50, 0x61, 0x73, 0x73, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x10,
	0x02, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x73, 0x6d, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x10, 0x03, 0x12, 0x16,
	0x0a, 0x12, 0x52, 0x73, 0x6d, 0x73, 0x74, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x73, 0x6d, 0x73, 0x74, 0x5f,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x10, 0x05, 0x12,
	0x17, 0x0a, 0x13, 0x52, 0x73, 0x6d, 0x73, 0x74, 0x5f, 0x50, 0x61, 0x73, 0x73, 0x54, 0x65, 0x61,
	0x6d, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x10, 0x06, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x73, 0x6d, 0x73,
	0x74, 0x5f, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x10, 0x07, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x73, 0x6d, 0x73, 0x74, 0x5f, 0x54, 0x65, 0x61,
	0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x10, 0x08, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x73, 0x6d,
	0x73, 0x74, 0x5f, 0x50, 0x61, 0x73, 0x73, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x10, 0x09, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x73, 0x6d, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x10, 0x0a, 0x12,
	0x15, 0x0a, 0x11, 0x52, 0x73, 0x6d, 0x73, 0x74, 0x5f, 0x44, 0x69, 0x73, 0x6d, 0x69, 0x73, 0x73,
	0x54, 0x65, 0x61, 0x6d, 0x10, 0x0b, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x73, 0x6d, 0x73, 0x74, 0x5f,
	0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x66, 0x66, 0x54, 0x65, 0x61, 0x6d, 0x10, 0x0c, 0x12, 0x12, 0x0a,
	0x0e, 0x52, 0x73, 0x6d, 0x73, 0x74, 0x5f, 0x51, 0x75, 0x69, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x10,
	0x0d, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x73, 0x6d, 0x73, 0x74, 0x5f, 0x47, 0x72, 0x61, 0x6e, 0x74,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x10, 0x0e, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x73, 0x6d,
	0x73, 0x74, 0x5f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x10, 0x0f, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x73, 0x6d, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x76, 0x6f,
	0x6b, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x10, 0x10, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x73, 0x6d, 0x73,
	0x74, 0x5f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x10, 0x11,
	0x12, 0x14, 0x0a, 0x10, 0x52, 0x73, 0x6d, 0x73, 0x74, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x65, 0x61, 0x6d, 0x10, 0x12, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x73, 0x6d, 0x73, 0x74, 0x5f,
	0x4d, 0x75, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x10, 0x13,
	0x12, 0x12, 0x0a, 0x0e, 0x52, 0x73, 0x6d, 0x73, 0x74, 0x5f, 0x4d, 0x75, 0x74, 0x65, 0x54, 0x65,
	0x61, 0x6d, 0x10, 0x14, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x73, 0x6d, 0x73, 0x74, 0x5f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x10, 0x15,
	0x12, 0x19, 0x0a, 0x15, 0x52, 0x73, 0x6d, 0x73, 0x74, 0x5f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54,
	0x65, 0x61, 0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x10, 0x16, 0x12, 0x12, 0x0a, 0x0e, 0x52,
	0x73, 0x6d, 0x73, 0x74, 0x5f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x10, 0x64, 0x2a,
	0x89, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x76, 0x53, 0x79, 0x73, 0x4d, 0x73, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x73, 0x6d, 0x73, 0x74, 0x61, 0x5f, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x73,
	0x6d, 0x73, 0x74, 0x61, 0x5f, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x01, 0x12,
	0x12, 0x0a, 0x0e, 0x52, 0x73, 0x6d, 0x73, 0x74, 0x61, 0x5f, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x64, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x73, 0x6d, 0x73, 0x74, 0x61, 0x5f, 0x49, 0x67,
	0x6e, 0x6f, 0x72, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x73, 0x6d, 0x73, 0x74,
	0x61, 0x5f, 0x49, 0x6e, 0x69, 0x74, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x73, 0x6d, 0x73,
	0x74, 0x61, 0x5f, 0x50, 0x61, 0x73, 0x73, 0x65, 0x64, 0x10, 0x05, 0x42, 0x29, 0x5a, 0x27, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x6d, 0x73, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_msg_Msg_proto_rawDescOnce sync.Once
	file_api_proto_msg_Msg_proto_rawDescData = file_api_proto_msg_Msg_proto_rawDesc
)

func file_api_proto_msg_Msg_proto_rawDescGZIP() []byte {
	file_api_proto_msg_Msg_proto_rawDescOnce.Do(func() {
		file_api_proto_msg_Msg_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_msg_Msg_proto_rawDescData)
	})
	return file_api_proto_msg_Msg_proto_rawDescData
}

var file_api_proto_msg_Msg_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_api_proto_msg_Msg_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_api_proto_msg_Msg_proto_goTypes = []interface{}{
	(Scene)(0),                 // 0: cloud.lianmi.im.msg.Scene
	(MsgType)(0),               // 1: cloud.lianmi.im.msg.MsgType
	(TeamMsgSubType)(0),        // 2: cloud.lianmi.im.msg.TeamMsgSubType
	(SystemMsgType)(0),         // 3: cloud.lianmi.im.msg.SystemMsgType
	(RecvSysMsgSubType)(0),     // 4: cloud.lianmi.im.msg.RecvSysMsgSubType
	(RecvSysMsgStatus)(0),      // 5: cloud.lianmi.im.msg.RecvSysMsgStatus
	(*MsgImage)(nil),           // 6: cloud.lianmi.im.msg.MsgImage
	(*MsgAudio)(nil),           // 7: cloud.lianmi.im.msg.MsgAudio
	(*MsgVideo)(nil),           // 8: cloud.lianmi.im.msg.MsgVideo
	(*MsgFile)(nil),            // 9: cloud.lianmi.im.msg.MsgFile
	(*MsgGeo)(nil),             // 10: cloud.lianmi.im.msg.MsgGeo
	(*TeamNotification)(nil),   // 11: cloud.lianmi.im.msg.TeamNotification
	nil,                        // 12: cloud.lianmi.im.msg.TeamNotification.TeamInfoEntry
	(*team.TeamMemberGet)(nil), // 13: cloud.lianmi.im.team.TeamMemberGet
}
var file_api_proto_msg_Msg_proto_depIdxs = []int32{
	13, // 0: cloud.lianmi.im.msg.TeamNotification.teamMembers:type_name -> cloud.lianmi.im.team.TeamMemberGet
	12, // 1: cloud.lianmi.im.msg.TeamNotification.teamInfo:type_name -> cloud.lianmi.im.msg.TeamNotification.TeamInfoEntry
	2,  // [2:2] is the sub-list for method output_type
	2,  // [2:2] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_api_proto_msg_Msg_proto_init() }
func file_api_proto_msg_Msg_proto_init() {
	if File_api_proto_msg_Msg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msg_Msg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msg_Msg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAudio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msg_Msg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgVideo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msg_Msg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msg_Msg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGeo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msg_Msg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_msg_Msg_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_proto_msg_Msg_proto_goTypes,
		DependencyIndexes: file_api_proto_msg_Msg_proto_depIdxs,
		EnumInfos:         file_api_proto_msg_Msg_proto_enumTypes,
		MessageInfos:      file_api_proto_msg_Msg_proto_msgTypes,
	}.Build()
	File_api_proto_msg_Msg_proto = out.File
	file_api_proto_msg_Msg_proto_rawDesc = nil
	file_api_proto_msg_Msg_proto_goTypes = nil
	file_api_proto_msg_Msg_proto_depIdxs = nil
}
