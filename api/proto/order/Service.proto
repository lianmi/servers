syntax = "proto3";
import "api/proto/global/Global.proto";
import "api/proto/order/Product.proto"; 

package cloud.lianmi.im.order;
option go_package = "github.com/lianmi/servers/api/proto/order";


//Restful 接口  必须admin的身份登录才能调用 
service ProductOrders {
    //查询通用商品列表
    rpc GetGeneralProducts (GeneralProductsReq) returns (GeneralProductsRsp);

    //获取单一通用商品详情 
    rpc GetGeneralProductInfo (GetGeneralProductInfoReq) returns (GetGeneralProductInfoRsp);

    //添加通用商品
    rpc AddGeneralProduct (AddGeneralProductReq) returns (AddGeneralProductRsp);

    //更新update通用商品
    rpc UpdateGeneralProduct (UpdateGeneralProductReq) returns (UpdateGeneralProductRsp);

    //删除通用商品
    rpc DeleteGeneralProduct (DeleteGeneralProductReq) returns (DeleteGeneralProductRsp);

}

message RespHeader {
    int32 errCode = 1; //错误码  默认是0为成功， 非0-失败
    string errMsg = 2; //错误描述
}

//=== 获取通用商品列表 === //
message GeneralProductsReq {
    //商品种类,=0 全部 
    global.ProductType productType=1;

    //商品名称搜索关键字
    string productNameKey =2;

    //页数,第几页
    //默认1
    //是否必填-否
    int32 page = 3; // [default=1];

    //每页成员数量
    //默认100,最大只允许100
    //是否必填-否
    int32 pageSize = 4; // [default=100];
}

message GeneralProductsRsp {
    RespHeader status  = 1;
    
    //列表 
    repeated GeneralProduct generalProducts =2;
    
    //总页数，按pageSize计算而来
    int32 total = 3; 
}

//=== 获取单一通用商品详情 === //
message GetGeneralProductInfoReq {
    //商品ID
    //是否必须-是
    string ProductId = 1;

}

message GetGeneralProductInfoRsp {
    RespHeader status  = 1;
    
    //通用商品详情 
    GeneralProduct generalProduct =2;

}

//=== 添加通用商品 === //
message AddGeneralProductReq {
    //商品详情 
    //是否必须-是
    GeneralProduct generalProduct = 1;

}

message AddGeneralProductRsp {
    RespHeader status  = 1;

}

//=== 更新通用商品 === //
message UpdateGeneralProductReq {
    //商品详情 
    //是否必须-是
    GeneralProduct generalProduct = 1;

}

message UpdateGeneralProductRsp {
    RespHeader status  = 1;

}

//=== 删除通用商品 === //
message DeleteGeneralProductReq {
    //商品ID
    //是否必须-是
    string ProductId = 1;

}

message DeleteGeneralProductRsp {
    RespHeader status  = 1;

}

//获取各种彩票的开售及停售时刻
message QueryLotterySaleTimesRsp {
    //
    int32 lotteryType =1;
     // LotteryName  string `json:"lotteryName" form:"lotteryName" gorm:"column:lottery_name;comment:;type:varchar(191);size:191;"`
     // SaleStartWeek  string `json:"saleStartWeek" form:"saleStartWeek" gorm:"column:sale_start_week;comment:星期几开始， 以半角逗号隔开;type:varchar(191);size:191;"`
     // SaleStartTime  string `json:"saleStartTime" form:"saleStartTime" gorm:"column:sale_start_time;comment:开售时分秒, 22:0:00;type:varchar(191);size:191;"`
     // SaleEndWeek  string `json:"saleEndWeek" form:"saleEndWeek" gorm:"column:sale_end_week;comment:停售星期几，以半角逗号隔开 ;type:varchar(191);size:191;"`
     // SaleEndTime  string `json:"saleEndTime" form:"saleEndTime" gorm:"column:sale_end_time;comment:停售时分秒, 22:0:00;type:varchar(191);size:191;"`
     // Holidays  string `json:"holidays" form:"holidays" gorm:"column:holidays;comment:;type:varchar(191);size:191;"`
     // IsActive  *bool 
}   