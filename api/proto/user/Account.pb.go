// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.7.0
// source: api/proto/user/Account.proto

package user

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//性别枚举定义
type Gender int32

const (
	Gender_Sex_Unknown Gender = 0
	Gender_Sex_Male    Gender = 1
	Gender_Sex_Female  Gender = 2
)

// Enum value maps for Gender.
var (
	Gender_name = map[int32]string{
		0: "Sex_Unknown",
		1: "Sex_Male",
		2: "Sex_Female",
	}
	Gender_value = map[string]int32{
		"Sex_Unknown": 0,
		"Sex_Male":    1,
		"Sex_Female":  2,
	}
)

func (x Gender) Enum() *Gender {
	p := new(Gender)
	*p = x
	return p
}

func (x Gender) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Gender) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_user_Account_proto_enumTypes[0].Descriptor()
}

func (Gender) Type() protoreflect.EnumType {
	return &file_api_proto_user_Account_proto_enumTypes[0]
}

func (x Gender) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Gender.Descriptor instead.
func (Gender) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_user_Account_proto_rawDescGZIP(), []int{0}
}

//更新当前用户资料--可以单独更新某些字段
//User字段名枚举定义
type UserField int32

const (
	UserField_Af_Undefined UserField = 0
	UserField_Af_Nick      UserField = 1
	UserField_Af_Gender    UserField = 2
	UserField_Af_Avatar    UserField = 3
	UserField_Af_Birth     UserField = 4
	UserField_Af_Sign      UserField = 5
	UserField_Af_Tel       UserField = 6
	UserField_Af_Email     UserField = 7
	UserField_Af_Ex        UserField = 8
	UserField_Af_AllowType UserField = 9
)

// Enum value maps for UserField.
var (
	UserField_name = map[int32]string{
		0: "Af_Undefined",
		1: "Af_Nick",
		2: "Af_Gender",
		3: "Af_Avatar",
		4: "Af_Birth",
		5: "Af_Sign",
		6: "Af_Tel",
		7: "Af_Email",
		8: "Af_Ex",
		9: "Af_AllowType",
	}
	UserField_value = map[string]int32{
		"Af_Undefined": 0,
		"Af_Nick":      1,
		"Af_Gender":    2,
		"Af_Avatar":    3,
		"Af_Birth":     4,
		"Af_Sign":      5,
		"Af_Tel":       6,
		"Af_Email":     7,
		"Af_Ex":        8,
		"Af_AllowType": 9,
	}
)

func (x UserField) Enum() *UserField {
	p := new(UserField)
	*p = x
	return p
}

func (x UserField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserField) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_user_Account_proto_enumTypes[1].Descriptor()
}

func (UserField) Type() protoreflect.EnumType {
	return &file_api_proto_user_Account_proto_enumTypes[1]
}

func (x UserField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserField.Descriptor instead.
func (UserField) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_user_Account_proto_rawDescGZIP(), []int{1}
}

//账号类型
type UserType int32

const (
	UserType_Ut_Undefined UserType = 0
	//一般用户
	UserType_Ut_Normal UserType = 1
	//网点用户
	UserType_Ut_Business UserType = 2
	//系统用户, 例如admin
	UserType_Ut_System UserType = 3
)

// Enum value maps for UserType.
var (
	UserType_name = map[int32]string{
		0: "Ut_Undefined",
		1: "Ut_Normal",
		2: "Ut_Business",
		3: "Ut_System",
	}
	UserType_value = map[string]int32{
		"Ut_Undefined": 0,
		"Ut_Normal":    1,
		"Ut_Business":  2,
		"Ut_System":    3,
	}
)

func (x UserType) Enum() *UserType {
	p := new(UserType)
	*p = x
	return p
}

func (x UserType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_user_Account_proto_enumTypes[2].Descriptor()
}

func (UserType) Type() protoreflect.EnumType {
	return &file_api_proto_user_Account_proto_enumTypes[2]
}

func (x UserType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserType.Descriptor instead.
func (UserType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_user_Account_proto_rawDescGZIP(), []int{2}
}

type RespHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int32  `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode,omitempty"` //错误码  默认是0为成功， 非0-失败
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`    //错误描述
}

func (x *RespHeader) Reset() {
	*x = RespHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_user_Account_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespHeader) ProtoMessage() {}

func (x *RespHeader) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_user_Account_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespHeader.ProtoReflect.Descriptor instead.
func (*RespHeader) Descriptor() ([]byte, []int) {
	return file_api_proto_user_Account_proto_rawDescGZIP(), []int{0}
}

func (x *RespHeader) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *RespHeader) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

//=== 用户信息 === //
type UserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UserReq) Reset() {
	*x = UserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_user_Account_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserReq) ProtoMessage() {}

func (x *UserReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_user_Account_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserReq.ProtoReflect.Descriptor instead.
func (*UserReq) Descriptor() ([]byte, []int) {
	return file_api_proto_user_Account_proto_rawDescGZIP(), []int{1}
}

func (x *UserReq) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type UserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *RespHeader `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	User   *User       `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UserResp) Reset() {
	*x = UserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_user_Account_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResp) ProtoMessage() {}

func (x *UserResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_user_Account_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResp.ProtoReflect.Descriptor instead.
func (*UserResp) Descriptor() ([]byte, []int) {
	return file_api_proto_user_Account_proto_rawDescGZIP(), []int{2}
}

func (x *UserResp) GetStatus() *RespHeader {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *UserResp) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

//用户信息
type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                              //ID
	Username      string               `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`                                   //账号 是否必填-是
	Passwd        string               `protobuf:"bytes,3,opt,name=passwd,proto3" json:"passwd,omitempty"`                                       //密码 是否必填-是
	Gender        Gender               `protobuf:"varint,4,opt,name=gender,proto3,enum=cc.lianmi.im.user.Gender" json:"gender,omitempty"`        //性别 是否必填-是
	Avatar        string               `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`                                       //用户头像 是否必填-否 示例:http://123.com/456.png
	Label         string               `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`                                         //用户标签 是否必填-否 示例:
	Mobile        string               `protobuf:"bytes,7,opt,name=mobile,proto3" json:"mobile,omitempty"`                                       //用户手机号 是否必填-否 示例:86+13333333333
	Email         string               `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`                                         //用户邮箱 是否必填-否 示例:
	Extend        string               `protobuf:"bytes,9,opt,name=extend,proto3" json:"extend,omitempty"`                                       //扩展字段,JSON格式 是否必填-否
	UserType      UserType             `protobuf:"varint,10,opt,name=userType,proto3,enum=cc.lianmi.im.user.UserType" json:"userType,omitempty"` //账户类型 是否必填-是
	Address       string               `protobuf:"bytes,11,opt,name=address,proto3" json:"address,omitempty"`                                    //地址，如果是商户，则必填
	ContactPerson string               `protobuf:"bytes,12,opt,name=contactPerson,proto3" json:"contactPerson,omitempty"`                        //联系人，如果是商户，则必填
	Introductory  string               `protobuf:"bytes,13,opt,name=introductory,proto3" json:"introductory,omitempty"`                          //用户简介 是否必填-否
	CreatedAt     *timestamp.Timestamp `protobuf:"bytes,14,opt,name=createdAt,proto3" json:"createdAt,omitempty"`                                //用户注册时间,Unix时间戳
	UpdatedAt     *timestamp.Timestamp `protobuf:"bytes,15,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`                                //用户资料最后更新时间,Unix时间戳
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_user_Account_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_user_Account_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_api_proto_user_Account_proto_rawDescGZIP(), []int{3}
}

func (x *User) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetPasswd() string {
	if x != nil {
		return x.Passwd
	}
	return ""
}

func (x *User) GetGender() Gender {
	if x != nil {
		return x.Gender
	}
	return Gender_Sex_Unknown
}

func (x *User) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *User) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *User) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetExtend() string {
	if x != nil {
		return x.Extend
	}
	return ""
}

func (x *User) GetUserType() UserType {
	if x != nil {
		return x.UserType
	}
	return UserType_Ut_Undefined
}

func (x *User) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *User) GetContactPerson() string {
	if x != nil {
		return x.ContactPerson
	}
	return ""
}

func (x *User) GetIntroductory() string {
	if x != nil {
		return x.Introductory
	}
	return ""
}

func (x *User) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *User) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

//==== 注册 ===//
type RegisterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User    *User  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	SmsCode string `protobuf:"bytes,2,opt,name=smsCode,proto3" json:"smsCode,omitempty"` //短信验证码
}

func (x *RegisterReq) Reset() {
	*x = RegisterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_user_Account_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterReq) ProtoMessage() {}

func (x *RegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_user_Account_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterReq.ProtoReflect.Descriptor instead.
func (*RegisterReq) Descriptor() ([]byte, []int) {
	return file_api_proto_user_Account_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterReq) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *RegisterReq) GetSmsCode() string {
	if x != nil {
		return x.SmsCode
	}
	return ""
}

type RegisterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      *RespHeader `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Accesstoken string      `protobuf:"bytes,2,opt,name=accesstoken,proto3" json:"accesstoken,omitempty"` //注册成功后返回token
}

func (x *RegisterResp) Reset() {
	*x = RegisterResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_user_Account_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResp) ProtoMessage() {}

func (x *RegisterResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_user_Account_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResp.ProtoReflect.Descriptor instead.
func (*RegisterResp) Descriptor() ([]byte, []int) {
	return file_api_proto_user_Account_proto_rawDescGZIP(), []int{5}
}

func (x *RegisterResp) GetStatus() *RespHeader {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *RegisterResp) GetAccesstoken() string {
	if x != nil {
		return x.Accesstoken
	}
	return ""
}

//=== 获取短信验证码 ===//
type SmsCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mobile string `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"` //手机号码
}

func (x *SmsCodeReq) Reset() {
	*x = SmsCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_user_Account_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmsCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmsCodeReq) ProtoMessage() {}

func (x *SmsCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_user_Account_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmsCodeReq.ProtoReflect.Descriptor instead.
func (*SmsCodeReq) Descriptor() ([]byte, []int) {
	return file_api_proto_user_Account_proto_rawDescGZIP(), []int{6}
}

func (x *SmsCodeReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

type SmsCodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  *RespHeader `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	SmsCode string      `protobuf:"bytes,2,opt,name=smsCode,proto3" json:"smsCode,omitempty"` //短信验证码
}

func (x *SmsCodeResp) Reset() {
	*x = SmsCodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_user_Account_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmsCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmsCodeResp) ProtoMessage() {}

func (x *SmsCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_user_Account_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmsCodeResp.ProtoReflect.Descriptor instead.
func (*SmsCodeResp) Descriptor() ([]byte, []int) {
	return file_api_proto_user_Account_proto_rawDescGZIP(), []int{7}
}

func (x *SmsCodeResp) GetStatus() *RespHeader {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *SmsCodeResp) GetSmsCode() string {
	if x != nil {
		return x.SmsCode
	}
	return ""
}

//==== 根据用户名及密码登录 ===//
type LoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` //用户名
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` //MD5加密过的
	SmsCode  string `protobuf:"bytes,3,opt,name=smsCode,proto3" json:"smsCode,omitempty"`   //短信验证码
}

func (x *LoginReq) Reset() {
	*x = LoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_user_Account_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReq) ProtoMessage() {}

func (x *LoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_user_Account_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReq.ProtoReflect.Descriptor instead.
func (*LoginReq) Descriptor() ([]byte, []int) {
	return file_api_proto_user_Account_proto_rawDescGZIP(), []int{8}
}

func (x *LoginReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginReq) GetSmsCode() string {
	if x != nil {
		return x.SmsCode
	}
	return ""
}

type LoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      *RespHeader `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Accesstoken string      `protobuf:"bytes,2,opt,name=accesstoken,proto3" json:"accesstoken,omitempty"` //用户token, jwt
}

func (x *LoginResp) Reset() {
	*x = LoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_user_Account_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResp) ProtoMessage() {}

func (x *LoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_user_Account_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResp.ProtoReflect.Descriptor instead.
func (*LoginResp) Descriptor() ([]byte, []int) {
	return file_api_proto_user_Account_proto_rawDescGZIP(), []int{9}
}

func (x *LoginResp) GetStatus() *RespHeader {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *LoginResp) GetAccesstoken() string {
	if x != nil {
		return x.Accesstoken
	}
	return ""
}

//==== 修改密码 ===//
type ChanPasswdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oldpasswd string `protobuf:"bytes,1,opt,name=oldpasswd,proto3" json:"oldpasswd,omitempty"` //旧密码
	SmsCode   string `protobuf:"bytes,2,opt,name=smsCode,proto3" json:"smsCode,omitempty"`     //短信验证码
	Password  string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`   //新密码
}

func (x *ChanPasswdReq) Reset() {
	*x = ChanPasswdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_user_Account_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChanPasswdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChanPasswdReq) ProtoMessage() {}

func (x *ChanPasswdReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_user_Account_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChanPasswdReq.ProtoReflect.Descriptor instead.
func (*ChanPasswdReq) Descriptor() ([]byte, []int) {
	return file_api_proto_user_Account_proto_rawDescGZIP(), []int{10}
}

func (x *ChanPasswdReq) GetOldpasswd() string {
	if x != nil {
		return x.Oldpasswd
	}
	return ""
}

func (x *ChanPasswdReq) GetSmsCode() string {
	if x != nil {
		return x.SmsCode
	}
	return ""
}

func (x *ChanPasswdReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type ChanPasswdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *RespHeader `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ChanPasswdResp) Reset() {
	*x = ChanPasswdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_user_Account_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChanPasswdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChanPasswdResp) ProtoMessage() {}

func (x *ChanPasswdResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_user_Account_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChanPasswdResp.ProtoReflect.Descriptor instead.
func (*ChanPasswdResp) Descriptor() ([]byte, []int) {
	return file_api_proto_user_Account_proto_rawDescGZIP(), []int{11}
}

func (x *ChanPasswdResp) GetStatus() *RespHeader {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_api_proto_user_Account_proto protoreflect.FileDescriptor

var file_api_proto_user_Account_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11,
	0x63, 0x63, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x3e, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72,
	0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d,
	0x73, 0x67, 0x22, 0x1d, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x22, 0x6e, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x63, 0x63, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x63, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69,
	0x6d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x22, 0x82, 0x04, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64, 0x12, 0x31,
	0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19,
	0x2e, 0x63, 0x63, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x37, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x63, 0x63, 0x2e, 0x6c, 0x69, 0x61,
	0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x22,
	0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x54, 0x0a, 0x0b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x63, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e,
	0x69, 0x6d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x67, 0x0a, 0x0c,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63,
	0x63, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x24, 0x0a, 0x0a, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x22, 0x5e, 0x0a, 0x0b, 0x53,
	0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x63, 0x2e,
	0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x5c, 0x0a, 0x08, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x64, 0x0a, 0x09, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x63, 0x2e, 0x6c, 0x69, 0x61, 0x6e,
	0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x63, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x6c, 0x64, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x6c, 0x64, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x22, 0x47, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x63, 0x2e, 0x6c, 0x69, 0x61, 0x6e,
	0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0x37, 0x0a,
	0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x65, 0x78, 0x5f, 0x55,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x65, 0x78, 0x5f,
	0x4d, 0x61, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x65, 0x78, 0x5f, 0x46, 0x65,
	0x6d, 0x61, 0x6c, 0x65, 0x10, 0x02, 0x2a, 0x9a, 0x01, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x66, 0x5f, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x66, 0x5f, 0x4e, 0x69, 0x63,
	0x6b, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x66, 0x5f, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x66, 0x5f, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x10,
	0x03, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x66, 0x5f, 0x42, 0x69, 0x72, 0x74, 0x68, 0x10, 0x04, 0x12,
	0x0b, 0x0a, 0x07, 0x41, 0x66, 0x5f, 0x53, 0x69, 0x67, 0x6e, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06,
	0x41, 0x66, 0x5f, 0x54, 0x65, 0x6c, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x66, 0x5f, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x10, 0x07, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x66, 0x5f, 0x45, 0x78, 0x10,
	0x08, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x66, 0x5f, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70,
	0x65, 0x10, 0x09, 0x2a, 0x4b, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x10, 0x0a, 0x0c, 0x55, 0x74, 0x5f, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x74, 0x5f, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10, 0x01,
	0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x74, 0x5f, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x10,
	0x02, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x74, 0x5f, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x10, 0x03,
	0x32, 0x81, 0x03, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x42, 0x0a, 0x07, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x63, 0x63, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d,
	0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x1a, 0x1b, 0x2e, 0x63, 0x63, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50,
	0x0a, 0x0f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1d, 0x2e, 0x63, 0x63, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x1e, 0x2e, 0x63, 0x63, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x4b, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x63,
	0x63, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x63,
	0x63, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a,
	0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1b, 0x2e, 0x63, 0x63, 0x2e, 0x6c, 0x69, 0x61, 0x6e,
	0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x63, 0x63, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e,
	0x69, 0x6d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x51, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x64, 0x12,
	0x20, 0x2e, 0x63, 0x63, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x21, 0x2e, 0x63, 0x63, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2e, 0x69, 0x6d,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6c, 0x69, 0x61, 0x6e, 0x6d, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_user_Account_proto_rawDescOnce sync.Once
	file_api_proto_user_Account_proto_rawDescData = file_api_proto_user_Account_proto_rawDesc
)

func file_api_proto_user_Account_proto_rawDescGZIP() []byte {
	file_api_proto_user_Account_proto_rawDescOnce.Do(func() {
		file_api_proto_user_Account_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_user_Account_proto_rawDescData)
	})
	return file_api_proto_user_Account_proto_rawDescData
}

var file_api_proto_user_Account_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_api_proto_user_Account_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_proto_user_Account_proto_goTypes = []interface{}{
	(Gender)(0),                 // 0: cc.lianmi.im.user.Gender
	(UserField)(0),              // 1: cc.lianmi.im.user.UserField
	(UserType)(0),               // 2: cc.lianmi.im.user.UserType
	(*RespHeader)(nil),          // 3: cc.lianmi.im.user.RespHeader
	(*UserReq)(nil),             // 4: cc.lianmi.im.user.UserReq
	(*UserResp)(nil),            // 5: cc.lianmi.im.user.UserResp
	(*User)(nil),                // 6: cc.lianmi.im.user.User
	(*RegisterReq)(nil),         // 7: cc.lianmi.im.user.RegisterReq
	(*RegisterResp)(nil),        // 8: cc.lianmi.im.user.RegisterResp
	(*SmsCodeReq)(nil),          // 9: cc.lianmi.im.user.SmsCodeReq
	(*SmsCodeResp)(nil),         // 10: cc.lianmi.im.user.SmsCodeResp
	(*LoginReq)(nil),            // 11: cc.lianmi.im.user.LoginReq
	(*LoginResp)(nil),           // 12: cc.lianmi.im.user.LoginResp
	(*ChanPasswdReq)(nil),       // 13: cc.lianmi.im.user.ChanPasswdReq
	(*ChanPasswdResp)(nil),      // 14: cc.lianmi.im.user.ChanPasswdResp
	(*timestamp.Timestamp)(nil), // 15: google.protobuf.Timestamp
}
var file_api_proto_user_Account_proto_depIdxs = []int32{
	3,  // 0: cc.lianmi.im.user.UserResp.status:type_name -> cc.lianmi.im.user.RespHeader
	6,  // 1: cc.lianmi.im.user.UserResp.user:type_name -> cc.lianmi.im.user.User
	0,  // 2: cc.lianmi.im.user.User.gender:type_name -> cc.lianmi.im.user.Gender
	2,  // 3: cc.lianmi.im.user.User.userType:type_name -> cc.lianmi.im.user.UserType
	15, // 4: cc.lianmi.im.user.User.createdAt:type_name -> google.protobuf.Timestamp
	15, // 5: cc.lianmi.im.user.User.updatedAt:type_name -> google.protobuf.Timestamp
	6,  // 6: cc.lianmi.im.user.RegisterReq.user:type_name -> cc.lianmi.im.user.User
	3,  // 7: cc.lianmi.im.user.RegisterResp.status:type_name -> cc.lianmi.im.user.RespHeader
	3,  // 8: cc.lianmi.im.user.SmsCodeResp.status:type_name -> cc.lianmi.im.user.RespHeader
	3,  // 9: cc.lianmi.im.user.LoginResp.status:type_name -> cc.lianmi.im.user.RespHeader
	3,  // 10: cc.lianmi.im.user.ChanPasswdResp.status:type_name -> cc.lianmi.im.user.RespHeader
	4,  // 11: cc.lianmi.im.user.Users.GetUser:input_type -> cc.lianmi.im.user.UserReq
	9,  // 12: cc.lianmi.im.user.Users.GenerateSmsCode:input_type -> cc.lianmi.im.user.SmsCodeReq
	7,  // 13: cc.lianmi.im.user.Users.Register:input_type -> cc.lianmi.im.user.RegisterReq
	11, // 14: cc.lianmi.im.user.Users.Login:input_type -> cc.lianmi.im.user.LoginReq
	13, // 15: cc.lianmi.im.user.Users.ChanPasswd:input_type -> cc.lianmi.im.user.ChanPasswdReq
	5,  // 16: cc.lianmi.im.user.Users.GetUser:output_type -> cc.lianmi.im.user.UserResp
	10, // 17: cc.lianmi.im.user.Users.GenerateSmsCode:output_type -> cc.lianmi.im.user.SmsCodeResp
	8,  // 18: cc.lianmi.im.user.Users.Register:output_type -> cc.lianmi.im.user.RegisterResp
	12, // 19: cc.lianmi.im.user.Users.Login:output_type -> cc.lianmi.im.user.LoginResp
	14, // 20: cc.lianmi.im.user.Users.ChanPasswd:output_type -> cc.lianmi.im.user.ChanPasswdResp
	16, // [16:21] is the sub-list for method output_type
	11, // [11:16] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_api_proto_user_Account_proto_init() }
func file_api_proto_user_Account_proto_init() {
	if File_api_proto_user_Account_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_user_Account_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_user_Account_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_user_Account_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_user_Account_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_user_Account_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_user_Account_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_user_Account_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmsCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_user_Account_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmsCodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_user_Account_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_user_Account_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_user_Account_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChanPasswdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_user_Account_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChanPasswdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_user_Account_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_user_Account_proto_goTypes,
		DependencyIndexes: file_api_proto_user_Account_proto_depIdxs,
		EnumInfos:         file_api_proto_user_Account_proto_enumTypes,
		MessageInfos:      file_api_proto_user_Account_proto_msgTypes,
	}.Build()
	File_api_proto_user_Account_proto = out.File
	file_api_proto_user_Account_proto_rawDesc = nil
	file_api_proto_user_Account_proto_goTypes = nil
	file_api_proto_user_Account_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UsersClient is the client API for Users service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UsersClient interface {
	//获取用户信息
	GetUser(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*UserResp, error)
	//短信验证码
	GenerateSmsCode(ctx context.Context, in *SmsCodeReq, opts ...grpc.CallOption) (*SmsCodeResp, error)
	//注册
	Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error)
	//登录 Login,  根据手机号及密码， 获取token
	Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error)
	//修改密码
	ChanPasswd(ctx context.Context, in *ChanPasswdReq, opts ...grpc.CallOption) (*ChanPasswdResp, error)
}

type usersClient struct {
	cc grpc.ClientConnInterface
}

func NewUsersClient(cc grpc.ClientConnInterface) UsersClient {
	return &usersClient{cc}
}

func (c *usersClient) GetUser(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*UserResp, error) {
	out := new(UserResp)
	err := c.cc.Invoke(ctx, "/cc.lianmi.im.user.Users/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) GenerateSmsCode(ctx context.Context, in *SmsCodeReq, opts ...grpc.CallOption) (*SmsCodeResp, error) {
	out := new(SmsCodeResp)
	err := c.cc.Invoke(ctx, "/cc.lianmi.im.user.Users/GenerateSmsCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error) {
	out := new(RegisterResp)
	err := c.cc.Invoke(ctx, "/cc.lianmi.im.user.Users/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error) {
	out := new(LoginResp)
	err := c.cc.Invoke(ctx, "/cc.lianmi.im.user.Users/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) ChanPasswd(ctx context.Context, in *ChanPasswdReq, opts ...grpc.CallOption) (*ChanPasswdResp, error) {
	out := new(ChanPasswdResp)
	err := c.cc.Invoke(ctx, "/cc.lianmi.im.user.Users/ChanPasswd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UsersServer is the server API for Users service.
type UsersServer interface {
	//获取用户信息
	GetUser(context.Context, *UserReq) (*UserResp, error)
	//短信验证码
	GenerateSmsCode(context.Context, *SmsCodeReq) (*SmsCodeResp, error)
	//注册
	Register(context.Context, *RegisterReq) (*RegisterResp, error)
	//登录 Login,  根据手机号及密码， 获取token
	Login(context.Context, *LoginReq) (*LoginResp, error)
	//修改密码
	ChanPasswd(context.Context, *ChanPasswdReq) (*ChanPasswdResp, error)
}

// UnimplementedUsersServer can be embedded to have forward compatible implementations.
type UnimplementedUsersServer struct {
}

func (*UnimplementedUsersServer) GetUser(context.Context, *UserReq) (*UserResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}
func (*UnimplementedUsersServer) GenerateSmsCode(context.Context, *SmsCodeReq) (*SmsCodeResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateSmsCode not implemented")
}
func (*UnimplementedUsersServer) Register(context.Context, *RegisterReq) (*RegisterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (*UnimplementedUsersServer) Login(context.Context, *LoginReq) (*LoginResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedUsersServer) ChanPasswd(context.Context, *ChanPasswdReq) (*ChanPasswdResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChanPasswd not implemented")
}

func RegisterUsersServer(s *grpc.Server, srv UsersServer) {
	s.RegisterService(&_Users_serviceDesc, srv)
}

func _Users_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cc.lianmi.im.user.Users/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).GetUser(ctx, req.(*UserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_GenerateSmsCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SmsCodeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).GenerateSmsCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cc.lianmi.im.user.Users/GenerateSmsCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).GenerateSmsCode(ctx, req.(*SmsCodeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cc.lianmi.im.user.Users/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).Register(ctx, req.(*RegisterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cc.lianmi.im.user.Users/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).Login(ctx, req.(*LoginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_ChanPasswd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChanPasswdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).ChanPasswd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cc.lianmi.im.user.Users/ChanPasswd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).ChanPasswd(ctx, req.(*ChanPasswdReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Users_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cc.lianmi.im.user.Users",
	HandlerType: (*UsersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUser",
			Handler:    _Users_GetUser_Handler,
		},
		{
			MethodName: "GenerateSmsCode",
			Handler:    _Users_GenerateSmsCode_Handler,
		},
		{
			MethodName: "Register",
			Handler:    _Users_Register_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _Users_Login_Handler,
		},
		{
			MethodName: "ChanPasswd",
			Handler:    _Users_ChanPasswd_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/proto/user/Account.proto",
}
